/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ADUserOrGroupSummary Summary information related to AD Users or Groups.  List API returning this summary information can use search filter query to filter on specific fields supported by filters.  Supported Filters : 'And', 'Or', 'Equals', 'StartsWith', 'Contains'. See the field description to know the filter types it supports.
type ADUserOrGroupSummary struct {
	// AD container for this user or group.
	Container *string `json:"container,omitempty"`
	// Description number of this user or group. Supported Filters : 'Equals', 'StartsWith', 'Contains'.
	Description *string `json:"description,omitempty"`
	// Login name with domain of this user or group.
	DisplayName *string `json:"display_name,omitempty"`
	// Active Directory distinguished name for this user or group.
	DistinguishedName *string `json:"distinguished_name,omitempty"`
	// DNS name of the domain in which this user or group belongs. Supported Filters : 'Equals'.  Also, if 'Or' filter is used anywhere in filter string for this model class, then that 'Or' filter should nest only 'Equals' filter on 'domain' or 'id' field.
	Domain *string `json:"domain,omitempty"`
	// Email address of this user or group. Supported Filters : 'Equals', 'StartsWith', 'Contains'.
	Email *string `json:"email,omitempty"`
	// First name of this user or group.
	FirstName *string `json:"first_name,omitempty"`
	// Indicates if this object represents a group. This field is NOT supported in filter string. To use any filter on 'group', use 'group_only' query param directly.
	Group *bool `json:"group,omitempty"`
	// GUID of the user or group in RFC 4122 format. Supported Filters : 'Equals'.
	Guid *string `json:"guid,omitempty"`
	// Unique SID representing this AD User or Group. Supported Filters : 'Equals'.'Or' filter chain of 'Equals' filter can be used to query for more than one id. For this model, if 'Or' filter is used, then it should nest only 'Equals' filter on 'domain' or 'id' field.
	Id *string `json:"id,omitempty"`
	// Indicates if this user or group is a \"kiosk user\" that supports client authentication. Client authentication is the process of supporting client devices directly logging into resources.
	KioskUser *bool `json:"kiosk_user,omitempty"`
	// Last name of this user or group.
	LastName *string `json:"last_name,omitempty"`
	// Login name of this user or group.  Supported Filters : 'Equals', 'StartsWith', 'Contains'.
	LoginName *string `json:"login_name,omitempty"`
	// Login name, domain and name for this user or group, else display name
	LongDisplayName *string `json:"long_display_name,omitempty"`
	// Name of this user or group.  Supported Filters : 'Equals', 'StartsWith', 'Contains'.
	Name *string `json:"name,omitempty"`
	// Phone number of this user. Supported Filters : 'Equals', 'StartsWith', 'Contains'.
	Phone *string `json:"phone,omitempty"`
	// User or group's display name. This corresponds with displayName attribute in AD.
	UserDisplayName *string `json:"user_display_name,omitempty"`
	// User Principal name(UPN) of this user. Supported Filters : 'Equals', 'StartsWith', 'Contains'.
	UserPrincipalName *string `json:"user_principal_name,omitempty"`
}

// NewADUserOrGroupSummary instantiates a new ADUserOrGroupSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADUserOrGroupSummary() *ADUserOrGroupSummary {
	this := ADUserOrGroupSummary{}
	return &this
}

// NewADUserOrGroupSummaryWithDefaults instantiates a new ADUserOrGroupSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADUserOrGroupSummaryWithDefaults() *ADUserOrGroupSummary {
	this := ADUserOrGroupSummary{}
	return &this
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetContainer() string {
	if o == nil || o.Container == nil {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetContainerOk() (*string, bool) {
	if o == nil || o.Container == nil {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasContainer() bool {
	if o != nil && o.Container != nil {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *ADUserOrGroupSummary) SetContainer(v string) {
	o.Container = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ADUserOrGroupSummary) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ADUserOrGroupSummary) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetDistinguishedName() string {
	if o == nil || o.DistinguishedName == nil {
		var ret string
		return ret
	}
	return *o.DistinguishedName
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetDistinguishedNameOk() (*string, bool) {
	if o == nil || o.DistinguishedName == nil {
		return nil, false
	}
	return o.DistinguishedName, true
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasDistinguishedName() bool {
	if o != nil && o.DistinguishedName != nil {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given string and assigns it to the DistinguishedName field.
func (o *ADUserOrGroupSummary) SetDistinguishedName(v string) {
	o.DistinguishedName = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *ADUserOrGroupSummary) SetDomain(v string) {
	o.Domain = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ADUserOrGroupSummary) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ADUserOrGroupSummary) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetGroup() bool {
	if o == nil || o.Group == nil {
		var ret bool
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetGroupOk() (*bool, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given bool and assigns it to the Group field.
func (o *ADUserOrGroupSummary) SetGroup(v bool) {
	o.Group = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetGuid() string {
	if o == nil || o.Guid == nil {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetGuidOk() (*string, bool) {
	if o == nil || o.Guid == nil {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasGuid() bool {
	if o != nil && o.Guid != nil {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ADUserOrGroupSummary) SetGuid(v string) {
	o.Guid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ADUserOrGroupSummary) SetId(v string) {
	o.Id = &v
}

// GetKioskUser returns the KioskUser field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetKioskUser() bool {
	if o == nil || o.KioskUser == nil {
		var ret bool
		return ret
	}
	return *o.KioskUser
}

// GetKioskUserOk returns a tuple with the KioskUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetKioskUserOk() (*bool, bool) {
	if o == nil || o.KioskUser == nil {
		return nil, false
	}
	return o.KioskUser, true
}

// HasKioskUser returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasKioskUser() bool {
	if o != nil && o.KioskUser != nil {
		return true
	}

	return false
}

// SetKioskUser gets a reference to the given bool and assigns it to the KioskUser field.
func (o *ADUserOrGroupSummary) SetKioskUser(v bool) {
	o.KioskUser = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ADUserOrGroupSummary) SetLastName(v string) {
	o.LastName = &v
}

// GetLoginName returns the LoginName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetLoginName() string {
	if o == nil || o.LoginName == nil {
		var ret string
		return ret
	}
	return *o.LoginName
}

// GetLoginNameOk returns a tuple with the LoginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetLoginNameOk() (*string, bool) {
	if o == nil || o.LoginName == nil {
		return nil, false
	}
	return o.LoginName, true
}

// HasLoginName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasLoginName() bool {
	if o != nil && o.LoginName != nil {
		return true
	}

	return false
}

// SetLoginName gets a reference to the given string and assigns it to the LoginName field.
func (o *ADUserOrGroupSummary) SetLoginName(v string) {
	o.LoginName = &v
}

// GetLongDisplayName returns the LongDisplayName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetLongDisplayName() string {
	if o == nil || o.LongDisplayName == nil {
		var ret string
		return ret
	}
	return *o.LongDisplayName
}

// GetLongDisplayNameOk returns a tuple with the LongDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetLongDisplayNameOk() (*string, bool) {
	if o == nil || o.LongDisplayName == nil {
		return nil, false
	}
	return o.LongDisplayName, true
}

// HasLongDisplayName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasLongDisplayName() bool {
	if o != nil && o.LongDisplayName != nil {
		return true
	}

	return false
}

// SetLongDisplayName gets a reference to the given string and assigns it to the LongDisplayName field.
func (o *ADUserOrGroupSummary) SetLongDisplayName(v string) {
	o.LongDisplayName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ADUserOrGroupSummary) SetName(v string) {
	o.Name = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ADUserOrGroupSummary) SetPhone(v string) {
	o.Phone = &v
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetUserDisplayName() string {
	if o == nil || o.UserDisplayName == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetUserDisplayNameOk() (*string, bool) {
	if o == nil || o.UserDisplayName == nil {
		return nil, false
	}
	return o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasUserDisplayName() bool {
	if o != nil && o.UserDisplayName != nil {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *ADUserOrGroupSummary) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise.
func (o *ADUserOrGroupSummary) GetUserPrincipalName() string {
	if o == nil || o.UserPrincipalName == nil {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADUserOrGroupSummary) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil || o.UserPrincipalName == nil {
		return nil, false
	}
	return o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *ADUserOrGroupSummary) HasUserPrincipalName() bool {
	if o != nil && o.UserPrincipalName != nil {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *ADUserOrGroupSummary) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

func (o ADUserOrGroupSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Container != nil {
		toSerialize["container"] = o.Container
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.DistinguishedName != nil {
		toSerialize["distinguished_name"] = o.DistinguishedName
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Guid != nil {
		toSerialize["guid"] = o.Guid
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.KioskUser != nil {
		toSerialize["kiosk_user"] = o.KioskUser
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.LoginName != nil {
		toSerialize["login_name"] = o.LoginName
	}
	if o.LongDisplayName != nil {
		toSerialize["long_display_name"] = o.LongDisplayName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.UserDisplayName != nil {
		toSerialize["user_display_name"] = o.UserDisplayName
	}
	if o.UserPrincipalName != nil {
		toSerialize["user_principal_name"] = o.UserPrincipalName
	}
	return json.Marshal(toSerialize)
}

type NullableADUserOrGroupSummary struct {
	value *ADUserOrGroupSummary
	isSet bool
}

func (v NullableADUserOrGroupSummary) Get() *ADUserOrGroupSummary {
	return v.value
}

func (v *NullableADUserOrGroupSummary) Set(val *ADUserOrGroupSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableADUserOrGroupSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableADUserOrGroupSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADUserOrGroupSummary(val *ADUserOrGroupSummary) *NullableADUserOrGroupSummary {
	return &NullableADUserOrGroupSummary{value: val, isSet: true}
}

func (v NullableADUserOrGroupSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADUserOrGroupSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
