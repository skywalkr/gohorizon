/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ConnectionServerLdapBackupInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServerLdapBackupInfo{}

// ConnectionServerLdapBackupInfo Information related to connection server LDAP backup.
type ConnectionServerLdapBackupInfo struct {
	BackupInProgress *bool `json:"backup_in_progress,omitempty"`
	// Ldap Backup Frequency. * HOUR_1: Backup every 1 hour. * HOUR_6: Backup every 6 hours. * HOUR_12: Backup every 12 hours. * DAY_1: Backup every 1 day. * DAY_2: Backup every 2 days. * WEEK_1: Backup every 1 week. * WEEK_2: Backup every 2 weeks. * HOUR_0: Never Backup.
	FrequencyTime *string `json:"frequency_time,omitempty"`
	// Last Ldap Backup Status. * OK: Indicates that the status is OK. * DISK_FULL: Indicates that Disk is full for LDAP to be backed up. * UNABLE_TO_CREATE_DIR: Indicates that unable to create directory. * ERROR_UNKNOWN: Indicates that the error is unknown.
	LastLdapBackupStatus *string `json:"last_ldap_backup_status,omitempty"`
	// Last Ldap Backup Time.
	LastLdapBackupTime *int64 `json:"last_ldap_backup_time,omitempty"`
	// Location of the backup folder.
	LdapBackupFolder *string `json:"ldap_backup_folder,omitempty"`
	// Maximum number of backups.
	MaxNumber *int32 `json:"max_number,omitempty"`
	// Ldap backup time offset in minutes
	TimeOffset *int32 `json:"time_offset,omitempty"`
}

// NewConnectionServerLdapBackupInfo instantiates a new ConnectionServerLdapBackupInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerLdapBackupInfo() *ConnectionServerLdapBackupInfo {
	this := ConnectionServerLdapBackupInfo{}
	return &this
}

// NewConnectionServerLdapBackupInfoWithDefaults instantiates a new ConnectionServerLdapBackupInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerLdapBackupInfoWithDefaults() *ConnectionServerLdapBackupInfo {
	this := ConnectionServerLdapBackupInfo{}
	return &this
}

// GetBackupInProgress returns the BackupInProgress field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetBackupInProgress() bool {
	if o == nil || IsNil(o.BackupInProgress) {
		var ret bool
		return ret
	}
	return *o.BackupInProgress
}

// GetBackupInProgressOk returns a tuple with the BackupInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetBackupInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupInProgress) {
		return nil, false
	}
	return o.BackupInProgress, true
}

// HasBackupInProgress returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasBackupInProgress() bool {
	if o != nil && !IsNil(o.BackupInProgress) {
		return true
	}

	return false
}

// SetBackupInProgress gets a reference to the given bool and assigns it to the BackupInProgress field.
func (o *ConnectionServerLdapBackupInfo) SetBackupInProgress(v bool) {
	o.BackupInProgress = &v
}

// GetFrequencyTime returns the FrequencyTime field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetFrequencyTime() string {
	if o == nil || IsNil(o.FrequencyTime) {
		var ret string
		return ret
	}
	return *o.FrequencyTime
}

// GetFrequencyTimeOk returns a tuple with the FrequencyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetFrequencyTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FrequencyTime) {
		return nil, false
	}
	return o.FrequencyTime, true
}

// HasFrequencyTime returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasFrequencyTime() bool {
	if o != nil && !IsNil(o.FrequencyTime) {
		return true
	}

	return false
}

// SetFrequencyTime gets a reference to the given string and assigns it to the FrequencyTime field.
func (o *ConnectionServerLdapBackupInfo) SetFrequencyTime(v string) {
	o.FrequencyTime = &v
}

// GetLastLdapBackupStatus returns the LastLdapBackupStatus field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetLastLdapBackupStatus() string {
	if o == nil || IsNil(o.LastLdapBackupStatus) {
		var ret string
		return ret
	}
	return *o.LastLdapBackupStatus
}

// GetLastLdapBackupStatusOk returns a tuple with the LastLdapBackupStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetLastLdapBackupStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LastLdapBackupStatus) {
		return nil, false
	}
	return o.LastLdapBackupStatus, true
}

// HasLastLdapBackupStatus returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasLastLdapBackupStatus() bool {
	if o != nil && !IsNil(o.LastLdapBackupStatus) {
		return true
	}

	return false
}

// SetLastLdapBackupStatus gets a reference to the given string and assigns it to the LastLdapBackupStatus field.
func (o *ConnectionServerLdapBackupInfo) SetLastLdapBackupStatus(v string) {
	o.LastLdapBackupStatus = &v
}

// GetLastLdapBackupTime returns the LastLdapBackupTime field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetLastLdapBackupTime() int64 {
	if o == nil || IsNil(o.LastLdapBackupTime) {
		var ret int64
		return ret
	}
	return *o.LastLdapBackupTime
}

// GetLastLdapBackupTimeOk returns a tuple with the LastLdapBackupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetLastLdapBackupTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastLdapBackupTime) {
		return nil, false
	}
	return o.LastLdapBackupTime, true
}

// HasLastLdapBackupTime returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasLastLdapBackupTime() bool {
	if o != nil && !IsNil(o.LastLdapBackupTime) {
		return true
	}

	return false
}

// SetLastLdapBackupTime gets a reference to the given int64 and assigns it to the LastLdapBackupTime field.
func (o *ConnectionServerLdapBackupInfo) SetLastLdapBackupTime(v int64) {
	o.LastLdapBackupTime = &v
}

// GetLdapBackupFolder returns the LdapBackupFolder field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetLdapBackupFolder() string {
	if o == nil || IsNil(o.LdapBackupFolder) {
		var ret string
		return ret
	}
	return *o.LdapBackupFolder
}

// GetLdapBackupFolderOk returns a tuple with the LdapBackupFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetLdapBackupFolderOk() (*string, bool) {
	if o == nil || IsNil(o.LdapBackupFolder) {
		return nil, false
	}
	return o.LdapBackupFolder, true
}

// HasLdapBackupFolder returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasLdapBackupFolder() bool {
	if o != nil && !IsNil(o.LdapBackupFolder) {
		return true
	}

	return false
}

// SetLdapBackupFolder gets a reference to the given string and assigns it to the LdapBackupFolder field.
func (o *ConnectionServerLdapBackupInfo) SetLdapBackupFolder(v string) {
	o.LdapBackupFolder = &v
}

// GetMaxNumber returns the MaxNumber field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetMaxNumber() int32 {
	if o == nil || IsNil(o.MaxNumber) {
		var ret int32
		return ret
	}
	return *o.MaxNumber
}

// GetMaxNumberOk returns a tuple with the MaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetMaxNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxNumber) {
		return nil, false
	}
	return o.MaxNumber, true
}

// HasMaxNumber returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasMaxNumber() bool {
	if o != nil && !IsNil(o.MaxNumber) {
		return true
	}

	return false
}

// SetMaxNumber gets a reference to the given int32 and assigns it to the MaxNumber field.
func (o *ConnectionServerLdapBackupInfo) SetMaxNumber(v int32) {
	o.MaxNumber = &v
}

// GetTimeOffset returns the TimeOffset field value if set, zero value otherwise.
func (o *ConnectionServerLdapBackupInfo) GetTimeOffset() int32 {
	if o == nil || IsNil(o.TimeOffset) {
		var ret int32
		return ret
	}
	return *o.TimeOffset
}

// GetTimeOffsetOk returns a tuple with the TimeOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupInfo) GetTimeOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeOffset) {
		return nil, false
	}
	return o.TimeOffset, true
}

// HasTimeOffset returns a boolean if a field has been set.
func (o *ConnectionServerLdapBackupInfo) HasTimeOffset() bool {
	if o != nil && !IsNil(o.TimeOffset) {
		return true
	}

	return false
}

// SetTimeOffset gets a reference to the given int32 and assigns it to the TimeOffset field.
func (o *ConnectionServerLdapBackupInfo) SetTimeOffset(v int32) {
	o.TimeOffset = &v
}

func (o ConnectionServerLdapBackupInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServerLdapBackupInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupInProgress) {
		toSerialize["backup_in_progress"] = o.BackupInProgress
	}
	if !IsNil(o.FrequencyTime) {
		toSerialize["frequency_time"] = o.FrequencyTime
	}
	if !IsNil(o.LastLdapBackupStatus) {
		toSerialize["last_ldap_backup_status"] = o.LastLdapBackupStatus
	}
	if !IsNil(o.LastLdapBackupTime) {
		toSerialize["last_ldap_backup_time"] = o.LastLdapBackupTime
	}
	if !IsNil(o.LdapBackupFolder) {
		toSerialize["ldap_backup_folder"] = o.LdapBackupFolder
	}
	if !IsNil(o.MaxNumber) {
		toSerialize["max_number"] = o.MaxNumber
	}
	if !IsNil(o.TimeOffset) {
		toSerialize["time_offset"] = o.TimeOffset
	}
	return toSerialize, nil
}

type NullableConnectionServerLdapBackupInfo struct {
	value *ConnectionServerLdapBackupInfo
	isSet bool
}

func (v NullableConnectionServerLdapBackupInfo) Get() *ConnectionServerLdapBackupInfo {
	return v.value
}

func (v *NullableConnectionServerLdapBackupInfo) Set(val *ConnectionServerLdapBackupInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerLdapBackupInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerLdapBackupInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerLdapBackupInfo(val *ConnectionServerLdapBackupInfo) *NullableConnectionServerLdapBackupInfo {
	return &NullableConnectionServerLdapBackupInfo{value: val, isSet: true}
}

func (v NullableConnectionServerLdapBackupInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerLdapBackupInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


