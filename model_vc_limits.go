/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// VCLimits Information about the limits configured for Virtual Center
type VCLimits struct {
	// Maximum concurrent instant clone engine provisioning operations. This property has a default value of 20. This property has a minimum value of 1.
	InstantCloneEngineProvisioningLimit int32 `json:"instant_clone_engine_provisioning_limit"`
	// Maximum concurrent virtual center power operations. This property has a default value of 50. This property has a minimum value of 1.
	PowerOperationsLimit int32 `json:"power_operations_limit"`
	// Maximum concurrent virtual center provisioning operations. This property has a default value of 20. This property has a minimum value of 1.
	ProvisioningLimit int32 `json:"provisioning_limit"`
}

// NewVCLimits instantiates a new VCLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVCLimits(instantCloneEngineProvisioningLimit int32, powerOperationsLimit int32, provisioningLimit int32) *VCLimits {
	this := VCLimits{}
	this.InstantCloneEngineProvisioningLimit = instantCloneEngineProvisioningLimit
	this.PowerOperationsLimit = powerOperationsLimit
	this.ProvisioningLimit = provisioningLimit
	return &this
}

// NewVCLimitsWithDefaults instantiates a new VCLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVCLimitsWithDefaults() *VCLimits {
	this := VCLimits{}
	return &this
}

// GetInstantCloneEngineProvisioningLimit returns the InstantCloneEngineProvisioningLimit field value
func (o *VCLimits) GetInstantCloneEngineProvisioningLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InstantCloneEngineProvisioningLimit
}

// GetInstantCloneEngineProvisioningLimitOk returns a tuple with the InstantCloneEngineProvisioningLimit field value
// and a boolean to check if the value has been set.
func (o *VCLimits) GetInstantCloneEngineProvisioningLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstantCloneEngineProvisioningLimit, true
}

// SetInstantCloneEngineProvisioningLimit sets field value
func (o *VCLimits) SetInstantCloneEngineProvisioningLimit(v int32) {
	o.InstantCloneEngineProvisioningLimit = v
}

// GetPowerOperationsLimit returns the PowerOperationsLimit field value
func (o *VCLimits) GetPowerOperationsLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PowerOperationsLimit
}

// GetPowerOperationsLimitOk returns a tuple with the PowerOperationsLimit field value
// and a boolean to check if the value has been set.
func (o *VCLimits) GetPowerOperationsLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PowerOperationsLimit, true
}

// SetPowerOperationsLimit sets field value
func (o *VCLimits) SetPowerOperationsLimit(v int32) {
	o.PowerOperationsLimit = v
}

// GetProvisioningLimit returns the ProvisioningLimit field value
func (o *VCLimits) GetProvisioningLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProvisioningLimit
}

// GetProvisioningLimitOk returns a tuple with the ProvisioningLimit field value
// and a boolean to check if the value has been set.
func (o *VCLimits) GetProvisioningLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningLimit, true
}

// SetProvisioningLimit sets field value
func (o *VCLimits) SetProvisioningLimit(v int32) {
	o.ProvisioningLimit = v
}

func (o VCLimits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instant_clone_engine_provisioning_limit"] = o.InstantCloneEngineProvisioningLimit
	}
	if true {
		toSerialize["power_operations_limit"] = o.PowerOperationsLimit
	}
	if true {
		toSerialize["provisioning_limit"] = o.ProvisioningLimit
	}
	return json.Marshal(toSerialize)
}

type NullableVCLimits struct {
	value *VCLimits
	isSet bool
}

func (v NullableVCLimits) Get() *VCLimits {
	return v.value
}

func (v *NullableVCLimits) Set(val *VCLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableVCLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableVCLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVCLimits(val *VCLimits) *NullableVCLimits {
	return &NullableVCLimits{value: val, isSet: true}
}

func (v NullableVCLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVCLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
