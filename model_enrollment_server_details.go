/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the EnrollmentServerDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentServerDetails{}

// EnrollmentServerDetails struct for EnrollmentServerDetails
type EnrollmentServerDetails struct {
	// Enrollment server dns name.
	DnsName *string `json:"dns_name,omitempty"`
	// Unique ID of the Enrollment Server.
	Id *string `json:"id,omitempty"`
	// Enrollment server status. * OK: The state of enrollment server is OK. * ERROR: The enrollment server has an error.
	Status *string `json:"status,omitempty"`
}

// NewEnrollmentServerDetails instantiates a new EnrollmentServerDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentServerDetails() *EnrollmentServerDetails {
	this := EnrollmentServerDetails{}
	return &this
}

// NewEnrollmentServerDetailsWithDefaults instantiates a new EnrollmentServerDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentServerDetailsWithDefaults() *EnrollmentServerDetails {
	this := EnrollmentServerDetails{}
	return &this
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *EnrollmentServerDetails) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentServerDetails) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *EnrollmentServerDetails) HasDnsName() bool {
	if o != nil && !IsNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *EnrollmentServerDetails) SetDnsName(v string) {
	o.DnsName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnrollmentServerDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentServerDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnrollmentServerDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnrollmentServerDetails) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnrollmentServerDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentServerDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnrollmentServerDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EnrollmentServerDetails) SetStatus(v string) {
	o.Status = &v
}

func (o EnrollmentServerDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentServerDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsName) {
		toSerialize["dns_name"] = o.DnsName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableEnrollmentServerDetails struct {
	value *EnrollmentServerDetails
	isSet bool
}

func (v NullableEnrollmentServerDetails) Get() *EnrollmentServerDetails {
	return v.value
}

func (v *NullableEnrollmentServerDetails) Set(val *EnrollmentServerDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentServerDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentServerDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentServerDetails(val *EnrollmentServerDetails) *NullableEnrollmentServerDetails {
	return &NullableEnrollmentServerDetails{value: val, isSet: true}
}

func (v NullableEnrollmentServerDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentServerDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


