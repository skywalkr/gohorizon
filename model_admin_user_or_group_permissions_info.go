/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the AdminUserOrGroupPermissionsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminUserOrGroupPermissionsInfo{}

// AdminUserOrGroupPermissionsInfo Information about admin user or group permissions.
type AdminUserOrGroupPermissionsInfo struct {
	// Set of privileges information based on federated access groups for this user or group.
	FederatedPrivilegesInfo []AdminUserOrGroupPrivilegesInfo `json:"federated_privileges_info,omitempty"`
	HelpDeskAdmin *bool `json:"help_desk_admin,omitempty"`
	// Unique SID representing the admin user or group.
	Id *string `json:"id,omitempty"`
	// Set of privileges information based on local access groups for this user or group.
	LocalPrivilegesInfo []AdminUserOrGroupPrivilegesInfo `json:"local_privileges_info,omitempty"`
}

// NewAdminUserOrGroupPermissionsInfo instantiates a new AdminUserOrGroupPermissionsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminUserOrGroupPermissionsInfo() *AdminUserOrGroupPermissionsInfo {
	this := AdminUserOrGroupPermissionsInfo{}
	return &this
}

// NewAdminUserOrGroupPermissionsInfoWithDefaults instantiates a new AdminUserOrGroupPermissionsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminUserOrGroupPermissionsInfoWithDefaults() *AdminUserOrGroupPermissionsInfo {
	this := AdminUserOrGroupPermissionsInfo{}
	return &this
}

// GetFederatedPrivilegesInfo returns the FederatedPrivilegesInfo field value if set, zero value otherwise.
func (o *AdminUserOrGroupPermissionsInfo) GetFederatedPrivilegesInfo() []AdminUserOrGroupPrivilegesInfo {
	if o == nil || IsNil(o.FederatedPrivilegesInfo) {
		var ret []AdminUserOrGroupPrivilegesInfo
		return ret
	}
	return o.FederatedPrivilegesInfo
}

// GetFederatedPrivilegesInfoOk returns a tuple with the FederatedPrivilegesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUserOrGroupPermissionsInfo) GetFederatedPrivilegesInfoOk() ([]AdminUserOrGroupPrivilegesInfo, bool) {
	if o == nil || IsNil(o.FederatedPrivilegesInfo) {
		return nil, false
	}
	return o.FederatedPrivilegesInfo, true
}

// HasFederatedPrivilegesInfo returns a boolean if a field has been set.
func (o *AdminUserOrGroupPermissionsInfo) HasFederatedPrivilegesInfo() bool {
	if o != nil && !IsNil(o.FederatedPrivilegesInfo) {
		return true
	}

	return false
}

// SetFederatedPrivilegesInfo gets a reference to the given []AdminUserOrGroupPrivilegesInfo and assigns it to the FederatedPrivilegesInfo field.
func (o *AdminUserOrGroupPermissionsInfo) SetFederatedPrivilegesInfo(v []AdminUserOrGroupPrivilegesInfo) {
	o.FederatedPrivilegesInfo = v
}

// GetHelpDeskAdmin returns the HelpDeskAdmin field value if set, zero value otherwise.
func (o *AdminUserOrGroupPermissionsInfo) GetHelpDeskAdmin() bool {
	if o == nil || IsNil(o.HelpDeskAdmin) {
		var ret bool
		return ret
	}
	return *o.HelpDeskAdmin
}

// GetHelpDeskAdminOk returns a tuple with the HelpDeskAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUserOrGroupPermissionsInfo) GetHelpDeskAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.HelpDeskAdmin) {
		return nil, false
	}
	return o.HelpDeskAdmin, true
}

// HasHelpDeskAdmin returns a boolean if a field has been set.
func (o *AdminUserOrGroupPermissionsInfo) HasHelpDeskAdmin() bool {
	if o != nil && !IsNil(o.HelpDeskAdmin) {
		return true
	}

	return false
}

// SetHelpDeskAdmin gets a reference to the given bool and assigns it to the HelpDeskAdmin field.
func (o *AdminUserOrGroupPermissionsInfo) SetHelpDeskAdmin(v bool) {
	o.HelpDeskAdmin = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdminUserOrGroupPermissionsInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUserOrGroupPermissionsInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdminUserOrGroupPermissionsInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdminUserOrGroupPermissionsInfo) SetId(v string) {
	o.Id = &v
}

// GetLocalPrivilegesInfo returns the LocalPrivilegesInfo field value if set, zero value otherwise.
func (o *AdminUserOrGroupPermissionsInfo) GetLocalPrivilegesInfo() []AdminUserOrGroupPrivilegesInfo {
	if o == nil || IsNil(o.LocalPrivilegesInfo) {
		var ret []AdminUserOrGroupPrivilegesInfo
		return ret
	}
	return o.LocalPrivilegesInfo
}

// GetLocalPrivilegesInfoOk returns a tuple with the LocalPrivilegesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUserOrGroupPermissionsInfo) GetLocalPrivilegesInfoOk() ([]AdminUserOrGroupPrivilegesInfo, bool) {
	if o == nil || IsNil(o.LocalPrivilegesInfo) {
		return nil, false
	}
	return o.LocalPrivilegesInfo, true
}

// HasLocalPrivilegesInfo returns a boolean if a field has been set.
func (o *AdminUserOrGroupPermissionsInfo) HasLocalPrivilegesInfo() bool {
	if o != nil && !IsNil(o.LocalPrivilegesInfo) {
		return true
	}

	return false
}

// SetLocalPrivilegesInfo gets a reference to the given []AdminUserOrGroupPrivilegesInfo and assigns it to the LocalPrivilegesInfo field.
func (o *AdminUserOrGroupPermissionsInfo) SetLocalPrivilegesInfo(v []AdminUserOrGroupPrivilegesInfo) {
	o.LocalPrivilegesInfo = v
}

func (o AdminUserOrGroupPermissionsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminUserOrGroupPermissionsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FederatedPrivilegesInfo) {
		toSerialize["federated_privileges_info"] = o.FederatedPrivilegesInfo
	}
	if !IsNil(o.HelpDeskAdmin) {
		toSerialize["help_desk_admin"] = o.HelpDeskAdmin
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LocalPrivilegesInfo) {
		toSerialize["local_privileges_info"] = o.LocalPrivilegesInfo
	}
	return toSerialize, nil
}

type NullableAdminUserOrGroupPermissionsInfo struct {
	value *AdminUserOrGroupPermissionsInfo
	isSet bool
}

func (v NullableAdminUserOrGroupPermissionsInfo) Get() *AdminUserOrGroupPermissionsInfo {
	return v.value
}

func (v *NullableAdminUserOrGroupPermissionsInfo) Set(val *AdminUserOrGroupPermissionsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminUserOrGroupPermissionsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminUserOrGroupPermissionsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminUserOrGroupPermissionsInfo(val *AdminUserOrGroupPermissionsInfo) *NullableAdminUserOrGroupPermissionsInfo {
	return &NullableAdminUserOrGroupPermissionsInfo{value: val, isSet: true}
}

func (v NullableAdminUserOrGroupPermissionsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminUserOrGroupPermissionsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


