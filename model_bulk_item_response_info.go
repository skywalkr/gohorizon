/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// BulkItemResponseInfo Response for each of the operation in a bulk operation.
type BulkItemResponseInfo struct {
	// Reasons for the failure of the operation.
	ErrorMessages *[]string `json:"error_messages,omitempty"`
	// Unique ID representing the entity on which the operation was performed. Will not be populated for create operation if the operation fails.
	Id *string `json:"id,omitempty"`
	// Key on which the operation was performed.
	Key *string `json:"key,omitempty"`
	// Response HTTP status code of the operation.
	StatusCode int32 `json:"status_code"`
	// Timestamp in milliseconds when the operation failed. Measured as epoch time.
	Timestamp int64 `json:"timestamp"`
}

// NewBulkItemResponseInfo instantiates a new BulkItemResponseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkItemResponseInfo(statusCode int32, timestamp int64) *BulkItemResponseInfo {
	this := BulkItemResponseInfo{}
	this.StatusCode = statusCode
	this.Timestamp = timestamp
	return &this
}

// NewBulkItemResponseInfoWithDefaults instantiates a new BulkItemResponseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkItemResponseInfoWithDefaults() *BulkItemResponseInfo {
	this := BulkItemResponseInfo{}
	return &this
}

// GetErrorMessages returns the ErrorMessages field value if set, zero value otherwise.
func (o *BulkItemResponseInfo) GetErrorMessages() []string {
	if o == nil || o.ErrorMessages == nil {
		var ret []string
		return ret
	}
	return *o.ErrorMessages
}

// GetErrorMessagesOk returns a tuple with the ErrorMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkItemResponseInfo) GetErrorMessagesOk() (*[]string, bool) {
	if o == nil || o.ErrorMessages == nil {
		return nil, false
	}
	return o.ErrorMessages, true
}

// HasErrorMessages returns a boolean if a field has been set.
func (o *BulkItemResponseInfo) HasErrorMessages() bool {
	if o != nil && o.ErrorMessages != nil {
		return true
	}

	return false
}

// SetErrorMessages gets a reference to the given []string and assigns it to the ErrorMessages field.
func (o *BulkItemResponseInfo) SetErrorMessages(v []string) {
	o.ErrorMessages = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BulkItemResponseInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkItemResponseInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BulkItemResponseInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BulkItemResponseInfo) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *BulkItemResponseInfo) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkItemResponseInfo) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *BulkItemResponseInfo) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *BulkItemResponseInfo) SetKey(v string) {
	o.Key = &v
}

// GetStatusCode returns the StatusCode field value
func (o *BulkItemResponseInfo) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *BulkItemResponseInfo) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *BulkItemResponseInfo) SetStatusCode(v int32) {
	o.StatusCode = v
}

// GetTimestamp returns the Timestamp field value
func (o *BulkItemResponseInfo) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *BulkItemResponseInfo) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *BulkItemResponseInfo) SetTimestamp(v int64) {
	o.Timestamp = v
}

func (o BulkItemResponseInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorMessages != nil {
		toSerialize["error_messages"] = o.ErrorMessages
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["status_code"] = o.StatusCode
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableBulkItemResponseInfo struct {
	value *BulkItemResponseInfo
	isSet bool
}

func (v NullableBulkItemResponseInfo) Get() *BulkItemResponseInfo {
	return v.value
}

func (v *NullableBulkItemResponseInfo) Set(val *BulkItemResponseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkItemResponseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkItemResponseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkItemResponseInfo(val *BulkItemResponseInfo) *NullableBulkItemResponseInfo {
	return &NullableBulkItemResponseInfo{value: val, isSet: true}
}

func (v NullableBulkItemResponseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkItemResponseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
