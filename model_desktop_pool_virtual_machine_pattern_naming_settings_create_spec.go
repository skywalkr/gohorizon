/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec Applicable To: Automated desktop pool. <br>Naming pattern settings for Automated desktop pool.
type DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec struct {
	// Maximum number of machines in the desktop pool. <br> Default value is 1.
	MaxNumberOfMachines *int32 `json:"max_number_of_machines,omitempty"`
	// This is applicable if provisioning_time is set to ON_DEMAND with default value of 0. <br>
	MinNumberOfMachines *int32 `json:"min_number_of_machines,omitempty"`
	// Virtual machines will be named according to the specified naming pattern.<br> By default, view manager appends a unique number to the specified pattern to provide a unique name for each virtual machine. To place this unique number elsewhere in the pattern, use '{n}'. (For example: vm-{n}-sales.) The unique number can also be made a fixed length. (For example: vm-{n:fixed=3}-sales will name VMs from vm-001-sales to vm-999-sales). <br>Machine names are constrained to a maximum size of 15 characters including the unique number. Therefore, care must be taken when choosing a pattern. If the maximum desktop size is 9 machines, the pattern must be at most 14 characters. For 99 machines, 13 characters, for 999 machines, 12 characters. For 9999 machines, 11 characters. If using a fixed size token, use a maximum of 14 characters for \"n=1\", 13 characters for \"n=2\", 12 characters for \"n=3\", and 11 characters for \"n=4\".<br>If {n} is specified with no size, a size of 2 is automatically used and if no {} is specified, {n=2} is automatically appended to the end of the pattern.
	NamingPattern string `json:"naming_pattern"`
	// Number of spare powered on machines. <br> Default value is 1.
	NumberOfSpareMachines *int32 `json:"number_of_spare_machines,omitempty"`
	// Determines when the machines are provisioned. <br> Default value is UP_FRONT * ON_DEMAND: Provision machines on demand. * UP_FRONT: Provision all machines up-front.
	ProvisioningTime *string `json:"provisioning_time,omitempty"`
}

// NewDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec instantiates a new DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec(namingPattern string) *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec {
	this := DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec{}
	this.NamingPattern = namingPattern
	return &this
}

// NewDesktopPoolVirtualMachinePatternNamingSettingsCreateSpecWithDefaults instantiates a new DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesktopPoolVirtualMachinePatternNamingSettingsCreateSpecWithDefaults() *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec {
	this := DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec{}
	return &this
}

// GetMaxNumberOfMachines returns the MaxNumberOfMachines field value if set, zero value otherwise.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetMaxNumberOfMachines() int32 {
	if o == nil || o.MaxNumberOfMachines == nil {
		var ret int32
		return ret
	}
	return *o.MaxNumberOfMachines
}

// GetMaxNumberOfMachinesOk returns a tuple with the MaxNumberOfMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetMaxNumberOfMachinesOk() (*int32, bool) {
	if o == nil || o.MaxNumberOfMachines == nil {
		return nil, false
	}
	return o.MaxNumberOfMachines, true
}

// HasMaxNumberOfMachines returns a boolean if a field has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) HasMaxNumberOfMachines() bool {
	if o != nil && o.MaxNumberOfMachines != nil {
		return true
	}

	return false
}

// SetMaxNumberOfMachines gets a reference to the given int32 and assigns it to the MaxNumberOfMachines field.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) SetMaxNumberOfMachines(v int32) {
	o.MaxNumberOfMachines = &v
}

// GetMinNumberOfMachines returns the MinNumberOfMachines field value if set, zero value otherwise.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetMinNumberOfMachines() int32 {
	if o == nil || o.MinNumberOfMachines == nil {
		var ret int32
		return ret
	}
	return *o.MinNumberOfMachines
}

// GetMinNumberOfMachinesOk returns a tuple with the MinNumberOfMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetMinNumberOfMachinesOk() (*int32, bool) {
	if o == nil || o.MinNumberOfMachines == nil {
		return nil, false
	}
	return o.MinNumberOfMachines, true
}

// HasMinNumberOfMachines returns a boolean if a field has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) HasMinNumberOfMachines() bool {
	if o != nil && o.MinNumberOfMachines != nil {
		return true
	}

	return false
}

// SetMinNumberOfMachines gets a reference to the given int32 and assigns it to the MinNumberOfMachines field.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) SetMinNumberOfMachines(v int32) {
	o.MinNumberOfMachines = &v
}

// GetNamingPattern returns the NamingPattern field value
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetNamingPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamingPattern
}

// GetNamingPatternOk returns a tuple with the NamingPattern field value
// and a boolean to check if the value has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetNamingPatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamingPattern, true
}

// SetNamingPattern sets field value
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) SetNamingPattern(v string) {
	o.NamingPattern = v
}

// GetNumberOfSpareMachines returns the NumberOfSpareMachines field value if set, zero value otherwise.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetNumberOfSpareMachines() int32 {
	if o == nil || o.NumberOfSpareMachines == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfSpareMachines
}

// GetNumberOfSpareMachinesOk returns a tuple with the NumberOfSpareMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetNumberOfSpareMachinesOk() (*int32, bool) {
	if o == nil || o.NumberOfSpareMachines == nil {
		return nil, false
	}
	return o.NumberOfSpareMachines, true
}

// HasNumberOfSpareMachines returns a boolean if a field has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) HasNumberOfSpareMachines() bool {
	if o != nil && o.NumberOfSpareMachines != nil {
		return true
	}

	return false
}

// SetNumberOfSpareMachines gets a reference to the given int32 and assigns it to the NumberOfSpareMachines field.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) SetNumberOfSpareMachines(v int32) {
	o.NumberOfSpareMachines = &v
}

// GetProvisioningTime returns the ProvisioningTime field value if set, zero value otherwise.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetProvisioningTime() string {
	if o == nil || o.ProvisioningTime == nil {
		var ret string
		return ret
	}
	return *o.ProvisioningTime
}

// GetProvisioningTimeOk returns a tuple with the ProvisioningTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) GetProvisioningTimeOk() (*string, bool) {
	if o == nil || o.ProvisioningTime == nil {
		return nil, false
	}
	return o.ProvisioningTime, true
}

// HasProvisioningTime returns a boolean if a field has been set.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) HasProvisioningTime() bool {
	if o != nil && o.ProvisioningTime != nil {
		return true
	}

	return false
}

// SetProvisioningTime gets a reference to the given string and assigns it to the ProvisioningTime field.
func (o *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) SetProvisioningTime(v string) {
	o.ProvisioningTime = &v
}

func (o DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxNumberOfMachines != nil {
		toSerialize["max_number_of_machines"] = o.MaxNumberOfMachines
	}
	if o.MinNumberOfMachines != nil {
		toSerialize["min_number_of_machines"] = o.MinNumberOfMachines
	}
	if true {
		toSerialize["naming_pattern"] = o.NamingPattern
	}
	if o.NumberOfSpareMachines != nil {
		toSerialize["number_of_spare_machines"] = o.NumberOfSpareMachines
	}
	if o.ProvisioningTime != nil {
		toSerialize["provisioning_time"] = o.ProvisioningTime
	}
	return json.Marshal(toSerialize)
}

type NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec struct {
	value *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec
	isSet bool
}

func (v NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) Get() *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec {
	return v.value
}

func (v *NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) Set(val *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec(val *DesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) *NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec {
	return &NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec{value: val, isSet: true}
}

func (v NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesktopPoolVirtualMachinePatternNamingSettingsCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
