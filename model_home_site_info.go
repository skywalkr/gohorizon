/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the HomeSiteInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HomeSiteInfo{}

// HomeSiteInfo Information related to home sites in a pod federation.<br>If both global Desktop Entitlement ID and global Application Entitlement ID are unset, then this site is the global home site.<br>Supported Filters : 'And', 'Or' and 'Equals'.<br>See the field description to know the filter types it supports.
type HomeSiteInfo struct {
	// SID of the user or group for whom this is the home site.<br>Supported Filters: 'Equals'.
	AdUserOrGroupId *string `json:"ad_user_or_group_id,omitempty"`
	// ID of the Global Application Entitlement for which this site is the overriding home site.<br>Supported Filters: 'Equals'.
	GlobalApplicationEntitlementId *string `json:"global_application_entitlement_id,omitempty"`
	// ID of the Global Desktop Entitlement for which this site is the overriding home site.<br>Supported Filters: 'Equals'.
	GlobalDesktopEntitlementId *string `json:"global_desktop_entitlement_id,omitempty"`
	// Unique ID representing this home site assignment.<br>Supported Filters: 'Equals'.
	Id *string `json:"id,omitempty"`
	// ID representing this home site.<br>Supported Filters: 'Equals'.
	SiteId *string `json:"site_id,omitempty"`
}

// NewHomeSiteInfo instantiates a new HomeSiteInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHomeSiteInfo() *HomeSiteInfo {
	this := HomeSiteInfo{}
	return &this
}

// NewHomeSiteInfoWithDefaults instantiates a new HomeSiteInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHomeSiteInfoWithDefaults() *HomeSiteInfo {
	this := HomeSiteInfo{}
	return &this
}

// GetAdUserOrGroupId returns the AdUserOrGroupId field value if set, zero value otherwise.
func (o *HomeSiteInfo) GetAdUserOrGroupId() string {
	if o == nil || IsNil(o.AdUserOrGroupId) {
		var ret string
		return ret
	}
	return *o.AdUserOrGroupId
}

// GetAdUserOrGroupIdOk returns a tuple with the AdUserOrGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteInfo) GetAdUserOrGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdUserOrGroupId) {
		return nil, false
	}
	return o.AdUserOrGroupId, true
}

// HasAdUserOrGroupId returns a boolean if a field has been set.
func (o *HomeSiteInfo) HasAdUserOrGroupId() bool {
	if o != nil && !IsNil(o.AdUserOrGroupId) {
		return true
	}

	return false
}

// SetAdUserOrGroupId gets a reference to the given string and assigns it to the AdUserOrGroupId field.
func (o *HomeSiteInfo) SetAdUserOrGroupId(v string) {
	o.AdUserOrGroupId = &v
}

// GetGlobalApplicationEntitlementId returns the GlobalApplicationEntitlementId field value if set, zero value otherwise.
func (o *HomeSiteInfo) GetGlobalApplicationEntitlementId() string {
	if o == nil || IsNil(o.GlobalApplicationEntitlementId) {
		var ret string
		return ret
	}
	return *o.GlobalApplicationEntitlementId
}

// GetGlobalApplicationEntitlementIdOk returns a tuple with the GlobalApplicationEntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteInfo) GetGlobalApplicationEntitlementIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalApplicationEntitlementId) {
		return nil, false
	}
	return o.GlobalApplicationEntitlementId, true
}

// HasGlobalApplicationEntitlementId returns a boolean if a field has been set.
func (o *HomeSiteInfo) HasGlobalApplicationEntitlementId() bool {
	if o != nil && !IsNil(o.GlobalApplicationEntitlementId) {
		return true
	}

	return false
}

// SetGlobalApplicationEntitlementId gets a reference to the given string and assigns it to the GlobalApplicationEntitlementId field.
func (o *HomeSiteInfo) SetGlobalApplicationEntitlementId(v string) {
	o.GlobalApplicationEntitlementId = &v
}

// GetGlobalDesktopEntitlementId returns the GlobalDesktopEntitlementId field value if set, zero value otherwise.
func (o *HomeSiteInfo) GetGlobalDesktopEntitlementId() string {
	if o == nil || IsNil(o.GlobalDesktopEntitlementId) {
		var ret string
		return ret
	}
	return *o.GlobalDesktopEntitlementId
}

// GetGlobalDesktopEntitlementIdOk returns a tuple with the GlobalDesktopEntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteInfo) GetGlobalDesktopEntitlementIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalDesktopEntitlementId) {
		return nil, false
	}
	return o.GlobalDesktopEntitlementId, true
}

// HasGlobalDesktopEntitlementId returns a boolean if a field has been set.
func (o *HomeSiteInfo) HasGlobalDesktopEntitlementId() bool {
	if o != nil && !IsNil(o.GlobalDesktopEntitlementId) {
		return true
	}

	return false
}

// SetGlobalDesktopEntitlementId gets a reference to the given string and assigns it to the GlobalDesktopEntitlementId field.
func (o *HomeSiteInfo) SetGlobalDesktopEntitlementId(v string) {
	o.GlobalDesktopEntitlementId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HomeSiteInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HomeSiteInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HomeSiteInfo) SetId(v string) {
	o.Id = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *HomeSiteInfo) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteInfo) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *HomeSiteInfo) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *HomeSiteInfo) SetSiteId(v string) {
	o.SiteId = &v
}

func (o HomeSiteInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HomeSiteInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdUserOrGroupId) {
		toSerialize["ad_user_or_group_id"] = o.AdUserOrGroupId
	}
	if !IsNil(o.GlobalApplicationEntitlementId) {
		toSerialize["global_application_entitlement_id"] = o.GlobalApplicationEntitlementId
	}
	if !IsNil(o.GlobalDesktopEntitlementId) {
		toSerialize["global_desktop_entitlement_id"] = o.GlobalDesktopEntitlementId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	return toSerialize, nil
}

type NullableHomeSiteInfo struct {
	value *HomeSiteInfo
	isSet bool
}

func (v NullableHomeSiteInfo) Get() *HomeSiteInfo {
	return v.value
}

func (v *NullableHomeSiteInfo) Set(val *HomeSiteInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHomeSiteInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHomeSiteInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHomeSiteInfo(val *HomeSiteInfo) *NullableHomeSiteInfo {
	return &NullableHomeSiteInfo{value: val, isSet: true}
}

func (v NullableHomeSiteInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHomeSiteInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


