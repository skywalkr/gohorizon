/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ADDomainUpdateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADDomainUpdateSpec{}

// ADDomainUpdateSpec Specification of ADDomain
type ADDomainUpdateSpec struct {
	AdDomainAdvancedSettings ADDomainAdvancedSettings `json:"ad_domain_advanced_settings"`
	PrimaryAccount ADDomainServiceAccountSpec `json:"primary_account"`
}

type _ADDomainUpdateSpec ADDomainUpdateSpec

// NewADDomainUpdateSpec instantiates a new ADDomainUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADDomainUpdateSpec(adDomainAdvancedSettings ADDomainAdvancedSettings, primaryAccount ADDomainServiceAccountSpec) *ADDomainUpdateSpec {
	this := ADDomainUpdateSpec{}
	this.AdDomainAdvancedSettings = adDomainAdvancedSettings
	this.PrimaryAccount = primaryAccount
	return &this
}

// NewADDomainUpdateSpecWithDefaults instantiates a new ADDomainUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADDomainUpdateSpecWithDefaults() *ADDomainUpdateSpec {
	this := ADDomainUpdateSpec{}
	return &this
}

// GetAdDomainAdvancedSettings returns the AdDomainAdvancedSettings field value
func (o *ADDomainUpdateSpec) GetAdDomainAdvancedSettings() ADDomainAdvancedSettings {
	if o == nil {
		var ret ADDomainAdvancedSettings
		return ret
	}

	return o.AdDomainAdvancedSettings
}

// GetAdDomainAdvancedSettingsOk returns a tuple with the AdDomainAdvancedSettings field value
// and a boolean to check if the value has been set.
func (o *ADDomainUpdateSpec) GetAdDomainAdvancedSettingsOk() (*ADDomainAdvancedSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdDomainAdvancedSettings, true
}

// SetAdDomainAdvancedSettings sets field value
func (o *ADDomainUpdateSpec) SetAdDomainAdvancedSettings(v ADDomainAdvancedSettings) {
	o.AdDomainAdvancedSettings = v
}

// GetPrimaryAccount returns the PrimaryAccount field value
func (o *ADDomainUpdateSpec) GetPrimaryAccount() ADDomainServiceAccountSpec {
	if o == nil {
		var ret ADDomainServiceAccountSpec
		return ret
	}

	return o.PrimaryAccount
}

// GetPrimaryAccountOk returns a tuple with the PrimaryAccount field value
// and a boolean to check if the value has been set.
func (o *ADDomainUpdateSpec) GetPrimaryAccountOk() (*ADDomainServiceAccountSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryAccount, true
}

// SetPrimaryAccount sets field value
func (o *ADDomainUpdateSpec) SetPrimaryAccount(v ADDomainServiceAccountSpec) {
	o.PrimaryAccount = v
}

func (o ADDomainUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADDomainUpdateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ad_domain_advanced_settings"] = o.AdDomainAdvancedSettings
	toSerialize["primary_account"] = o.PrimaryAccount
	return toSerialize, nil
}

func (o *ADDomainUpdateSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ad_domain_advanced_settings",
		"primary_account",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varADDomainUpdateSpec := _ADDomainUpdateSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varADDomainUpdateSpec)

	if err != nil {
		return err
	}

	*o = ADDomainUpdateSpec(varADDomainUpdateSpec)

	return err
}

type NullableADDomainUpdateSpec struct {
	value *ADDomainUpdateSpec
	isSet bool
}

func (v NullableADDomainUpdateSpec) Get() *ADDomainUpdateSpec {
	return v.value
}

func (v *NullableADDomainUpdateSpec) Set(val *ADDomainUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableADDomainUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableADDomainUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADDomainUpdateSpec(val *ADDomainUpdateSpec) *NullableADDomainUpdateSpec {
	return &NullableADDomainUpdateSpec{value: val, isSet: true}
}

func (v NullableADDomainUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADDomainUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


