/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ConnectionServerUnauthenticatedAccessInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServerUnauthenticatedAccessInfo{}

// ConnectionServerUnauthenticatedAccessInfo Information related to connection server unauthenticated access settings.
type ConnectionServerUnauthenticatedAccessInfo struct {
	// Block older clients which don't support client puzzles  to prevent DOS attack on RDSH servers for Unauthenticated Access.
	BlockUnsupportedClients *bool `json:"block_unsupported_clients,omitempty"`
	// Client puzzle difficulty for DoS attack prevention for Unauthenticated Access.  Higher difficulty might increase login time and affect user experience.
	ClientPuzzleDifficulty *int32 `json:"client_puzzle_difficulty,omitempty"`
	// Default user for unauthenticated access in this connection server.
	DefaultUnauthUserId *string `json:"default_unauth_user_id,omitempty"`
	// Indicates whether unauthenticated access is enabled in this connection server.
	Enabled *bool `json:"enabled,omitempty"`
	// Unauthenticated Access user idle session timeout in minutes.
	UserIdleTimeout *int32 `json:"user_idle_timeout,omitempty"`
}

// NewConnectionServerUnauthenticatedAccessInfo instantiates a new ConnectionServerUnauthenticatedAccessInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerUnauthenticatedAccessInfo() *ConnectionServerUnauthenticatedAccessInfo {
	this := ConnectionServerUnauthenticatedAccessInfo{}
	return &this
}

// NewConnectionServerUnauthenticatedAccessInfoWithDefaults instantiates a new ConnectionServerUnauthenticatedAccessInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerUnauthenticatedAccessInfoWithDefaults() *ConnectionServerUnauthenticatedAccessInfo {
	this := ConnectionServerUnauthenticatedAccessInfo{}
	return &this
}

// GetBlockUnsupportedClients returns the BlockUnsupportedClients field value if set, zero value otherwise.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetBlockUnsupportedClients() bool {
	if o == nil || IsNil(o.BlockUnsupportedClients) {
		var ret bool
		return ret
	}
	return *o.BlockUnsupportedClients
}

// GetBlockUnsupportedClientsOk returns a tuple with the BlockUnsupportedClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetBlockUnsupportedClientsOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockUnsupportedClients) {
		return nil, false
	}
	return o.BlockUnsupportedClients, true
}

// HasBlockUnsupportedClients returns a boolean if a field has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) HasBlockUnsupportedClients() bool {
	if o != nil && !IsNil(o.BlockUnsupportedClients) {
		return true
	}

	return false
}

// SetBlockUnsupportedClients gets a reference to the given bool and assigns it to the BlockUnsupportedClients field.
func (o *ConnectionServerUnauthenticatedAccessInfo) SetBlockUnsupportedClients(v bool) {
	o.BlockUnsupportedClients = &v
}

// GetClientPuzzleDifficulty returns the ClientPuzzleDifficulty field value if set, zero value otherwise.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetClientPuzzleDifficulty() int32 {
	if o == nil || IsNil(o.ClientPuzzleDifficulty) {
		var ret int32
		return ret
	}
	return *o.ClientPuzzleDifficulty
}

// GetClientPuzzleDifficultyOk returns a tuple with the ClientPuzzleDifficulty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetClientPuzzleDifficultyOk() (*int32, bool) {
	if o == nil || IsNil(o.ClientPuzzleDifficulty) {
		return nil, false
	}
	return o.ClientPuzzleDifficulty, true
}

// HasClientPuzzleDifficulty returns a boolean if a field has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) HasClientPuzzleDifficulty() bool {
	if o != nil && !IsNil(o.ClientPuzzleDifficulty) {
		return true
	}

	return false
}

// SetClientPuzzleDifficulty gets a reference to the given int32 and assigns it to the ClientPuzzleDifficulty field.
func (o *ConnectionServerUnauthenticatedAccessInfo) SetClientPuzzleDifficulty(v int32) {
	o.ClientPuzzleDifficulty = &v
}

// GetDefaultUnauthUserId returns the DefaultUnauthUserId field value if set, zero value otherwise.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetDefaultUnauthUserId() string {
	if o == nil || IsNil(o.DefaultUnauthUserId) {
		var ret string
		return ret
	}
	return *o.DefaultUnauthUserId
}

// GetDefaultUnauthUserIdOk returns a tuple with the DefaultUnauthUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetDefaultUnauthUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultUnauthUserId) {
		return nil, false
	}
	return o.DefaultUnauthUserId, true
}

// HasDefaultUnauthUserId returns a boolean if a field has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) HasDefaultUnauthUserId() bool {
	if o != nil && !IsNil(o.DefaultUnauthUserId) {
		return true
	}

	return false
}

// SetDefaultUnauthUserId gets a reference to the given string and assigns it to the DefaultUnauthUserId field.
func (o *ConnectionServerUnauthenticatedAccessInfo) SetDefaultUnauthUserId(v string) {
	o.DefaultUnauthUserId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ConnectionServerUnauthenticatedAccessInfo) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetUserIdleTimeout returns the UserIdleTimeout field value if set, zero value otherwise.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetUserIdleTimeout() int32 {
	if o == nil || IsNil(o.UserIdleTimeout) {
		var ret int32
		return ret
	}
	return *o.UserIdleTimeout
}

// GetUserIdleTimeoutOk returns a tuple with the UserIdleTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) GetUserIdleTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.UserIdleTimeout) {
		return nil, false
	}
	return o.UserIdleTimeout, true
}

// HasUserIdleTimeout returns a boolean if a field has been set.
func (o *ConnectionServerUnauthenticatedAccessInfo) HasUserIdleTimeout() bool {
	if o != nil && !IsNil(o.UserIdleTimeout) {
		return true
	}

	return false
}

// SetUserIdleTimeout gets a reference to the given int32 and assigns it to the UserIdleTimeout field.
func (o *ConnectionServerUnauthenticatedAccessInfo) SetUserIdleTimeout(v int32) {
	o.UserIdleTimeout = &v
}

func (o ConnectionServerUnauthenticatedAccessInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServerUnauthenticatedAccessInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockUnsupportedClients) {
		toSerialize["block_unsupported_clients"] = o.BlockUnsupportedClients
	}
	if !IsNil(o.ClientPuzzleDifficulty) {
		toSerialize["client_puzzle_difficulty"] = o.ClientPuzzleDifficulty
	}
	if !IsNil(o.DefaultUnauthUserId) {
		toSerialize["default_unauth_user_id"] = o.DefaultUnauthUserId
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.UserIdleTimeout) {
		toSerialize["user_idle_timeout"] = o.UserIdleTimeout
	}
	return toSerialize, nil
}

type NullableConnectionServerUnauthenticatedAccessInfo struct {
	value *ConnectionServerUnauthenticatedAccessInfo
	isSet bool
}

func (v NullableConnectionServerUnauthenticatedAccessInfo) Get() *ConnectionServerUnauthenticatedAccessInfo {
	return v.value
}

func (v *NullableConnectionServerUnauthenticatedAccessInfo) Set(val *ConnectionServerUnauthenticatedAccessInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerUnauthenticatedAccessInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerUnauthenticatedAccessInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerUnauthenticatedAccessInfo(val *ConnectionServerUnauthenticatedAccessInfo) *NullableConnectionServerUnauthenticatedAccessInfo {
	return &NullableConnectionServerUnauthenticatedAccessInfo{value: val, isSet: true}
}

func (v NullableConnectionServerUnauthenticatedAccessInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerUnauthenticatedAccessInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


