/*
 * Horizon Server API
 *
 * Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

// DesktopPoolInfoV2 Information related to Desktop Pool.
type DesktopPoolInfoV2 struct {
	// Access groups can organize the entities (like application pools, desktop pools) in the organization. They can also be used for delegated administration.
	AccessGroupId string `json:"access_group_id,omitempty"`
	// Applicable To: Dedicated manual and automated desktop pools (except linked clone pools) with manual user assignment.<br>Whether assignment of multiple users to a single machine is allowed.
	AllowMultipleUserAssignments bool `json:"allow_multiple_user_assignments,omitempty"`
	// Applicable To: RDS desktop pools.<br>Whether multiple sessions are allowed per user for this pool.For other desktop pools, allow_multiple_sessions_per_user in sessionSettings will be applicable.
	AllowRdsPoolMultiSessionPerUser bool `json:"allow_rds_pool_multi_session_per_user,omitempty"`
	// Applicable To: Dedicated manual and automated desktop pools.<br>Automatic assignment of a user the first time they access the machine.
	AutomaticUserAssignment bool `json:"automatic_user_assignment,omitempty"`
	// Name of the category folder in the user's OS containing a shortcut to the desktop pool.Will be unset if the desktop does not belong to a category.This property defines valid folder names with a max length of 64 characters and up to 4 subdirectory levels.The subdirectories can be specified using a backslash, e.g. (dir1\\dir2\\dir3\\dir4). Folder names can't start orend with a backslash nor can there be 2 or more backslashes together. Combinations such as(\\dir1, dir1\\dir2\\, dir1\\\\dir2, dir1\\\\\\dir2) are invalid. The windows reserved keywords(CON, PRN, NUL, AUX, COM1 - COM9, LPT1 - LPT9 etc.) are not allowed in subdirectory names.
	CategoryFolderName string `json:"category_folder_name,omitempty"`
	// Indicates whether this desktop is assigned to a workspace in Horizon Cloud Services.
	CloudAssigned bool `json:"cloud_assigned,omitempty"`
	// Indicates whether this desktop is managed by Horizon Cloud Services.This can be false only when cloud_assigned is false.
	CloudManaged bool `json:"cloud_managed,omitempty"`
	// List of tags for which the access to the desktop pool is restricted to.No list indicates that desktop pool can be accessed from any connection server.
	CsRestrictionTags     []string                         `json:"cs_restriction_tags,omitempty"`
	CustomizationSettings DesktopPoolCustomizationSettings `json:"customization_settings,omitempty"`
	// Indicates whether the desktop pool is in the process of being deleted.Default value is false.
	DeleteInProgress bool `json:"delete_in_progress,omitempty"`
	// Description of the Desktop Pool. The maximum length is 1024 characters.
	Description string `json:"description,omitempty"`
	// Applicable To: Dedicated manual and automated desktop pools.<br>Indicates whether users should see the hostname of the machine assigned to them instead of displayName when they connect using View Client. If no machine is assigned to the user then \"displayName (No machine assigned)\" will be displayed in the client.
	DisplayAssignedMachineName bool `json:"display_assigned_machine_name,omitempty"`
	// Display name of the Desktop Pool. The maximum length is 256 characters.
	DisplayName             string                             `json:"display_name,omitempty"`
	DisplayProtocolSettings DesktopPoolDisplayProtocolSettings `json:"display_protocol_settings,omitempty"`
	// Client restrictions to be applied to the desktop pool.
	EnableClientRestrictions bool `json:"enable_client_restrictions,omitempty"`
	// Applicable To: Automated desktop pools.<br>Whether provisioning is enabled.
	EnableProvisioning bool `json:"enable_provisioning,omitempty"`
	// Indicates whether the Desktop Pool is enabled for brokering.
	Enabled bool `json:"enabled,omitempty"`
	// Applicable To: RDS desktop pools.<br>Farm needed to create RDS desktop pool.
	FarmId string `json:"farm_id,omitempty"`
	// Unique ID representing Desktop Pool.
	Id string `json:"id,omitempty"`
	// Applicable To: Automated desktop pools.<br>Source of image used in the desktop pool. * VIRTUAL_CENTER: Image was created in virtual center. * IMAGE_CATALOG: Image was created in image catalog.
	ImageSource string `json:"image_source,omitempty"`
	// Name of the Desktop Pool. The maximum length is 64 characters.
	Name string `json:"name,omitempty"`
	// Applicable To: Automated desktop pools.<br>Network interface card settings for machines provisioned for this desktop. A NIC may appear at most once in these settings and must be present on this desktop pool's parent's snapshot or template. Not all NICs need be configured. Any that are not will use default settings.
	Nics                   []DesktopPoolNetworkInterfaceCardSettings      `json:"nics,omitempty"`
	PatternNamingSettings  DesktopPoolVirtualMachinePatternNamingSettings `json:"pattern_naming_settings,omitempty"`
	ProvisioningSettings   DesktopPoolProvisioningSettings                `json:"provisioning_settings,omitempty"`
	ProvisioningStatusData DesktopPoolProvisioningStatusData              `json:"provisioning_status_data,omitempty"`
	SessionSettings        DesktopPoolSessionSettingsV2                   `json:"session_settings,omitempty"`
	// Supported session types for this desktop pool. If application sessions are selected to besupported then this desktop pool can be used for application pool creation. This will beuseful when the machines in the pool support application remoting. Default value of DESKTOP. * DESKTOP: Only desktop sessions are supported. * APPLICATION: Only application sessions are supported. * DESKTOP_AND_APPLICATION: Both desktop and application sessions are supported.
	SessionType string `json:"session_type,omitempty"`
	// Locations of the category folder in the user's OS containing a shortcut to the desktop pool.The value will be present if categoryFolderName is set.
	ShortcutLocations []string `json:"shortcut_locations,omitempty"`
	// Source of the Machines in this Desktop Pool. * INSTANT_CLONE: The Desktop Pool uses instant clone technology for provisioning the machines.Applicable for AUTOMATED type desktop pools. * LINKED_CLONE: The Desktop Pool uses linked clone technology for provisioning the machines.Applicable for AUTOMATED type desktop pools. * VIRTUAL_CENTER: The Desktop Pool uses Virtual Center as source for provisioning the machines.Applicable for AUTOMATED and MANUAL type desktop pools. * RDS: The Desktop Pool is backed by Farm. The Farm used in this Desktop Pool can be of any Source. * UNMANAGED: The Desktop Pool holds the non-vCenter source machines that includes physical computers,blade PCs and non-vCenter servers. Applicable for MANUAL type desktop pools.
	Source                 string                                           `json:"source,omitempty"`
	SpecificNamingSettings DesktopPoolVirtualMachineSpecifiedNamingSettings `json:"specific_naming_settings,omitempty"`
	// Applicable To: Automated desktop pools.<br>Whether provisioning on all machines stops on error.
	StopProvisioningOnError bool                       `json:"stop_provisioning_on_error,omitempty"`
	StorageSettings         DesktopPoolStorageSettings `json:"storage_settings,omitempty"`
	// Applicable To: Manual and automated desktop pools.<br>The transparent page sharing scope. * VM: Inter-VM page sharing is not permitted. * DESKTOP_POOL: Inter-VM page sharing among VMs belonging to the same Desktop pool is permitted. * POD: Inter-VM page sharing among VMs belonging to the same Pod is permitted. * GLOBAL: Inter-VM page sharing among all VMs on the same host is permitted.
	TransparentPageSharingScope string `json:"transparent_page_sharing_scope,omitempty"`
	// Type of the desktop pool. * AUTOMATED: Automated Desktop Pool. * MANUAL: Manual Desktop Pool. * RDS: RDS Desktop Pool.
	Type string `json:"type,omitempty"`
	// Applicable To: Manual and automated desktop pools.<br>User assignment scheme. * DEDICATED: With dedicated assignment, a user returns to the same machine at each session. * FLOATING: With floating assignment, a user may return to one of the available machines for the next session.
	UserAssignment string `json:"user_assignment,omitempty"`
	// Applicable To: Manual and automated desktop pools.<br>Virtual Center that manages the machines of the desktop pool.
	VcenterId                      string                                    `json:"vcenter_id,omitempty"`
	ViewStorageAcceleratorSettings DesktopPoolViewStorageAcceleratorSettings `json:"view_storage_accelerator_settings,omitempty"`
}
