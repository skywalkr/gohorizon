/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the FarmSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmSettings{}

// FarmSettings Settings related to the Farm.
type FarmSettings struct {
	// Indicates whether the Farm is in the process of being deleted. Default value is false.
	DeleteInProgess *bool `json:"delete_in_progess,omitempty"`
	// Desktop pool Id representing the RDS Desktop pool to which this Farm belongs.
	DesktopId *string `json:"desktop_id,omitempty"`
	DisplayProtocolSettings *FarmDisplayProtocolSettings `json:"display_protocol_settings,omitempty"`
	LoadBalancerSettings *FarmLoadBalancerSettings `json:"load_balancer_settings,omitempty"`
	// The minimum number of machines that must be fully operational in order toavoid showing the farm in an error state. Default value is 0.
	ServerErrorThreshold *int32 `json:"server_error_threshold,omitempty"`
	SessionSettings *FarmSessionSettings `json:"session_settings,omitempty"`
}

// NewFarmSettings instantiates a new FarmSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmSettings() *FarmSettings {
	this := FarmSettings{}
	return &this
}

// NewFarmSettingsWithDefaults instantiates a new FarmSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmSettingsWithDefaults() *FarmSettings {
	this := FarmSettings{}
	return &this
}

// GetDeleteInProgess returns the DeleteInProgess field value if set, zero value otherwise.
func (o *FarmSettings) GetDeleteInProgess() bool {
	if o == nil || IsNil(o.DeleteInProgess) {
		var ret bool
		return ret
	}
	return *o.DeleteInProgess
}

// GetDeleteInProgessOk returns a tuple with the DeleteInProgess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmSettings) GetDeleteInProgessOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteInProgess) {
		return nil, false
	}
	return o.DeleteInProgess, true
}

// HasDeleteInProgess returns a boolean if a field has been set.
func (o *FarmSettings) HasDeleteInProgess() bool {
	if o != nil && !IsNil(o.DeleteInProgess) {
		return true
	}

	return false
}

// SetDeleteInProgess gets a reference to the given bool and assigns it to the DeleteInProgess field.
func (o *FarmSettings) SetDeleteInProgess(v bool) {
	o.DeleteInProgess = &v
}

// GetDesktopId returns the DesktopId field value if set, zero value otherwise.
func (o *FarmSettings) GetDesktopId() string {
	if o == nil || IsNil(o.DesktopId) {
		var ret string
		return ret
	}
	return *o.DesktopId
}

// GetDesktopIdOk returns a tuple with the DesktopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmSettings) GetDesktopIdOk() (*string, bool) {
	if o == nil || IsNil(o.DesktopId) {
		return nil, false
	}
	return o.DesktopId, true
}

// HasDesktopId returns a boolean if a field has been set.
func (o *FarmSettings) HasDesktopId() bool {
	if o != nil && !IsNil(o.DesktopId) {
		return true
	}

	return false
}

// SetDesktopId gets a reference to the given string and assigns it to the DesktopId field.
func (o *FarmSettings) SetDesktopId(v string) {
	o.DesktopId = &v
}

// GetDisplayProtocolSettings returns the DisplayProtocolSettings field value if set, zero value otherwise.
func (o *FarmSettings) GetDisplayProtocolSettings() FarmDisplayProtocolSettings {
	if o == nil || IsNil(o.DisplayProtocolSettings) {
		var ret FarmDisplayProtocolSettings
		return ret
	}
	return *o.DisplayProtocolSettings
}

// GetDisplayProtocolSettingsOk returns a tuple with the DisplayProtocolSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmSettings) GetDisplayProtocolSettingsOk() (*FarmDisplayProtocolSettings, bool) {
	if o == nil || IsNil(o.DisplayProtocolSettings) {
		return nil, false
	}
	return o.DisplayProtocolSettings, true
}

// HasDisplayProtocolSettings returns a boolean if a field has been set.
func (o *FarmSettings) HasDisplayProtocolSettings() bool {
	if o != nil && !IsNil(o.DisplayProtocolSettings) {
		return true
	}

	return false
}

// SetDisplayProtocolSettings gets a reference to the given FarmDisplayProtocolSettings and assigns it to the DisplayProtocolSettings field.
func (o *FarmSettings) SetDisplayProtocolSettings(v FarmDisplayProtocolSettings) {
	o.DisplayProtocolSettings = &v
}

// GetLoadBalancerSettings returns the LoadBalancerSettings field value if set, zero value otherwise.
func (o *FarmSettings) GetLoadBalancerSettings() FarmLoadBalancerSettings {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		var ret FarmLoadBalancerSettings
		return ret
	}
	return *o.LoadBalancerSettings
}

// GetLoadBalancerSettingsOk returns a tuple with the LoadBalancerSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmSettings) GetLoadBalancerSettingsOk() (*FarmLoadBalancerSettings, bool) {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		return nil, false
	}
	return o.LoadBalancerSettings, true
}

// HasLoadBalancerSettings returns a boolean if a field has been set.
func (o *FarmSettings) HasLoadBalancerSettings() bool {
	if o != nil && !IsNil(o.LoadBalancerSettings) {
		return true
	}

	return false
}

// SetLoadBalancerSettings gets a reference to the given FarmLoadBalancerSettings and assigns it to the LoadBalancerSettings field.
func (o *FarmSettings) SetLoadBalancerSettings(v FarmLoadBalancerSettings) {
	o.LoadBalancerSettings = &v
}

// GetServerErrorThreshold returns the ServerErrorThreshold field value if set, zero value otherwise.
func (o *FarmSettings) GetServerErrorThreshold() int32 {
	if o == nil || IsNil(o.ServerErrorThreshold) {
		var ret int32
		return ret
	}
	return *o.ServerErrorThreshold
}

// GetServerErrorThresholdOk returns a tuple with the ServerErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmSettings) GetServerErrorThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerErrorThreshold) {
		return nil, false
	}
	return o.ServerErrorThreshold, true
}

// HasServerErrorThreshold returns a boolean if a field has been set.
func (o *FarmSettings) HasServerErrorThreshold() bool {
	if o != nil && !IsNil(o.ServerErrorThreshold) {
		return true
	}

	return false
}

// SetServerErrorThreshold gets a reference to the given int32 and assigns it to the ServerErrorThreshold field.
func (o *FarmSettings) SetServerErrorThreshold(v int32) {
	o.ServerErrorThreshold = &v
}

// GetSessionSettings returns the SessionSettings field value if set, zero value otherwise.
func (o *FarmSettings) GetSessionSettings() FarmSessionSettings {
	if o == nil || IsNil(o.SessionSettings) {
		var ret FarmSessionSettings
		return ret
	}
	return *o.SessionSettings
}

// GetSessionSettingsOk returns a tuple with the SessionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmSettings) GetSessionSettingsOk() (*FarmSessionSettings, bool) {
	if o == nil || IsNil(o.SessionSettings) {
		return nil, false
	}
	return o.SessionSettings, true
}

// HasSessionSettings returns a boolean if a field has been set.
func (o *FarmSettings) HasSessionSettings() bool {
	if o != nil && !IsNil(o.SessionSettings) {
		return true
	}

	return false
}

// SetSessionSettings gets a reference to the given FarmSessionSettings and assigns it to the SessionSettings field.
func (o *FarmSettings) SetSessionSettings(v FarmSessionSettings) {
	o.SessionSettings = &v
}

func (o FarmSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteInProgess) {
		toSerialize["delete_in_progess"] = o.DeleteInProgess
	}
	if !IsNil(o.DesktopId) {
		toSerialize["desktop_id"] = o.DesktopId
	}
	if !IsNil(o.DisplayProtocolSettings) {
		toSerialize["display_protocol_settings"] = o.DisplayProtocolSettings
	}
	if !IsNil(o.LoadBalancerSettings) {
		toSerialize["load_balancer_settings"] = o.LoadBalancerSettings
	}
	if !IsNil(o.ServerErrorThreshold) {
		toSerialize["server_error_threshold"] = o.ServerErrorThreshold
	}
	if !IsNil(o.SessionSettings) {
		toSerialize["session_settings"] = o.SessionSettings
	}
	return toSerialize, nil
}

type NullableFarmSettings struct {
	value *FarmSettings
	isSet bool
}

func (v NullableFarmSettings) Get() *FarmSettings {
	return v.value
}

func (v *NullableFarmSettings) Set(val *FarmSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmSettings(val *FarmSettings) *NullableFarmSettings {
	return &NullableFarmSettings{value: val, isSet: true}
}

func (v NullableFarmSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


