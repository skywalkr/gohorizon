/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ManagedMachineData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedMachineData{}

// ManagedMachineData Information related to Managed machines.
type ManagedMachineData struct {
	// Cloning error message for this machine. This will be set for machine belonging to automated desktop pools when the machine's state is in PROVISIONING_ERROR or ERROR state.
	CloneErrorMessage *string `json:"clone_error_message,omitempty"`
	// Cloning error time for this machine in milliseconds. Measured as epoch time. This will be set for machine belonging to automated desktop pools when the machine's state is in PROVISIONING_ERROR or ERROR state.
	CloneErrorTime *int64 `json:"clone_error_time,omitempty"`
	// Time at which the machine was created in milliseconds. Measured as epoch time.
	CreateTime *int64 `json:"create_time,omitempty"`
	// The name of the host on which this virtual machine is registered.
	HostName *string `json:"host_name,omitempty"`
	// This condition determines if this virtual machine should be on hold before customization is started.<br>Supported Filters : 'Equals'.
	InHoldCustomization *bool `json:"in_hold_customization,omitempty"`
	// Indicates whether the Machine is in maintenance mode.
	InMaintenanceMode *bool `json:"in_maintenance_mode,omitempty"`
	// The virtual machine physical memory in MB.
	MemoryMb *int32 `json:"memory_mb,omitempty"`
	// This condition determines if the virtual machine is missing in vCenter Server.<br>Supported Filters : 'Equals'.
	MissingInVcenter *bool `json:"missing_in_vcenter,omitempty"`
	// The network label(s) associated with this Machine.<br>This information will only be populated if a network label is explicitly assigned to this machine.<br>Otherwise, the machine inherits these properties from the parent virtual machine.
	NetworkLabels []NetworkLabelData `json:"network_labels,omitempty"`
	// The virtual machine path.<br>Supported Filters : 'Equals', 'StartsWith', 'EndsWith' and 'Contains'.Field name to be used in filter : managedMachineData.path.
	Path *string `json:"path,omitempty"`
	// The Horizon Storage Accelerator state. Storage acceleration will be available for managed machines if configured.<br>Supported Filters : 'Equals'. * OFF: The Storage Accelerator is off. * CURRENT: The machine cached data is updated. * OUT_OF_DATE: The machine cached data is not updated and requires regeneration. * ERROR: The Storage Accelerator has encountered an error.
	StorageAcceleratorState *string `json:"storage_accelerator_state,omitempty"`
	// The ID of the Virtual Center managing this machine.<br>Supported Filters : 'Equals'.
	VirtualCenterId *string `json:"virtual_center_id,omitempty"`
	// The virtual disks comprising the virtual machine.
	VirtualDisks []VirtualDiskData `json:"virtual_disks,omitempty"`
	// The virtual machine power state.<br>Supported Filters : 'Equals'. * POWERED_OFF: The machine is powered off. * POWERED_ON: The machine is powered on. * SUSPENDED: The machine is suspended.
	VirtualMachinePowerState *string `json:"virtual_machine_power_state,omitempty"`
}

// NewManagedMachineData instantiates a new ManagedMachineData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedMachineData() *ManagedMachineData {
	this := ManagedMachineData{}
	return &this
}

// NewManagedMachineDataWithDefaults instantiates a new ManagedMachineData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedMachineDataWithDefaults() *ManagedMachineData {
	this := ManagedMachineData{}
	return &this
}

// GetCloneErrorMessage returns the CloneErrorMessage field value if set, zero value otherwise.
func (o *ManagedMachineData) GetCloneErrorMessage() string {
	if o == nil || IsNil(o.CloneErrorMessage) {
		var ret string
		return ret
	}
	return *o.CloneErrorMessage
}

// GetCloneErrorMessageOk returns a tuple with the CloneErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetCloneErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.CloneErrorMessage) {
		return nil, false
	}
	return o.CloneErrorMessage, true
}

// HasCloneErrorMessage returns a boolean if a field has been set.
func (o *ManagedMachineData) HasCloneErrorMessage() bool {
	if o != nil && !IsNil(o.CloneErrorMessage) {
		return true
	}

	return false
}

// SetCloneErrorMessage gets a reference to the given string and assigns it to the CloneErrorMessage field.
func (o *ManagedMachineData) SetCloneErrorMessage(v string) {
	o.CloneErrorMessage = &v
}

// GetCloneErrorTime returns the CloneErrorTime field value if set, zero value otherwise.
func (o *ManagedMachineData) GetCloneErrorTime() int64 {
	if o == nil || IsNil(o.CloneErrorTime) {
		var ret int64
		return ret
	}
	return *o.CloneErrorTime
}

// GetCloneErrorTimeOk returns a tuple with the CloneErrorTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetCloneErrorTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CloneErrorTime) {
		return nil, false
	}
	return o.CloneErrorTime, true
}

// HasCloneErrorTime returns a boolean if a field has been set.
func (o *ManagedMachineData) HasCloneErrorTime() bool {
	if o != nil && !IsNil(o.CloneErrorTime) {
		return true
	}

	return false
}

// SetCloneErrorTime gets a reference to the given int64 and assigns it to the CloneErrorTime field.
func (o *ManagedMachineData) SetCloneErrorTime(v int64) {
	o.CloneErrorTime = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *ManagedMachineData) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ManagedMachineData) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *ManagedMachineData) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *ManagedMachineData) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *ManagedMachineData) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *ManagedMachineData) SetHostName(v string) {
	o.HostName = &v
}

// GetInHoldCustomization returns the InHoldCustomization field value if set, zero value otherwise.
func (o *ManagedMachineData) GetInHoldCustomization() bool {
	if o == nil || IsNil(o.InHoldCustomization) {
		var ret bool
		return ret
	}
	return *o.InHoldCustomization
}

// GetInHoldCustomizationOk returns a tuple with the InHoldCustomization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetInHoldCustomizationOk() (*bool, bool) {
	if o == nil || IsNil(o.InHoldCustomization) {
		return nil, false
	}
	return o.InHoldCustomization, true
}

// HasInHoldCustomization returns a boolean if a field has been set.
func (o *ManagedMachineData) HasInHoldCustomization() bool {
	if o != nil && !IsNil(o.InHoldCustomization) {
		return true
	}

	return false
}

// SetInHoldCustomization gets a reference to the given bool and assigns it to the InHoldCustomization field.
func (o *ManagedMachineData) SetInHoldCustomization(v bool) {
	o.InHoldCustomization = &v
}

// GetInMaintenanceMode returns the InMaintenanceMode field value if set, zero value otherwise.
func (o *ManagedMachineData) GetInMaintenanceMode() bool {
	if o == nil || IsNil(o.InMaintenanceMode) {
		var ret bool
		return ret
	}
	return *o.InMaintenanceMode
}

// GetInMaintenanceModeOk returns a tuple with the InMaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetInMaintenanceModeOk() (*bool, bool) {
	if o == nil || IsNil(o.InMaintenanceMode) {
		return nil, false
	}
	return o.InMaintenanceMode, true
}

// HasInMaintenanceMode returns a boolean if a field has been set.
func (o *ManagedMachineData) HasInMaintenanceMode() bool {
	if o != nil && !IsNil(o.InMaintenanceMode) {
		return true
	}

	return false
}

// SetInMaintenanceMode gets a reference to the given bool and assigns it to the InMaintenanceMode field.
func (o *ManagedMachineData) SetInMaintenanceMode(v bool) {
	o.InMaintenanceMode = &v
}

// GetMemoryMb returns the MemoryMb field value if set, zero value otherwise.
func (o *ManagedMachineData) GetMemoryMb() int32 {
	if o == nil || IsNil(o.MemoryMb) {
		var ret int32
		return ret
	}
	return *o.MemoryMb
}

// GetMemoryMbOk returns a tuple with the MemoryMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetMemoryMbOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryMb) {
		return nil, false
	}
	return o.MemoryMb, true
}

// HasMemoryMb returns a boolean if a field has been set.
func (o *ManagedMachineData) HasMemoryMb() bool {
	if o != nil && !IsNil(o.MemoryMb) {
		return true
	}

	return false
}

// SetMemoryMb gets a reference to the given int32 and assigns it to the MemoryMb field.
func (o *ManagedMachineData) SetMemoryMb(v int32) {
	o.MemoryMb = &v
}

// GetMissingInVcenter returns the MissingInVcenter field value if set, zero value otherwise.
func (o *ManagedMachineData) GetMissingInVcenter() bool {
	if o == nil || IsNil(o.MissingInVcenter) {
		var ret bool
		return ret
	}
	return *o.MissingInVcenter
}

// GetMissingInVcenterOk returns a tuple with the MissingInVcenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetMissingInVcenterOk() (*bool, bool) {
	if o == nil || IsNil(o.MissingInVcenter) {
		return nil, false
	}
	return o.MissingInVcenter, true
}

// HasMissingInVcenter returns a boolean if a field has been set.
func (o *ManagedMachineData) HasMissingInVcenter() bool {
	if o != nil && !IsNil(o.MissingInVcenter) {
		return true
	}

	return false
}

// SetMissingInVcenter gets a reference to the given bool and assigns it to the MissingInVcenter field.
func (o *ManagedMachineData) SetMissingInVcenter(v bool) {
	o.MissingInVcenter = &v
}

// GetNetworkLabels returns the NetworkLabels field value if set, zero value otherwise.
func (o *ManagedMachineData) GetNetworkLabels() []NetworkLabelData {
	if o == nil || IsNil(o.NetworkLabels) {
		var ret []NetworkLabelData
		return ret
	}
	return o.NetworkLabels
}

// GetNetworkLabelsOk returns a tuple with the NetworkLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetNetworkLabelsOk() ([]NetworkLabelData, bool) {
	if o == nil || IsNil(o.NetworkLabels) {
		return nil, false
	}
	return o.NetworkLabels, true
}

// HasNetworkLabels returns a boolean if a field has been set.
func (o *ManagedMachineData) HasNetworkLabels() bool {
	if o != nil && !IsNil(o.NetworkLabels) {
		return true
	}

	return false
}

// SetNetworkLabels gets a reference to the given []NetworkLabelData and assigns it to the NetworkLabels field.
func (o *ManagedMachineData) SetNetworkLabels(v []NetworkLabelData) {
	o.NetworkLabels = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ManagedMachineData) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ManagedMachineData) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ManagedMachineData) SetPath(v string) {
	o.Path = &v
}

// GetStorageAcceleratorState returns the StorageAcceleratorState field value if set, zero value otherwise.
func (o *ManagedMachineData) GetStorageAcceleratorState() string {
	if o == nil || IsNil(o.StorageAcceleratorState) {
		var ret string
		return ret
	}
	return *o.StorageAcceleratorState
}

// GetStorageAcceleratorStateOk returns a tuple with the StorageAcceleratorState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetStorageAcceleratorStateOk() (*string, bool) {
	if o == nil || IsNil(o.StorageAcceleratorState) {
		return nil, false
	}
	return o.StorageAcceleratorState, true
}

// HasStorageAcceleratorState returns a boolean if a field has been set.
func (o *ManagedMachineData) HasStorageAcceleratorState() bool {
	if o != nil && !IsNil(o.StorageAcceleratorState) {
		return true
	}

	return false
}

// SetStorageAcceleratorState gets a reference to the given string and assigns it to the StorageAcceleratorState field.
func (o *ManagedMachineData) SetStorageAcceleratorState(v string) {
	o.StorageAcceleratorState = &v
}

// GetVirtualCenterId returns the VirtualCenterId field value if set, zero value otherwise.
func (o *ManagedMachineData) GetVirtualCenterId() string {
	if o == nil || IsNil(o.VirtualCenterId) {
		var ret string
		return ret
	}
	return *o.VirtualCenterId
}

// GetVirtualCenterIdOk returns a tuple with the VirtualCenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetVirtualCenterIdOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualCenterId) {
		return nil, false
	}
	return o.VirtualCenterId, true
}

// HasVirtualCenterId returns a boolean if a field has been set.
func (o *ManagedMachineData) HasVirtualCenterId() bool {
	if o != nil && !IsNil(o.VirtualCenterId) {
		return true
	}

	return false
}

// SetVirtualCenterId gets a reference to the given string and assigns it to the VirtualCenterId field.
func (o *ManagedMachineData) SetVirtualCenterId(v string) {
	o.VirtualCenterId = &v
}

// GetVirtualDisks returns the VirtualDisks field value if set, zero value otherwise.
func (o *ManagedMachineData) GetVirtualDisks() []VirtualDiskData {
	if o == nil || IsNil(o.VirtualDisks) {
		var ret []VirtualDiskData
		return ret
	}
	return o.VirtualDisks
}

// GetVirtualDisksOk returns a tuple with the VirtualDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetVirtualDisksOk() ([]VirtualDiskData, bool) {
	if o == nil || IsNil(o.VirtualDisks) {
		return nil, false
	}
	return o.VirtualDisks, true
}

// HasVirtualDisks returns a boolean if a field has been set.
func (o *ManagedMachineData) HasVirtualDisks() bool {
	if o != nil && !IsNil(o.VirtualDisks) {
		return true
	}

	return false
}

// SetVirtualDisks gets a reference to the given []VirtualDiskData and assigns it to the VirtualDisks field.
func (o *ManagedMachineData) SetVirtualDisks(v []VirtualDiskData) {
	o.VirtualDisks = v
}

// GetVirtualMachinePowerState returns the VirtualMachinePowerState field value if set, zero value otherwise.
func (o *ManagedMachineData) GetVirtualMachinePowerState() string {
	if o == nil || IsNil(o.VirtualMachinePowerState) {
		var ret string
		return ret
	}
	return *o.VirtualMachinePowerState
}

// GetVirtualMachinePowerStateOk returns a tuple with the VirtualMachinePowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedMachineData) GetVirtualMachinePowerStateOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualMachinePowerState) {
		return nil, false
	}
	return o.VirtualMachinePowerState, true
}

// HasVirtualMachinePowerState returns a boolean if a field has been set.
func (o *ManagedMachineData) HasVirtualMachinePowerState() bool {
	if o != nil && !IsNil(o.VirtualMachinePowerState) {
		return true
	}

	return false
}

// SetVirtualMachinePowerState gets a reference to the given string and assigns it to the VirtualMachinePowerState field.
func (o *ManagedMachineData) SetVirtualMachinePowerState(v string) {
	o.VirtualMachinePowerState = &v
}

func (o ManagedMachineData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedMachineData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloneErrorMessage) {
		toSerialize["clone_error_message"] = o.CloneErrorMessage
	}
	if !IsNil(o.CloneErrorTime) {
		toSerialize["clone_error_time"] = o.CloneErrorTime
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.InHoldCustomization) {
		toSerialize["in_hold_customization"] = o.InHoldCustomization
	}
	if !IsNil(o.InMaintenanceMode) {
		toSerialize["in_maintenance_mode"] = o.InMaintenanceMode
	}
	if !IsNil(o.MemoryMb) {
		toSerialize["memory_mb"] = o.MemoryMb
	}
	if !IsNil(o.MissingInVcenter) {
		toSerialize["missing_in_vcenter"] = o.MissingInVcenter
	}
	if !IsNil(o.NetworkLabels) {
		toSerialize["network_labels"] = o.NetworkLabels
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.StorageAcceleratorState) {
		toSerialize["storage_accelerator_state"] = o.StorageAcceleratorState
	}
	if !IsNil(o.VirtualCenterId) {
		toSerialize["virtual_center_id"] = o.VirtualCenterId
	}
	if !IsNil(o.VirtualDisks) {
		toSerialize["virtual_disks"] = o.VirtualDisks
	}
	if !IsNil(o.VirtualMachinePowerState) {
		toSerialize["virtual_machine_power_state"] = o.VirtualMachinePowerState
	}
	return toSerialize, nil
}

type NullableManagedMachineData struct {
	value *ManagedMachineData
	isSet bool
}

func (v NullableManagedMachineData) Get() *ManagedMachineData {
	return v.value
}

func (v *NullableManagedMachineData) Set(val *ManagedMachineData) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedMachineData) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedMachineData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedMachineData(val *ManagedMachineData) *NullableManagedMachineData {
	return &NullableManagedMachineData{value: val, isSet: true}
}

func (v NullableManagedMachineData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedMachineData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


