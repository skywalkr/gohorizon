/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the FarmNetworkInterfaceCardSettingsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmNetworkInterfaceCardSettingsInfo{}

// FarmNetworkInterfaceCardSettingsInfo Network interface card settings for RDS Servers provisioned for the farm.
type FarmNetworkInterfaceCardSettingsInfo struct {
	// ID of the network interface card for these settings.
	NetworkInterfaceCardId *string `json:"network_interface_card_id,omitempty"`
	// Name of the network interface card for these settings.
	NetworkInterfaceCardName *string `json:"network_interface_card_name,omitempty"`
	// Automatic network label assignment feature settings for this NIC.
	NetworkLabelAssignmentSpecs []NetworkLabelAssignmentSettingsInfo `json:"network_label_assignment_specs,omitempty"`
}

// NewFarmNetworkInterfaceCardSettingsInfo instantiates a new FarmNetworkInterfaceCardSettingsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmNetworkInterfaceCardSettingsInfo() *FarmNetworkInterfaceCardSettingsInfo {
	this := FarmNetworkInterfaceCardSettingsInfo{}
	return &this
}

// NewFarmNetworkInterfaceCardSettingsInfoWithDefaults instantiates a new FarmNetworkInterfaceCardSettingsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmNetworkInterfaceCardSettingsInfoWithDefaults() *FarmNetworkInterfaceCardSettingsInfo {
	this := FarmNetworkInterfaceCardSettingsInfo{}
	return &this
}

// GetNetworkInterfaceCardId returns the NetworkInterfaceCardId field value if set, zero value otherwise.
func (o *FarmNetworkInterfaceCardSettingsInfo) GetNetworkInterfaceCardId() string {
	if o == nil || IsNil(o.NetworkInterfaceCardId) {
		var ret string
		return ret
	}
	return *o.NetworkInterfaceCardId
}

// GetNetworkInterfaceCardIdOk returns a tuple with the NetworkInterfaceCardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmNetworkInterfaceCardSettingsInfo) GetNetworkInterfaceCardIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkInterfaceCardId) {
		return nil, false
	}
	return o.NetworkInterfaceCardId, true
}

// HasNetworkInterfaceCardId returns a boolean if a field has been set.
func (o *FarmNetworkInterfaceCardSettingsInfo) HasNetworkInterfaceCardId() bool {
	if o != nil && !IsNil(o.NetworkInterfaceCardId) {
		return true
	}

	return false
}

// SetNetworkInterfaceCardId gets a reference to the given string and assigns it to the NetworkInterfaceCardId field.
func (o *FarmNetworkInterfaceCardSettingsInfo) SetNetworkInterfaceCardId(v string) {
	o.NetworkInterfaceCardId = &v
}

// GetNetworkInterfaceCardName returns the NetworkInterfaceCardName field value if set, zero value otherwise.
func (o *FarmNetworkInterfaceCardSettingsInfo) GetNetworkInterfaceCardName() string {
	if o == nil || IsNil(o.NetworkInterfaceCardName) {
		var ret string
		return ret
	}
	return *o.NetworkInterfaceCardName
}

// GetNetworkInterfaceCardNameOk returns a tuple with the NetworkInterfaceCardName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmNetworkInterfaceCardSettingsInfo) GetNetworkInterfaceCardNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkInterfaceCardName) {
		return nil, false
	}
	return o.NetworkInterfaceCardName, true
}

// HasNetworkInterfaceCardName returns a boolean if a field has been set.
func (o *FarmNetworkInterfaceCardSettingsInfo) HasNetworkInterfaceCardName() bool {
	if o != nil && !IsNil(o.NetworkInterfaceCardName) {
		return true
	}

	return false
}

// SetNetworkInterfaceCardName gets a reference to the given string and assigns it to the NetworkInterfaceCardName field.
func (o *FarmNetworkInterfaceCardSettingsInfo) SetNetworkInterfaceCardName(v string) {
	o.NetworkInterfaceCardName = &v
}

// GetNetworkLabelAssignmentSpecs returns the NetworkLabelAssignmentSpecs field value if set, zero value otherwise.
func (o *FarmNetworkInterfaceCardSettingsInfo) GetNetworkLabelAssignmentSpecs() []NetworkLabelAssignmentSettingsInfo {
	if o == nil || IsNil(o.NetworkLabelAssignmentSpecs) {
		var ret []NetworkLabelAssignmentSettingsInfo
		return ret
	}
	return o.NetworkLabelAssignmentSpecs
}

// GetNetworkLabelAssignmentSpecsOk returns a tuple with the NetworkLabelAssignmentSpecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmNetworkInterfaceCardSettingsInfo) GetNetworkLabelAssignmentSpecsOk() ([]NetworkLabelAssignmentSettingsInfo, bool) {
	if o == nil || IsNil(o.NetworkLabelAssignmentSpecs) {
		return nil, false
	}
	return o.NetworkLabelAssignmentSpecs, true
}

// HasNetworkLabelAssignmentSpecs returns a boolean if a field has been set.
func (o *FarmNetworkInterfaceCardSettingsInfo) HasNetworkLabelAssignmentSpecs() bool {
	if o != nil && !IsNil(o.NetworkLabelAssignmentSpecs) {
		return true
	}

	return false
}

// SetNetworkLabelAssignmentSpecs gets a reference to the given []NetworkLabelAssignmentSettingsInfo and assigns it to the NetworkLabelAssignmentSpecs field.
func (o *FarmNetworkInterfaceCardSettingsInfo) SetNetworkLabelAssignmentSpecs(v []NetworkLabelAssignmentSettingsInfo) {
	o.NetworkLabelAssignmentSpecs = v
}

func (o FarmNetworkInterfaceCardSettingsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmNetworkInterfaceCardSettingsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkInterfaceCardId) {
		toSerialize["network_interface_card_id"] = o.NetworkInterfaceCardId
	}
	if !IsNil(o.NetworkInterfaceCardName) {
		toSerialize["network_interface_card_name"] = o.NetworkInterfaceCardName
	}
	if !IsNil(o.NetworkLabelAssignmentSpecs) {
		toSerialize["network_label_assignment_specs"] = o.NetworkLabelAssignmentSpecs
	}
	return toSerialize, nil
}

type NullableFarmNetworkInterfaceCardSettingsInfo struct {
	value *FarmNetworkInterfaceCardSettingsInfo
	isSet bool
}

func (v NullableFarmNetworkInterfaceCardSettingsInfo) Get() *FarmNetworkInterfaceCardSettingsInfo {
	return v.value
}

func (v *NullableFarmNetworkInterfaceCardSettingsInfo) Set(val *FarmNetworkInterfaceCardSettingsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmNetworkInterfaceCardSettingsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmNetworkInterfaceCardSettingsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmNetworkInterfaceCardSettingsInfo(val *FarmNetworkInterfaceCardSettingsInfo) *NullableFarmNetworkInterfaceCardSettingsInfo {
	return &NullableFarmNetworkInterfaceCardSettingsInfo{value: val, isSet: true}
}

func (v NullableFarmNetworkInterfaceCardSettingsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmNetworkInterfaceCardSettingsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


