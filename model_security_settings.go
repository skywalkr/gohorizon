/*
 * Horizon Server API
 *
 * Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

// SecuritySettings Information related to Security Settings.
type SecuritySettings struct {
	// The Base 64 encoded public key of the cluster in PEM format.
	ClusterPublicKey string `json:"cluster_public_key"`
	// Key Id to identify the cluster's active key pair.
	ClusterPublicKeyId string `json:"cluster_public_key_id,omitempty"`
	// Indicates whether the backup recovery password has been configured.
	DataRecoveryPasswordConfigured bool `json:"data_recovery_password_configured"`
	// Determines if signing and verification of the JMS messages passed between Horizon components takes place. * DISABLED: Message security mode is disabled. * MIXED: Message security mode is enabled but not enforced. * ENABLED: Message security mode is enabled. Unsigned messages are rejected by Horizon components. * ENHANCED: Message Security mode is Enhanced. Message signing and validation is performed based on the current Security Level and desktop Message Security mode.
	MessageSecurityMode string `json:"message_security_mode"`
	// The status of the JMS message security. This tracks the application of changes to messageSecurityMode. * READY: The cluster is performing at the specified message security mode. * INITIALIZING_ENHANCED: The cluster is initializing a transition to the ENHANCED message security mode. * PENDING_ENHANCED: The cluster is propagating the change to ENHANCED message security mode to all nodes. * LEAVING_ENHANCED: The cluster is leaving the ENHANCED message security mode.
	MessageSecurityStatus string `json:"message_security_status"`
	// Determines if user credentials must be re-authenticated after a network interruption when Horizon clients use secure tunnel connections to Horizon resources. When you select this setting, if a secure tunnel connection ends during a session, Horizon Client requires the user to re-authenticate before reconnecting.
	ReAuthSecureTunnelAfterInterruption bool `json:"re_auth_secure_tunnel_after_interruption"`
}
