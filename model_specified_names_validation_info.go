/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// SpecifiedNamesValidationInfo Information about specified names validation.
type SpecifiedNamesValidationInfo struct {
	// The virtual machine name.
	MachineName *string `json:"machine_name,omitempty"`
	// The status information captured after validation.
	SpecifiedNamesStatuses *[]string `json:"specified_names_statuses,omitempty"`
	// The SID of the user.
	UserId *string `json:"user_id,omitempty"`
	// The name of the user entitled to the VM.
	UserName *string `json:"user_name,omitempty"`
}

// NewSpecifiedNamesValidationInfo instantiates a new SpecifiedNamesValidationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecifiedNamesValidationInfo() *SpecifiedNamesValidationInfo {
	this := SpecifiedNamesValidationInfo{}
	return &this
}

// NewSpecifiedNamesValidationInfoWithDefaults instantiates a new SpecifiedNamesValidationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecifiedNamesValidationInfoWithDefaults() *SpecifiedNamesValidationInfo {
	this := SpecifiedNamesValidationInfo{}
	return &this
}

// GetMachineName returns the MachineName field value if set, zero value otherwise.
func (o *SpecifiedNamesValidationInfo) GetMachineName() string {
	if o == nil || o.MachineName == nil {
		var ret string
		return ret
	}
	return *o.MachineName
}

// GetMachineNameOk returns a tuple with the MachineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifiedNamesValidationInfo) GetMachineNameOk() (*string, bool) {
	if o == nil || o.MachineName == nil {
		return nil, false
	}
	return o.MachineName, true
}

// HasMachineName returns a boolean if a field has been set.
func (o *SpecifiedNamesValidationInfo) HasMachineName() bool {
	if o != nil && o.MachineName != nil {
		return true
	}

	return false
}

// SetMachineName gets a reference to the given string and assigns it to the MachineName field.
func (o *SpecifiedNamesValidationInfo) SetMachineName(v string) {
	o.MachineName = &v
}

// GetSpecifiedNamesStatuses returns the SpecifiedNamesStatuses field value if set, zero value otherwise.
func (o *SpecifiedNamesValidationInfo) GetSpecifiedNamesStatuses() []string {
	if o == nil || o.SpecifiedNamesStatuses == nil {
		var ret []string
		return ret
	}
	return *o.SpecifiedNamesStatuses
}

// GetSpecifiedNamesStatusesOk returns a tuple with the SpecifiedNamesStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifiedNamesValidationInfo) GetSpecifiedNamesStatusesOk() (*[]string, bool) {
	if o == nil || o.SpecifiedNamesStatuses == nil {
		return nil, false
	}
	return o.SpecifiedNamesStatuses, true
}

// HasSpecifiedNamesStatuses returns a boolean if a field has been set.
func (o *SpecifiedNamesValidationInfo) HasSpecifiedNamesStatuses() bool {
	if o != nil && o.SpecifiedNamesStatuses != nil {
		return true
	}

	return false
}

// SetSpecifiedNamesStatuses gets a reference to the given []string and assigns it to the SpecifiedNamesStatuses field.
func (o *SpecifiedNamesValidationInfo) SetSpecifiedNamesStatuses(v []string) {
	o.SpecifiedNamesStatuses = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SpecifiedNamesValidationInfo) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifiedNamesValidationInfo) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SpecifiedNamesValidationInfo) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SpecifiedNamesValidationInfo) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *SpecifiedNamesValidationInfo) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifiedNamesValidationInfo) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *SpecifiedNamesValidationInfo) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *SpecifiedNamesValidationInfo) SetUserName(v string) {
	o.UserName = &v
}

func (o SpecifiedNamesValidationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MachineName != nil {
		toSerialize["machine_name"] = o.MachineName
	}
	if o.SpecifiedNamesStatuses != nil {
		toSerialize["specified_names_statuses"] = o.SpecifiedNamesStatuses
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.UserName != nil {
		toSerialize["user_name"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableSpecifiedNamesValidationInfo struct {
	value *SpecifiedNamesValidationInfo
	isSet bool
}

func (v NullableSpecifiedNamesValidationInfo) Get() *SpecifiedNamesValidationInfo {
	return v.value
}

func (v *NullableSpecifiedNamesValidationInfo) Set(val *SpecifiedNamesValidationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecifiedNamesValidationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecifiedNamesValidationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecifiedNamesValidationInfo(val *SpecifiedNamesValidationInfo) *NullableSpecifiedNamesValidationInfo {
	return &NullableSpecifiedNamesValidationInfo{value: val, isSet: true}
}

func (v NullableSpecifiedNamesValidationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecifiedNamesValidationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
