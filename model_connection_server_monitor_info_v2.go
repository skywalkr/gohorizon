/*
 * Horizon Server API
 *
 * Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

// ConnectionServerMonitorInfoV2 Monitoring information related to Connection Server.
type ConnectionServerMonitorInfoV2 struct {
	Certificate CertificateMonitorInfo `json:"certificate"`
	// Number of connections to this Connection Server.
	ConnectionCount int32 `json:"connection_count,omitempty"`
	// Connection Server replication status with respect to the Peer Connection Servers in the same cluster.
	CsReplications []ConnectionServerMonitorCsReplication `json:"cs_replications,omitempty"`
	// Indicates whether server has the default certificate.
	DefaultCertificate bool                           `json:"default_certificate,omitempty"`
	Details            ConnectionServerMonitorDetails `json:"details"`
	// Unique ID of the Connection Server.
	Id string `json:"id"`
	// The timestamp in milliseconds when the last update was obtained. Measured as epoch time.
	LastUpdatedTimestamp int64 `json:"last_updated_timestamp,omitempty"`
	// Connection Server host name or IP address.
	Name string `json:"name"`
	// Connection Server related Windows services information.
	Services []ConnectionServerMonitorServiceStatus `json:"services,omitempty"`
	// PCoIP, RDP or BLAST protocol sessions details when clients connect directly to the connection server.
	SessionProtocolData []ConnectionServerSessionProtocolData `json:"session_protocol_data,omitempty"`
	// The maximum number of connections allowed for the connection server through the Horizon client. If all of the secure gateways (HTTP(S)/PCOIP/BLAST) are enabled, this field denotes the maximum number of connections allowed for the connection server.If none of the secure gateways(HTTP(S)/PCOIP/BLAST) are enabled, sessionThreshold value will not be set.
	SessionThreshold int32 `json:"session_threshold,omitempty"`
	// Status of the Connection Server. * OK: The Connection Server is working properly. * ERROR: Error occurred when connecting to Connection Server. * NOT_RESPONDING: The Connection Server is not responding. * UNKNOWN: Status of Connection Server is unknown.
	Status string `json:"status"`
	// Number of connections tunneled through this Connection Server.
	TunnelConnectionCount int32 `json:"tunnel_connection_count,omitempty"`
}
