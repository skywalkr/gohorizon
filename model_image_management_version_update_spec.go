/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ImageManagementVersionUpdateSpec Information related to image management version.
type ImageManagementVersionUpdateSpec struct {
	// Additional details about image management version.
	AdditionalDetails *map[string]string `json:"additional_details,omitempty"`
	// Image management version description.
	Description *string `json:"description,omitempty"`
	// Image management version name.
	Name string `json:"name"`
	// Image management version status. * AVAILABLE: Image management version is available for desktop pools/farms to be created. * DEPLOYING_VM: Image management version is deploying VM on the selected pod. * DEPLOYMENT_DONE: Image management version status when VM deployment is done for the selected pod. * DELETED: Image management version has been deleted. * DISABLED: Image management version has been disabled and no further pool operation can be done using the same. * FAILED: Image management version creation has failed. * PARTIALLY_AVAILABLE: Some of the image management asset creation in some of the virtual centers have failed. * PUBLISHING: Image management version is being published and specialized internally like installing agents etc. * REPLICATING: Copying the specialized images across all virtual centers.
	Status string `json:"status"`
}

// NewImageManagementVersionUpdateSpec instantiates a new ImageManagementVersionUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageManagementVersionUpdateSpec(name string, status string) *ImageManagementVersionUpdateSpec {
	this := ImageManagementVersionUpdateSpec{}
	this.Name = name
	this.Status = status
	return &this
}

// NewImageManagementVersionUpdateSpecWithDefaults instantiates a new ImageManagementVersionUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageManagementVersionUpdateSpecWithDefaults() *ImageManagementVersionUpdateSpec {
	this := ImageManagementVersionUpdateSpec{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *ImageManagementVersionUpdateSpec) GetAdditionalDetails() map[string]string {
	if o == nil || o.AdditionalDetails == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementVersionUpdateSpec) GetAdditionalDetailsOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalDetails == nil {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *ImageManagementVersionUpdateSpec) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails != nil {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given map[string]string and assigns it to the AdditionalDetails field.
func (o *ImageManagementVersionUpdateSpec) SetAdditionalDetails(v map[string]string) {
	o.AdditionalDetails = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ImageManagementVersionUpdateSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementVersionUpdateSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ImageManagementVersionUpdateSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ImageManagementVersionUpdateSpec) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *ImageManagementVersionUpdateSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ImageManagementVersionUpdateSpec) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ImageManagementVersionUpdateSpec) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *ImageManagementVersionUpdateSpec) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ImageManagementVersionUpdateSpec) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ImageManagementVersionUpdateSpec) SetStatus(v string) {
	o.Status = v
}

func (o ImageManagementVersionUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalDetails != nil {
		toSerialize["additional_details"] = o.AdditionalDetails
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableImageManagementVersionUpdateSpec struct {
	value *ImageManagementVersionUpdateSpec
	isSet bool
}

func (v NullableImageManagementVersionUpdateSpec) Get() *ImageManagementVersionUpdateSpec {
	return v.value
}

func (v *NullableImageManagementVersionUpdateSpec) Set(val *ImageManagementVersionUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableImageManagementVersionUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableImageManagementVersionUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageManagementVersionUpdateSpec(val *ImageManagementVersionUpdateSpec) *NullableImageManagementVersionUpdateSpec {
	return &NullableImageManagementVersionUpdateSpec{value: val, isSet: true}
}

func (v NullableImageManagementVersionUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageManagementVersionUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
