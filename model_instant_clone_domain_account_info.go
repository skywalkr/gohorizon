/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// InstantCloneDomainAccountInfo Information related to instant clone domain accounts of the environment.
type InstantCloneDomainAccountInfo struct {
	// SID of the AD Domain that this account user belongs to.
	AdDomainId string `json:"ad_domain_id"`
	// Unique ID representing instant clone domain account.
	Id string `json:"id"`
	// User name of the account.
	Username string `json:"username"`
}

// NewInstantCloneDomainAccountInfo instantiates a new InstantCloneDomainAccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstantCloneDomainAccountInfo(adDomainId string, id string, username string) *InstantCloneDomainAccountInfo {
	this := InstantCloneDomainAccountInfo{}
	this.AdDomainId = adDomainId
	this.Id = id
	this.Username = username
	return &this
}

// NewInstantCloneDomainAccountInfoWithDefaults instantiates a new InstantCloneDomainAccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstantCloneDomainAccountInfoWithDefaults() *InstantCloneDomainAccountInfo {
	this := InstantCloneDomainAccountInfo{}
	return &this
}

// GetAdDomainId returns the AdDomainId field value
func (o *InstantCloneDomainAccountInfo) GetAdDomainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdDomainId
}

// GetAdDomainIdOk returns a tuple with the AdDomainId field value
// and a boolean to check if the value has been set.
func (o *InstantCloneDomainAccountInfo) GetAdDomainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdDomainId, true
}

// SetAdDomainId sets field value
func (o *InstantCloneDomainAccountInfo) SetAdDomainId(v string) {
	o.AdDomainId = v
}

// GetId returns the Id field value
func (o *InstantCloneDomainAccountInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InstantCloneDomainAccountInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InstantCloneDomainAccountInfo) SetId(v string) {
	o.Id = v
}

// GetUsername returns the Username field value
func (o *InstantCloneDomainAccountInfo) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *InstantCloneDomainAccountInfo) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *InstantCloneDomainAccountInfo) SetUsername(v string) {
	o.Username = v
}

func (o InstantCloneDomainAccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ad_domain_id"] = o.AdDomainId
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableInstantCloneDomainAccountInfo struct {
	value *InstantCloneDomainAccountInfo
	isSet bool
}

func (v NullableInstantCloneDomainAccountInfo) Get() *InstantCloneDomainAccountInfo {
	return v.value
}

func (v *NullableInstantCloneDomainAccountInfo) Set(val *InstantCloneDomainAccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInstantCloneDomainAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInstantCloneDomainAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstantCloneDomainAccountInfo(val *InstantCloneDomainAccountInfo) *NullableInstantCloneDomainAccountInfo {
	return &NullableInstantCloneDomainAccountInfo{value: val, isSet: true}
}

func (v NullableInstantCloneDomainAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstantCloneDomainAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
