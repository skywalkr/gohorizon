/*
 * Horizon Server API
 *
 * Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

// DesktopPoolSessionSettingsV2 Machine settings applicable when a user logs off or when a desktop pool is no longer keeping a machine as a spare.
type DesktopPoolSessionSettingsV2 struct {
	// Indicates whether multiple sessions are allowed per user in case of Floating User Assignment. Default value is false.
	AllowMultipleSessionsPerUser bool `json:"allow_multiple_sessions_per_user"`
	// Indicates whether the user can be allowed to reset or restart their machines. Default value is false.
	AllowUsersToResetMachines bool `json:"allow_users_to_reset_machines"`
	// Whether machines are to be deleted or refreshed after logoff in case of Floating User Assignment.This is applicable for automated desktops with virtual machines names based onpattern naming. This is not applicable for desktops that are using specified naming since dynamic creation and deletion of VMs is not supported.For Instant clone desktops this setting can only be set to DELETE. Default value is NEVER. * NEVER: Never delete or refresh the machine in the desktop pool. * DELETE: Delete the machine after user logoff. * REFRESH: Refresh the machine after user logoff.
	DeleteOrRefreshMachineAfterLogoff string `json:"delete_or_refresh_machine_after_logoff"`
	// Disconnected sessions timeout (in minutes). Will be set when disconnected_session_timeout_policy is set to AFTER.
	DisconnectedSessionTimeoutMinutes int32 `json:"disconnected_session_timeout_minutes,omitempty"`
	// Log-off policy after disconnected session. Default value is NEVER. * IMMEDIATELY: Immmediately Logoff after user disconnect. * AFTER: Logoff after the specified number of minutes after user disconnect. * NEVER: Do not logoff after user disconnect.
	DisconnectedSessionTimeoutPolicy string `json:"disconnected_session_timeout_policy"`
	// Application empty session timeout (in minutes). An empty session (that has no remote-ablewindow) is disconnected after the timeout. Default value is 1.Will be set when the empty_session_timeout_policy set to AFTER.
	EmptySessionTimeoutMinutes int32 `json:"empty_session_timeout_minutes,omitempty"`
	// Application empty session timeout policy. Default value is AFTER. * IMMEDIATE: Empty session will be disconnected immediately. * NEVER: Empty session will never disconnected. * AFTER: Empty session will be disconnected after specified number of minutes.
	EmptySessionTimeoutPolicy string `json:"empty_session_timeout_policy"`
	// Indicates whether the empty application sessions are logged off (true) or disconnected (false) after timeout.Default value is false.
	LogoffAfterTimeout bool `json:"logoff_after_timeout"`
	// Power policy for the machines in the desktop pool after logoff. This setting is only relevant for managed machines.Default value is TAKE_NO_POWER_ACTION.For Instant clone desktops this setting can only be set to ALWAYS_POWERED_ON. * TAKE_NO_POWER_ACTION: No action will be taken when user logs off. * ALWAYS_POWERED_ON: Ensure machines in the Desktop pool are always powered on.The connection server will monitor and power on machines as necessary. * SUSPEND: Suspend when a user logs off or when desktop pool is no longer keeping a machine as a spare.This does not affect spare and newly provisioned machines. * POWER_OFF: Power off when a user logs off or when desktop pool is no longer keeping a machine as a spare.This does not affect spare and newly provisioned machines.
	PowerPolicy string `json:"power_policy"`
	// Application pre-launch session timeout (in minutes). A pre-launch session is disconnected after the timeout. Default value is 10.Will be required when the pre-launch session timeout policy is set to AFTER.
	PreLaunchSessionTimeoutMinutes int32 `json:"pre_launch_session_timeout_minutes,omitempty"`
	// Application pre-launch session timeout policy. Default value is AFTER. * NEVER: Pre-launched session is never disconnected. * AFTER: Pre-launched session is disconnected after specified number of minutes.
	PreLaunchSessionTimeoutPolicy string `json:"pre_launch_session_timeout_policy,omitempty"`
	// Whether and when to refresh the OS disks for dedicated-assignment, linked-clone and instant-clone machines.Default value is NEVER. * NEVER: The OS disk is never refreshed. * ALWAYS: The OS disk is refreshed every time the user logs off. * EVERY: The OS disk is refreshed at regular intervals of a specified number of days. The number of days is counted from the last refresh, or from the initial provisioning if no refresh has occurred yet. For example, if the specified value is 3 days, and three days have passed since the last refresh, the machine is refreshed after the user logs off. * AT_SIZE: The OS disk is refreshed when its current size reaches a specified percentage of its maximum allowable size. The maximum size of a linked clone's OS disk is the size of the replica's OS disk. With this option, the size of the linked clone's OS disk in the datastore is compared to maximum allowable size. This disk-utilization percentage does not reflect disk usage that you might see inside the machine's guest operating system.
	RefreshOsDiskAfterLogoff string `json:"refresh_os_disk_after_logoff"`
	// Regular interval at which to refresh the OS disk. Will be set when refresh_os_disk_after_logoff set to EVERY.
	RefreshPeriodDaysForReplicaOsDisk int32 `json:"refresh_period_days_for_replica_os_disk"`
	// With the 'AT_SIZE' option for refreshOsDiskAfterLogoff, the size of the linked clone's OS diskin the datastore is compared to its maximum allowable size. This disk-utilization percentage does not reflect disk usage that you might see inside the machine's guest operating system.Will be set when refresh_os_disk_after_logoff set to AT_SIZE.
	RefreshThresholdPercentageForReplicaOsDisk int32 `json:"refresh_threshold_percentage_for_replica_os_disk"`
}
