/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// FederationAccessGroupCreateSpec Information related to Federation Access Group.
type FederationAccessGroupCreateSpec struct {
	// Federation Access Group Description.
	Description *string `json:"description,omitempty"`
	// Federation Access Group Name. This property must contain only alphanumerics, underscores, and dashes.
	Name string `json:"name"`
}

// NewFederationAccessGroupCreateSpec instantiates a new FederationAccessGroupCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFederationAccessGroupCreateSpec(name string) *FederationAccessGroupCreateSpec {
	this := FederationAccessGroupCreateSpec{}
	this.Name = name
	return &this
}

// NewFederationAccessGroupCreateSpecWithDefaults instantiates a new FederationAccessGroupCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFederationAccessGroupCreateSpecWithDefaults() *FederationAccessGroupCreateSpec {
	this := FederationAccessGroupCreateSpec{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FederationAccessGroupCreateSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationAccessGroupCreateSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FederationAccessGroupCreateSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FederationAccessGroupCreateSpec) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *FederationAccessGroupCreateSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FederationAccessGroupCreateSpec) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FederationAccessGroupCreateSpec) SetName(v string) {
	o.Name = v
}

func (o FederationAccessGroupCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFederationAccessGroupCreateSpec struct {
	value *FederationAccessGroupCreateSpec
	isSet bool
}

func (v NullableFederationAccessGroupCreateSpec) Get() *FederationAccessGroupCreateSpec {
	return v.value
}

func (v *NullableFederationAccessGroupCreateSpec) Set(val *FederationAccessGroupCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableFederationAccessGroupCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableFederationAccessGroupCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFederationAccessGroupCreateSpec(val *FederationAccessGroupCreateSpec) *NullableFederationAccessGroupCreateSpec {
	return &NullableFederationAccessGroupCreateSpec{value: val, isSet: true}
}

func (v NullableFederationAccessGroupCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFederationAccessGroupCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
