/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DesktopPoolProvisioningSettingsUpdateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DesktopPoolProvisioningSettingsUpdateSpec{}

// DesktopPoolProvisioningSettingsUpdateSpec Applicable To: Automated desktop pool. <br>Virtual Center provisioning settings for automated desktop pool.
type DesktopPoolProvisioningSettingsUpdateSpec struct {
	// Host or cluster where the machines are deployed in.
	HostOrClusterId string `json:"host_or_cluster_id"`
	// Applicable To: Full clone desktop pools.<br> This is required when vm_template_id is not set.
	ImStreamId *string `json:"im_stream_id,omitempty"`
	// Applicable To: Full clone desktop pools.<br> This is required when im_stream_id is set.
	ImTagId *string `json:"im_tag_id,omitempty"`
	// Resource pool to deploy the machines.
	ResourcePoolId string `json:"resource_pool_id"`
	// Applicable To: Full clone desktop pools.<br>Template from which full clone machines are deployed.
	VmTemplateId *string `json:"vm_template_id,omitempty"`
}

type _DesktopPoolProvisioningSettingsUpdateSpec DesktopPoolProvisioningSettingsUpdateSpec

// NewDesktopPoolProvisioningSettingsUpdateSpec instantiates a new DesktopPoolProvisioningSettingsUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesktopPoolProvisioningSettingsUpdateSpec(hostOrClusterId string, resourcePoolId string) *DesktopPoolProvisioningSettingsUpdateSpec {
	this := DesktopPoolProvisioningSettingsUpdateSpec{}
	this.HostOrClusterId = hostOrClusterId
	this.ResourcePoolId = resourcePoolId
	return &this
}

// NewDesktopPoolProvisioningSettingsUpdateSpecWithDefaults instantiates a new DesktopPoolProvisioningSettingsUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesktopPoolProvisioningSettingsUpdateSpecWithDefaults() *DesktopPoolProvisioningSettingsUpdateSpec {
	this := DesktopPoolProvisioningSettingsUpdateSpec{}
	return &this
}

// GetHostOrClusterId returns the HostOrClusterId field value
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetHostOrClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostOrClusterId
}

// GetHostOrClusterIdOk returns a tuple with the HostOrClusterId field value
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetHostOrClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostOrClusterId, true
}

// SetHostOrClusterId sets field value
func (o *DesktopPoolProvisioningSettingsUpdateSpec) SetHostOrClusterId(v string) {
	o.HostOrClusterId = v
}

// GetImStreamId returns the ImStreamId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetImStreamId() string {
	if o == nil || IsNil(o.ImStreamId) {
		var ret string
		return ret
	}
	return *o.ImStreamId
}

// GetImStreamIdOk returns a tuple with the ImStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetImStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImStreamId) {
		return nil, false
	}
	return o.ImStreamId, true
}

// HasImStreamId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) HasImStreamId() bool {
	if o != nil && !IsNil(o.ImStreamId) {
		return true
	}

	return false
}

// SetImStreamId gets a reference to the given string and assigns it to the ImStreamId field.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) SetImStreamId(v string) {
	o.ImStreamId = &v
}

// GetImTagId returns the ImTagId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetImTagId() string {
	if o == nil || IsNil(o.ImTagId) {
		var ret string
		return ret
	}
	return *o.ImTagId
}

// GetImTagIdOk returns a tuple with the ImTagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetImTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImTagId) {
		return nil, false
	}
	return o.ImTagId, true
}

// HasImTagId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) HasImTagId() bool {
	if o != nil && !IsNil(o.ImTagId) {
		return true
	}

	return false
}

// SetImTagId gets a reference to the given string and assigns it to the ImTagId field.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) SetImTagId(v string) {
	o.ImTagId = &v
}

// GetResourcePoolId returns the ResourcePoolId field value
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetResourcePoolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetResourcePoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourcePoolId, true
}

// SetResourcePoolId sets field value
func (o *DesktopPoolProvisioningSettingsUpdateSpec) SetResourcePoolId(v string) {
	o.ResourcePoolId = v
}

// GetVmTemplateId returns the VmTemplateId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetVmTemplateId() string {
	if o == nil || IsNil(o.VmTemplateId) {
		var ret string
		return ret
	}
	return *o.VmTemplateId
}

// GetVmTemplateIdOk returns a tuple with the VmTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) GetVmTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.VmTemplateId) {
		return nil, false
	}
	return o.VmTemplateId, true
}

// HasVmTemplateId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) HasVmTemplateId() bool {
	if o != nil && !IsNil(o.VmTemplateId) {
		return true
	}

	return false
}

// SetVmTemplateId gets a reference to the given string and assigns it to the VmTemplateId field.
func (o *DesktopPoolProvisioningSettingsUpdateSpec) SetVmTemplateId(v string) {
	o.VmTemplateId = &v
}

func (o DesktopPoolProvisioningSettingsUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DesktopPoolProvisioningSettingsUpdateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host_or_cluster_id"] = o.HostOrClusterId
	if !IsNil(o.ImStreamId) {
		toSerialize["im_stream_id"] = o.ImStreamId
	}
	if !IsNil(o.ImTagId) {
		toSerialize["im_tag_id"] = o.ImTagId
	}
	toSerialize["resource_pool_id"] = o.ResourcePoolId
	if !IsNil(o.VmTemplateId) {
		toSerialize["vm_template_id"] = o.VmTemplateId
	}
	return toSerialize, nil
}

func (o *DesktopPoolProvisioningSettingsUpdateSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host_or_cluster_id",
		"resource_pool_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDesktopPoolProvisioningSettingsUpdateSpec := _DesktopPoolProvisioningSettingsUpdateSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDesktopPoolProvisioningSettingsUpdateSpec)

	if err != nil {
		return err
	}

	*o = DesktopPoolProvisioningSettingsUpdateSpec(varDesktopPoolProvisioningSettingsUpdateSpec)

	return err
}

type NullableDesktopPoolProvisioningSettingsUpdateSpec struct {
	value *DesktopPoolProvisioningSettingsUpdateSpec
	isSet bool
}

func (v NullableDesktopPoolProvisioningSettingsUpdateSpec) Get() *DesktopPoolProvisioningSettingsUpdateSpec {
	return v.value
}

func (v *NullableDesktopPoolProvisioningSettingsUpdateSpec) Set(val *DesktopPoolProvisioningSettingsUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableDesktopPoolProvisioningSettingsUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableDesktopPoolProvisioningSettingsUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesktopPoolProvisioningSettingsUpdateSpec(val *DesktopPoolProvisioningSettingsUpdateSpec) *NullableDesktopPoolProvisioningSettingsUpdateSpec {
	return &NullableDesktopPoolProvisioningSettingsUpdateSpec{value: val, isSet: true}
}

func (v NullableDesktopPoolProvisioningSettingsUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesktopPoolProvisioningSettingsUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


