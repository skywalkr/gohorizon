/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// PodMonitorInfo Monitoring information related to a pod.
type PodMonitorInfo struct {
	// The list of pod endpoints within this pod. An endpoint is basically a connection server in that pod.
	Endpoints *[]PodEndPointData `json:"endpoints,omitempty"`
	// Unique ID of the pod.
	Id *string `json:"id,omitempty"`
	// Display name for the pod.
	Name *string `json:"name,omitempty"`
	// The Id of the site this pod belongs to.
	SiteId *string `json:"site_id,omitempty"`
}

// NewPodMonitorInfo instantiates a new PodMonitorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodMonitorInfo() *PodMonitorInfo {
	this := PodMonitorInfo{}
	return &this
}

// NewPodMonitorInfoWithDefaults instantiates a new PodMonitorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodMonitorInfoWithDefaults() *PodMonitorInfo {
	this := PodMonitorInfo{}
	return &this
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *PodMonitorInfo) GetEndpoints() []PodEndPointData {
	if o == nil || o.Endpoints == nil {
		var ret []PodEndPointData
		return ret
	}
	return *o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodMonitorInfo) GetEndpointsOk() (*[]PodEndPointData, bool) {
	if o == nil || o.Endpoints == nil {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *PodMonitorInfo) HasEndpoints() bool {
	if o != nil && o.Endpoints != nil {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []PodEndPointData and assigns it to the Endpoints field.
func (o *PodMonitorInfo) SetEndpoints(v []PodEndPointData) {
	o.Endpoints = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PodMonitorInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodMonitorInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PodMonitorInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PodMonitorInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PodMonitorInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodMonitorInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PodMonitorInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PodMonitorInfo) SetName(v string) {
	o.Name = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *PodMonitorInfo) GetSiteId() string {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodMonitorInfo) GetSiteIdOk() (*string, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *PodMonitorInfo) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *PodMonitorInfo) SetSiteId(v string) {
	o.SiteId = &v
}

func (o PodMonitorInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Endpoints != nil {
		toSerialize["endpoints"] = o.Endpoints
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SiteId != nil {
		toSerialize["site_id"] = o.SiteId
	}
	return json.Marshal(toSerialize)
}

type NullablePodMonitorInfo struct {
	value *PodMonitorInfo
	isSet bool
}

func (v NullablePodMonitorInfo) Get() *PodMonitorInfo {
	return v.value
}

func (v *NullablePodMonitorInfo) Set(val *PodMonitorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePodMonitorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePodMonitorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodMonitorInfo(val *PodMonitorInfo) *NullablePodMonitorInfo {
	return &NullablePodMonitorInfo{value: val, isSet: true}
}

func (v NullablePodMonitorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodMonitorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
