/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConnectionServerLdapBackupSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServerLdapBackupSpec{}

// ConnectionServerLdapBackupSpec Information related to connection server LDAP backup.
type ConnectionServerLdapBackupSpec struct {
	// Ldap Backup Frequency. * HOUR_1: Backup every 1 hour. * HOUR_6: Backup every 6 hours. * HOUR_12: Backup every 12 hours. * DAY_1: Backup every 1 day. * DAY_2: Backup every 2 days. * WEEK_1: Backup every 1 week. * WEEK_2: Backup every 2 weeks. * HOUR_0: Never Backup.
	FrequencyTime string `json:"frequency_time"`
	// Location of the backup folder.
	LdapBackupFolder string `json:"ldap_backup_folder"`
	// Maximum number of backups.
	MaxNumber int32 `json:"max_number"`
	// Ldap backup time offset in minutes
	TimeOffset int32 `json:"time_offset"`
}

type _ConnectionServerLdapBackupSpec ConnectionServerLdapBackupSpec

// NewConnectionServerLdapBackupSpec instantiates a new ConnectionServerLdapBackupSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerLdapBackupSpec(frequencyTime string, ldapBackupFolder string, maxNumber int32, timeOffset int32) *ConnectionServerLdapBackupSpec {
	this := ConnectionServerLdapBackupSpec{}
	this.FrequencyTime = frequencyTime
	this.LdapBackupFolder = ldapBackupFolder
	this.MaxNumber = maxNumber
	this.TimeOffset = timeOffset
	return &this
}

// NewConnectionServerLdapBackupSpecWithDefaults instantiates a new ConnectionServerLdapBackupSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerLdapBackupSpecWithDefaults() *ConnectionServerLdapBackupSpec {
	this := ConnectionServerLdapBackupSpec{}
	return &this
}

// GetFrequencyTime returns the FrequencyTime field value
func (o *ConnectionServerLdapBackupSpec) GetFrequencyTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrequencyTime
}

// GetFrequencyTimeOk returns a tuple with the FrequencyTime field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupSpec) GetFrequencyTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrequencyTime, true
}

// SetFrequencyTime sets field value
func (o *ConnectionServerLdapBackupSpec) SetFrequencyTime(v string) {
	o.FrequencyTime = v
}

// GetLdapBackupFolder returns the LdapBackupFolder field value
func (o *ConnectionServerLdapBackupSpec) GetLdapBackupFolder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LdapBackupFolder
}

// GetLdapBackupFolderOk returns a tuple with the LdapBackupFolder field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupSpec) GetLdapBackupFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LdapBackupFolder, true
}

// SetLdapBackupFolder sets field value
func (o *ConnectionServerLdapBackupSpec) SetLdapBackupFolder(v string) {
	o.LdapBackupFolder = v
}

// GetMaxNumber returns the MaxNumber field value
func (o *ConnectionServerLdapBackupSpec) GetMaxNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxNumber
}

// GetMaxNumberOk returns a tuple with the MaxNumber field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupSpec) GetMaxNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxNumber, true
}

// SetMaxNumber sets field value
func (o *ConnectionServerLdapBackupSpec) SetMaxNumber(v int32) {
	o.MaxNumber = v
}

// GetTimeOffset returns the TimeOffset field value
func (o *ConnectionServerLdapBackupSpec) GetTimeOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeOffset
}

// GetTimeOffsetOk returns a tuple with the TimeOffset field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerLdapBackupSpec) GetTimeOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOffset, true
}

// SetTimeOffset sets field value
func (o *ConnectionServerLdapBackupSpec) SetTimeOffset(v int32) {
	o.TimeOffset = v
}

func (o ConnectionServerLdapBackupSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServerLdapBackupSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["frequency_time"] = o.FrequencyTime
	toSerialize["ldap_backup_folder"] = o.LdapBackupFolder
	toSerialize["max_number"] = o.MaxNumber
	toSerialize["time_offset"] = o.TimeOffset
	return toSerialize, nil
}

func (o *ConnectionServerLdapBackupSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"frequency_time",
		"ldap_backup_folder",
		"max_number",
		"time_offset",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectionServerLdapBackupSpec := _ConnectionServerLdapBackupSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConnectionServerLdapBackupSpec)

	if err != nil {
		return err
	}

	*o = ConnectionServerLdapBackupSpec(varConnectionServerLdapBackupSpec)

	return err
}

type NullableConnectionServerLdapBackupSpec struct {
	value *ConnectionServerLdapBackupSpec
	isSet bool
}

func (v NullableConnectionServerLdapBackupSpec) Get() *ConnectionServerLdapBackupSpec {
	return v.value
}

func (v *NullableConnectionServerLdapBackupSpec) Set(val *ConnectionServerLdapBackupSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerLdapBackupSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerLdapBackupSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerLdapBackupSpec(val *ConnectionServerLdapBackupSpec) *NullableConnectionServerLdapBackupSpec {
	return &NullableConnectionServerLdapBackupSpec{value: val, isSet: true}
}

func (v NullableConnectionServerLdapBackupSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerLdapBackupSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


