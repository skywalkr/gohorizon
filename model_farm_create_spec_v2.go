/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FarmCreateSpecV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmCreateSpecV2{}

// FarmCreateSpecV2 Information required to create a farm.
type FarmCreateSpecV2 struct {
	// Access groups can organize the entities such as farms in the organization. They can also be used for delegated administration.
	AccessGroupId string `json:"access_group_id"`
	AutomatedFarmSettings *FarmAutomatedSettingsCreateSpecV2 `json:"automated_farm_settings,omitempty"`
	// Description of the farm.
	Description *string `json:"description,omitempty"`
	// Display name of the farm. If the display name is left blank, it defaults to name.
	DisplayName *string `json:"display_name,omitempty"`
	DisplayProtocolSettings *FarmDisplayProtocolSettingsCreateSpec `json:"display_protocol_settings,omitempty"`
	// Indicates whether the farm is enabled for brokering. Default value is true.
	Enabled *bool `json:"enabled,omitempty"`
	LoadBalancerSettings *RDSHLoadBalancerSettingsCreateSpec `json:"load_balancer_settings,omitempty"`
	// Name of the farm. This property must contain only alphanumerics, underscores, and dashes.
	Name string `json:"name"`
	// List of IDs of RDS Servers in the Manual Farm. This is applicable if type is set to MANUAL.
	RdsServerIds []string `json:"rds_server_ids,omitempty"`
	// The minimum number of machines that must be fully operational in order to avoid showing the farm in an error state. Default value is 0.
	ServerErrorThreshold *int32 `json:"server_error_threshold,omitempty"`
	SessionSettings *FarmSessionSettingsCreateSpec `json:"session_settings,omitempty"`
	// Type of the farm. * AUTOMATED: Automated Farm. * MANUAL: Manual Farm.
	Type string `json:"type"`
	// Indicates whether to use custom scripts for load balancing or not. Default value is false.
	UseCustomScriptForLoadBalancing *bool `json:"use_custom_script_for_load_balancing,omitempty"`
}

type _FarmCreateSpecV2 FarmCreateSpecV2

// NewFarmCreateSpecV2 instantiates a new FarmCreateSpecV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmCreateSpecV2(accessGroupId string, name string, type_ string) *FarmCreateSpecV2 {
	this := FarmCreateSpecV2{}
	this.AccessGroupId = accessGroupId
	this.Name = name
	this.Type = type_
	return &this
}

// NewFarmCreateSpecV2WithDefaults instantiates a new FarmCreateSpecV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmCreateSpecV2WithDefaults() *FarmCreateSpecV2 {
	this := FarmCreateSpecV2{}
	return &this
}

// GetAccessGroupId returns the AccessGroupId field value
func (o *FarmCreateSpecV2) GetAccessGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessGroupId
}

// GetAccessGroupIdOk returns a tuple with the AccessGroupId field value
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetAccessGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessGroupId, true
}

// SetAccessGroupId sets field value
func (o *FarmCreateSpecV2) SetAccessGroupId(v string) {
	o.AccessGroupId = v
}

// GetAutomatedFarmSettings returns the AutomatedFarmSettings field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetAutomatedFarmSettings() FarmAutomatedSettingsCreateSpecV2 {
	if o == nil || IsNil(o.AutomatedFarmSettings) {
		var ret FarmAutomatedSettingsCreateSpecV2
		return ret
	}
	return *o.AutomatedFarmSettings
}

// GetAutomatedFarmSettingsOk returns a tuple with the AutomatedFarmSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetAutomatedFarmSettingsOk() (*FarmAutomatedSettingsCreateSpecV2, bool) {
	if o == nil || IsNil(o.AutomatedFarmSettings) {
		return nil, false
	}
	return o.AutomatedFarmSettings, true
}

// HasAutomatedFarmSettings returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasAutomatedFarmSettings() bool {
	if o != nil && !IsNil(o.AutomatedFarmSettings) {
		return true
	}

	return false
}

// SetAutomatedFarmSettings gets a reference to the given FarmAutomatedSettingsCreateSpecV2 and assigns it to the AutomatedFarmSettings field.
func (o *FarmCreateSpecV2) SetAutomatedFarmSettings(v FarmAutomatedSettingsCreateSpecV2) {
	o.AutomatedFarmSettings = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FarmCreateSpecV2) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *FarmCreateSpecV2) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayProtocolSettings returns the DisplayProtocolSettings field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetDisplayProtocolSettings() FarmDisplayProtocolSettingsCreateSpec {
	if o == nil || IsNil(o.DisplayProtocolSettings) {
		var ret FarmDisplayProtocolSettingsCreateSpec
		return ret
	}
	return *o.DisplayProtocolSettings
}

// GetDisplayProtocolSettingsOk returns a tuple with the DisplayProtocolSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetDisplayProtocolSettingsOk() (*FarmDisplayProtocolSettingsCreateSpec, bool) {
	if o == nil || IsNil(o.DisplayProtocolSettings) {
		return nil, false
	}
	return o.DisplayProtocolSettings, true
}

// HasDisplayProtocolSettings returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasDisplayProtocolSettings() bool {
	if o != nil && !IsNil(o.DisplayProtocolSettings) {
		return true
	}

	return false
}

// SetDisplayProtocolSettings gets a reference to the given FarmDisplayProtocolSettingsCreateSpec and assigns it to the DisplayProtocolSettings field.
func (o *FarmCreateSpecV2) SetDisplayProtocolSettings(v FarmDisplayProtocolSettingsCreateSpec) {
	o.DisplayProtocolSettings = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *FarmCreateSpecV2) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetLoadBalancerSettings returns the LoadBalancerSettings field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetLoadBalancerSettings() RDSHLoadBalancerSettingsCreateSpec {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		var ret RDSHLoadBalancerSettingsCreateSpec
		return ret
	}
	return *o.LoadBalancerSettings
}

// GetLoadBalancerSettingsOk returns a tuple with the LoadBalancerSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetLoadBalancerSettingsOk() (*RDSHLoadBalancerSettingsCreateSpec, bool) {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		return nil, false
	}
	return o.LoadBalancerSettings, true
}

// HasLoadBalancerSettings returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasLoadBalancerSettings() bool {
	if o != nil && !IsNil(o.LoadBalancerSettings) {
		return true
	}

	return false
}

// SetLoadBalancerSettings gets a reference to the given RDSHLoadBalancerSettingsCreateSpec and assigns it to the LoadBalancerSettings field.
func (o *FarmCreateSpecV2) SetLoadBalancerSettings(v RDSHLoadBalancerSettingsCreateSpec) {
	o.LoadBalancerSettings = &v
}

// GetName returns the Name field value
func (o *FarmCreateSpecV2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FarmCreateSpecV2) SetName(v string) {
	o.Name = v
}

// GetRdsServerIds returns the RdsServerIds field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetRdsServerIds() []string {
	if o == nil || IsNil(o.RdsServerIds) {
		var ret []string
		return ret
	}
	return o.RdsServerIds
}

// GetRdsServerIdsOk returns a tuple with the RdsServerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetRdsServerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RdsServerIds) {
		return nil, false
	}
	return o.RdsServerIds, true
}

// HasRdsServerIds returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasRdsServerIds() bool {
	if o != nil && !IsNil(o.RdsServerIds) {
		return true
	}

	return false
}

// SetRdsServerIds gets a reference to the given []string and assigns it to the RdsServerIds field.
func (o *FarmCreateSpecV2) SetRdsServerIds(v []string) {
	o.RdsServerIds = v
}

// GetServerErrorThreshold returns the ServerErrorThreshold field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetServerErrorThreshold() int32 {
	if o == nil || IsNil(o.ServerErrorThreshold) {
		var ret int32
		return ret
	}
	return *o.ServerErrorThreshold
}

// GetServerErrorThresholdOk returns a tuple with the ServerErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetServerErrorThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerErrorThreshold) {
		return nil, false
	}
	return o.ServerErrorThreshold, true
}

// HasServerErrorThreshold returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasServerErrorThreshold() bool {
	if o != nil && !IsNil(o.ServerErrorThreshold) {
		return true
	}

	return false
}

// SetServerErrorThreshold gets a reference to the given int32 and assigns it to the ServerErrorThreshold field.
func (o *FarmCreateSpecV2) SetServerErrorThreshold(v int32) {
	o.ServerErrorThreshold = &v
}

// GetSessionSettings returns the SessionSettings field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetSessionSettings() FarmSessionSettingsCreateSpec {
	if o == nil || IsNil(o.SessionSettings) {
		var ret FarmSessionSettingsCreateSpec
		return ret
	}
	return *o.SessionSettings
}

// GetSessionSettingsOk returns a tuple with the SessionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetSessionSettingsOk() (*FarmSessionSettingsCreateSpec, bool) {
	if o == nil || IsNil(o.SessionSettings) {
		return nil, false
	}
	return o.SessionSettings, true
}

// HasSessionSettings returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasSessionSettings() bool {
	if o != nil && !IsNil(o.SessionSettings) {
		return true
	}

	return false
}

// SetSessionSettings gets a reference to the given FarmSessionSettingsCreateSpec and assigns it to the SessionSettings field.
func (o *FarmCreateSpecV2) SetSessionSettings(v FarmSessionSettingsCreateSpec) {
	o.SessionSettings = &v
}

// GetType returns the Type field value
func (o *FarmCreateSpecV2) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FarmCreateSpecV2) SetType(v string) {
	o.Type = v
}

// GetUseCustomScriptForLoadBalancing returns the UseCustomScriptForLoadBalancing field value if set, zero value otherwise.
func (o *FarmCreateSpecV2) GetUseCustomScriptForLoadBalancing() bool {
	if o == nil || IsNil(o.UseCustomScriptForLoadBalancing) {
		var ret bool
		return ret
	}
	return *o.UseCustomScriptForLoadBalancing
}

// GetUseCustomScriptForLoadBalancingOk returns a tuple with the UseCustomScriptForLoadBalancing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmCreateSpecV2) GetUseCustomScriptForLoadBalancingOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCustomScriptForLoadBalancing) {
		return nil, false
	}
	return o.UseCustomScriptForLoadBalancing, true
}

// HasUseCustomScriptForLoadBalancing returns a boolean if a field has been set.
func (o *FarmCreateSpecV2) HasUseCustomScriptForLoadBalancing() bool {
	if o != nil && !IsNil(o.UseCustomScriptForLoadBalancing) {
		return true
	}

	return false
}

// SetUseCustomScriptForLoadBalancing gets a reference to the given bool and assigns it to the UseCustomScriptForLoadBalancing field.
func (o *FarmCreateSpecV2) SetUseCustomScriptForLoadBalancing(v bool) {
	o.UseCustomScriptForLoadBalancing = &v
}

func (o FarmCreateSpecV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmCreateSpecV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_group_id"] = o.AccessGroupId
	if !IsNil(o.AutomatedFarmSettings) {
		toSerialize["automated_farm_settings"] = o.AutomatedFarmSettings
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.DisplayProtocolSettings) {
		toSerialize["display_protocol_settings"] = o.DisplayProtocolSettings
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.LoadBalancerSettings) {
		toSerialize["load_balancer_settings"] = o.LoadBalancerSettings
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.RdsServerIds) {
		toSerialize["rds_server_ids"] = o.RdsServerIds
	}
	if !IsNil(o.ServerErrorThreshold) {
		toSerialize["server_error_threshold"] = o.ServerErrorThreshold
	}
	if !IsNil(o.SessionSettings) {
		toSerialize["session_settings"] = o.SessionSettings
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.UseCustomScriptForLoadBalancing) {
		toSerialize["use_custom_script_for_load_balancing"] = o.UseCustomScriptForLoadBalancing
	}
	return toSerialize, nil
}

func (o *FarmCreateSpecV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_group_id",
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFarmCreateSpecV2 := _FarmCreateSpecV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFarmCreateSpecV2)

	if err != nil {
		return err
	}

	*o = FarmCreateSpecV2(varFarmCreateSpecV2)

	return err
}

type NullableFarmCreateSpecV2 struct {
	value *FarmCreateSpecV2
	isSet bool
}

func (v NullableFarmCreateSpecV2) Get() *FarmCreateSpecV2 {
	return v.value
}

func (v *NullableFarmCreateSpecV2) Set(val *FarmCreateSpecV2) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmCreateSpecV2) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmCreateSpecV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmCreateSpecV2(val *FarmCreateSpecV2) *NullableFarmCreateSpecV2 {
	return &NullableFarmCreateSpecV2{value: val, isSet: true}
}

func (v NullableFarmCreateSpecV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmCreateSpecV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


