/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// FeatureSettingsUpdateSpec Information related to Feature Settings.
type FeatureSettingsUpdateSpec struct {
	// Indicates whether this cluster/pod is managed by Horizon Cloud Services. This will be false only when there are no cloud managed machines.
	CloudManaged *bool `json:"cloud_managed,omitempty"`
}

// NewFeatureSettingsUpdateSpec instantiates a new FeatureSettingsUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureSettingsUpdateSpec() *FeatureSettingsUpdateSpec {
	this := FeatureSettingsUpdateSpec{}
	return &this
}

// NewFeatureSettingsUpdateSpecWithDefaults instantiates a new FeatureSettingsUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureSettingsUpdateSpecWithDefaults() *FeatureSettingsUpdateSpec {
	this := FeatureSettingsUpdateSpec{}
	return &this
}

// GetCloudManaged returns the CloudManaged field value if set, zero value otherwise.
func (o *FeatureSettingsUpdateSpec) GetCloudManaged() bool {
	if o == nil || o.CloudManaged == nil {
		var ret bool
		return ret
	}
	return *o.CloudManaged
}

// GetCloudManagedOk returns a tuple with the CloudManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureSettingsUpdateSpec) GetCloudManagedOk() (*bool, bool) {
	if o == nil || o.CloudManaged == nil {
		return nil, false
	}
	return o.CloudManaged, true
}

// HasCloudManaged returns a boolean if a field has been set.
func (o *FeatureSettingsUpdateSpec) HasCloudManaged() bool {
	if o != nil && o.CloudManaged != nil {
		return true
	}

	return false
}

// SetCloudManaged gets a reference to the given bool and assigns it to the CloudManaged field.
func (o *FeatureSettingsUpdateSpec) SetCloudManaged(v bool) {
	o.CloudManaged = &v
}

func (o FeatureSettingsUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudManaged != nil {
		toSerialize["cloud_managed"] = o.CloudManaged
	}
	return json.Marshal(toSerialize)
}

type NullableFeatureSettingsUpdateSpec struct {
	value *FeatureSettingsUpdateSpec
	isSet bool
}

func (v NullableFeatureSettingsUpdateSpec) Get() *FeatureSettingsUpdateSpec {
	return v.value
}

func (v *NullableFeatureSettingsUpdateSpec) Set(val *FeatureSettingsUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureSettingsUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureSettingsUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureSettingsUpdateSpec(val *FeatureSettingsUpdateSpec) *NullableFeatureSettingsUpdateSpec {
	return &NullableFeatureSettingsUpdateSpec{value: val, isSet: true}
}

func (v NullableFeatureSettingsUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureSettingsUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
