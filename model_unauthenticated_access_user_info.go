/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the UnauthenticatedAccessUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnauthenticatedAccessUserInfo{}

// UnauthenticatedAccessUserInfo Information related to Unauthenticated Access User.
type UnauthenticatedAccessUserInfo struct {
	// Alias used for login from client.
	AliasName *string `json:"alias_name,omitempty"`
	// Description of the unauthenticated access user.
	Description *string `json:"description,omitempty"`
	// Mode used for hybrid logon. * PASSWORD: Hybrid logon via username and password. * TRUESSO: Hybrid logon via True SSO. * DISABLED: Hybrid logon disabled.
	HybridLogonMode *string `json:"hybrid_logon_mode,omitempty"`
	// ID of the unauthenticated access configuration for the user.
	Id *string `json:"id,omitempty"`
	// Pods in which the unauthenticated access user was created.  This will be unset if CPA is not initialized or if the caller does not have FEDERATED_LDAP_VIEW privilege.
	SourcePodIds []string `json:"source_pod_ids,omitempty"`
	// SID of the user for whom unauthenticated access is configured.
	UserId *string `json:"user_id,omitempty"`
}

// NewUnauthenticatedAccessUserInfo instantiates a new UnauthenticatedAccessUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthenticatedAccessUserInfo() *UnauthenticatedAccessUserInfo {
	this := UnauthenticatedAccessUserInfo{}
	return &this
}

// NewUnauthenticatedAccessUserInfoWithDefaults instantiates a new UnauthenticatedAccessUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthenticatedAccessUserInfoWithDefaults() *UnauthenticatedAccessUserInfo {
	this := UnauthenticatedAccessUserInfo{}
	return &this
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *UnauthenticatedAccessUserInfo) GetAliasName() string {
	if o == nil || IsNil(o.AliasName) {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthenticatedAccessUserInfo) GetAliasNameOk() (*string, bool) {
	if o == nil || IsNil(o.AliasName) {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *UnauthenticatedAccessUserInfo) HasAliasName() bool {
	if o != nil && !IsNil(o.AliasName) {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *UnauthenticatedAccessUserInfo) SetAliasName(v string) {
	o.AliasName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UnauthenticatedAccessUserInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthenticatedAccessUserInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UnauthenticatedAccessUserInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UnauthenticatedAccessUserInfo) SetDescription(v string) {
	o.Description = &v
}

// GetHybridLogonMode returns the HybridLogonMode field value if set, zero value otherwise.
func (o *UnauthenticatedAccessUserInfo) GetHybridLogonMode() string {
	if o == nil || IsNil(o.HybridLogonMode) {
		var ret string
		return ret
	}
	return *o.HybridLogonMode
}

// GetHybridLogonModeOk returns a tuple with the HybridLogonMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthenticatedAccessUserInfo) GetHybridLogonModeOk() (*string, bool) {
	if o == nil || IsNil(o.HybridLogonMode) {
		return nil, false
	}
	return o.HybridLogonMode, true
}

// HasHybridLogonMode returns a boolean if a field has been set.
func (o *UnauthenticatedAccessUserInfo) HasHybridLogonMode() bool {
	if o != nil && !IsNil(o.HybridLogonMode) {
		return true
	}

	return false
}

// SetHybridLogonMode gets a reference to the given string and assigns it to the HybridLogonMode field.
func (o *UnauthenticatedAccessUserInfo) SetHybridLogonMode(v string) {
	o.HybridLogonMode = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UnauthenticatedAccessUserInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthenticatedAccessUserInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UnauthenticatedAccessUserInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UnauthenticatedAccessUserInfo) SetId(v string) {
	o.Id = &v
}

// GetSourcePodIds returns the SourcePodIds field value if set, zero value otherwise.
func (o *UnauthenticatedAccessUserInfo) GetSourcePodIds() []string {
	if o == nil || IsNil(o.SourcePodIds) {
		var ret []string
		return ret
	}
	return o.SourcePodIds
}

// GetSourcePodIdsOk returns a tuple with the SourcePodIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthenticatedAccessUserInfo) GetSourcePodIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SourcePodIds) {
		return nil, false
	}
	return o.SourcePodIds, true
}

// HasSourcePodIds returns a boolean if a field has been set.
func (o *UnauthenticatedAccessUserInfo) HasSourcePodIds() bool {
	if o != nil && !IsNil(o.SourcePodIds) {
		return true
	}

	return false
}

// SetSourcePodIds gets a reference to the given []string and assigns it to the SourcePodIds field.
func (o *UnauthenticatedAccessUserInfo) SetSourcePodIds(v []string) {
	o.SourcePodIds = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UnauthenticatedAccessUserInfo) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthenticatedAccessUserInfo) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UnauthenticatedAccessUserInfo) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UnauthenticatedAccessUserInfo) SetUserId(v string) {
	o.UserId = &v
}

func (o UnauthenticatedAccessUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnauthenticatedAccessUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AliasName) {
		toSerialize["alias_name"] = o.AliasName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HybridLogonMode) {
		toSerialize["hybrid_logon_mode"] = o.HybridLogonMode
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SourcePodIds) {
		toSerialize["source_pod_ids"] = o.SourcePodIds
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableUnauthenticatedAccessUserInfo struct {
	value *UnauthenticatedAccessUserInfo
	isSet bool
}

func (v NullableUnauthenticatedAccessUserInfo) Get() *UnauthenticatedAccessUserInfo {
	return v.value
}

func (v *NullableUnauthenticatedAccessUserInfo) Set(val *UnauthenticatedAccessUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthenticatedAccessUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthenticatedAccessUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthenticatedAccessUserInfo(val *UnauthenticatedAccessUserInfo) *NullableUnauthenticatedAccessUserInfo {
	return &NullableUnauthenticatedAccessUserInfo{value: val, isSet: true}
}

func (v NullableUnauthenticatedAccessUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthenticatedAccessUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


