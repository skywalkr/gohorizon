/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the SiteInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteInfo{}

// SiteInfo Information related to sites in a pod federation.
type SiteInfo struct {
	// Detailed description of the site.
	Description *string `json:"description,omitempty"`
	// Unique ID representing the site.
	Id *string `json:"id,omitempty"`
	// Name of the site.
	Name *string `json:"name,omitempty"`
	// Member pods for this site.
	Pods []string `json:"pods,omitempty"`
}

// NewSiteInfo instantiates a new SiteInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteInfo() *SiteInfo {
	this := SiteInfo{}
	return &this
}

// NewSiteInfoWithDefaults instantiates a new SiteInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteInfoWithDefaults() *SiteInfo {
	this := SiteInfo{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SiteInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SiteInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SiteInfo) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SiteInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SiteInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SiteInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SiteInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SiteInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SiteInfo) SetName(v string) {
	o.Name = &v
}

// GetPods returns the Pods field value if set, zero value otherwise.
func (o *SiteInfo) GetPods() []string {
	if o == nil || IsNil(o.Pods) {
		var ret []string
		return ret
	}
	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteInfo) GetPodsOk() ([]string, bool) {
	if o == nil || IsNil(o.Pods) {
		return nil, false
	}
	return o.Pods, true
}

// HasPods returns a boolean if a field has been set.
func (o *SiteInfo) HasPods() bool {
	if o != nil && !IsNil(o.Pods) {
		return true
	}

	return false
}

// SetPods gets a reference to the given []string and assigns it to the Pods field.
func (o *SiteInfo) SetPods(v []string) {
	o.Pods = v
}

func (o SiteInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Pods) {
		toSerialize["pods"] = o.Pods
	}
	return toSerialize, nil
}

type NullableSiteInfo struct {
	value *SiteInfo
	isSet bool
}

func (v NullableSiteInfo) Get() *SiteInfo {
	return v.value
}

func (v *NullableSiteInfo) Set(val *SiteInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteInfo(val *SiteInfo) *NullableSiteInfo {
	return &NullableSiteInfo{value: val, isSet: true}
}

func (v NullableSiteInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


