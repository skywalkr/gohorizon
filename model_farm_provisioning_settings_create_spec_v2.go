/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FarmProvisioningSettingsCreateSpecV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmProvisioningSettingsCreateSpecV2{}

// FarmProvisioningSettingsCreateSpecV2 Virtual center provisioning settings for the farm.
type FarmProvisioningSettingsCreateSpecV2 struct {
	// Current image snapshot for instant clone farm.
	BaseSnapshotId *string `json:"base_snapshot_id,omitempty"`
	// Indicates the number of cores per socket for the CPU in the compute profile to be configured on clones. If set, both compute_profile_num_cpus and compute_profile_ram_mb need to be set. 
	ComputeProfileNumCoresPerSocket *int32 `json:"compute_profile_num_cores_per_socket,omitempty"`
	// Indicates the number of CPUs in the compute profile to be configured on clones. If set, this must be a multiple of compute_profile_num_cores_per_socket.
	ComputeProfileNumCpus *int32 `json:"compute_profile_num_cpus,omitempty"`
	// Indicates the RAM in MB in the compute profile to be configured on clones.
	ComputeProfileRamMb *int32 `json:"compute_profile_ram_mb,omitempty"`
	// Datacenter within which the farm is configured
	DatacenterId string `json:"datacenter_id"`
	// Host or cluster where the machines are deployed in. For Instant clone farms it can be only be a cluster id.
	HostOrClusterId string `json:"host_or_cluster_id"`
	// Image management stream used in the farm. This is required if parent_vm_id and base_snapshot_id are not set.
	ImStreamId *string `json:"im_stream_id,omitempty"`
	// Image management tag used in the farm. This is required if im_stream_id is set.
	ImTagId *string `json:"im_tag_id,omitempty"`
	// Current VM image for instant clone farm.
	ParentVmId *string `json:"parent_vm_id,omitempty"`
	// Resource pool to deploy the RDS Servers.
	ResourcePoolId string `json:"resource_pool_id"`
	// VM folder to deploy the RDS Servers to.
	VmFolderId string `json:"vm_folder_id"`
}

type _FarmProvisioningSettingsCreateSpecV2 FarmProvisioningSettingsCreateSpecV2

// NewFarmProvisioningSettingsCreateSpecV2 instantiates a new FarmProvisioningSettingsCreateSpecV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmProvisioningSettingsCreateSpecV2(datacenterId string, hostOrClusterId string, resourcePoolId string, vmFolderId string) *FarmProvisioningSettingsCreateSpecV2 {
	this := FarmProvisioningSettingsCreateSpecV2{}
	this.DatacenterId = datacenterId
	this.HostOrClusterId = hostOrClusterId
	this.ResourcePoolId = resourcePoolId
	this.VmFolderId = vmFolderId
	return &this
}

// NewFarmProvisioningSettingsCreateSpecV2WithDefaults instantiates a new FarmProvisioningSettingsCreateSpecV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmProvisioningSettingsCreateSpecV2WithDefaults() *FarmProvisioningSettingsCreateSpecV2 {
	this := FarmProvisioningSettingsCreateSpecV2{}
	return &this
}

// GetBaseSnapshotId returns the BaseSnapshotId field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetBaseSnapshotId() string {
	if o == nil || IsNil(o.BaseSnapshotId) {
		var ret string
		return ret
	}
	return *o.BaseSnapshotId
}

// GetBaseSnapshotIdOk returns a tuple with the BaseSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetBaseSnapshotIdOk() (*string, bool) {
	if o == nil || IsNil(o.BaseSnapshotId) {
		return nil, false
	}
	return o.BaseSnapshotId, true
}

// HasBaseSnapshotId returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasBaseSnapshotId() bool {
	if o != nil && !IsNil(o.BaseSnapshotId) {
		return true
	}

	return false
}

// SetBaseSnapshotId gets a reference to the given string and assigns it to the BaseSnapshotId field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetBaseSnapshotId(v string) {
	o.BaseSnapshotId = &v
}

// GetComputeProfileNumCoresPerSocket returns the ComputeProfileNumCoresPerSocket field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetComputeProfileNumCoresPerSocket() int32 {
	if o == nil || IsNil(o.ComputeProfileNumCoresPerSocket) {
		var ret int32
		return ret
	}
	return *o.ComputeProfileNumCoresPerSocket
}

// GetComputeProfileNumCoresPerSocketOk returns a tuple with the ComputeProfileNumCoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetComputeProfileNumCoresPerSocketOk() (*int32, bool) {
	if o == nil || IsNil(o.ComputeProfileNumCoresPerSocket) {
		return nil, false
	}
	return o.ComputeProfileNumCoresPerSocket, true
}

// HasComputeProfileNumCoresPerSocket returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasComputeProfileNumCoresPerSocket() bool {
	if o != nil && !IsNil(o.ComputeProfileNumCoresPerSocket) {
		return true
	}

	return false
}

// SetComputeProfileNumCoresPerSocket gets a reference to the given int32 and assigns it to the ComputeProfileNumCoresPerSocket field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetComputeProfileNumCoresPerSocket(v int32) {
	o.ComputeProfileNumCoresPerSocket = &v
}

// GetComputeProfileNumCpus returns the ComputeProfileNumCpus field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetComputeProfileNumCpus() int32 {
	if o == nil || IsNil(o.ComputeProfileNumCpus) {
		var ret int32
		return ret
	}
	return *o.ComputeProfileNumCpus
}

// GetComputeProfileNumCpusOk returns a tuple with the ComputeProfileNumCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetComputeProfileNumCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.ComputeProfileNumCpus) {
		return nil, false
	}
	return o.ComputeProfileNumCpus, true
}

// HasComputeProfileNumCpus returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasComputeProfileNumCpus() bool {
	if o != nil && !IsNil(o.ComputeProfileNumCpus) {
		return true
	}

	return false
}

// SetComputeProfileNumCpus gets a reference to the given int32 and assigns it to the ComputeProfileNumCpus field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetComputeProfileNumCpus(v int32) {
	o.ComputeProfileNumCpus = &v
}

// GetComputeProfileRamMb returns the ComputeProfileRamMb field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetComputeProfileRamMb() int32 {
	if o == nil || IsNil(o.ComputeProfileRamMb) {
		var ret int32
		return ret
	}
	return *o.ComputeProfileRamMb
}

// GetComputeProfileRamMbOk returns a tuple with the ComputeProfileRamMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetComputeProfileRamMbOk() (*int32, bool) {
	if o == nil || IsNil(o.ComputeProfileRamMb) {
		return nil, false
	}
	return o.ComputeProfileRamMb, true
}

// HasComputeProfileRamMb returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasComputeProfileRamMb() bool {
	if o != nil && !IsNil(o.ComputeProfileRamMb) {
		return true
	}

	return false
}

// SetComputeProfileRamMb gets a reference to the given int32 and assigns it to the ComputeProfileRamMb field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetComputeProfileRamMb(v int32) {
	o.ComputeProfileRamMb = &v
}

// GetDatacenterId returns the DatacenterId field value
func (o *FarmProvisioningSettingsCreateSpecV2) GetDatacenterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetDatacenterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatacenterId, true
}

// SetDatacenterId sets field value
func (o *FarmProvisioningSettingsCreateSpecV2) SetDatacenterId(v string) {
	o.DatacenterId = v
}

// GetHostOrClusterId returns the HostOrClusterId field value
func (o *FarmProvisioningSettingsCreateSpecV2) GetHostOrClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostOrClusterId
}

// GetHostOrClusterIdOk returns a tuple with the HostOrClusterId field value
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetHostOrClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostOrClusterId, true
}

// SetHostOrClusterId sets field value
func (o *FarmProvisioningSettingsCreateSpecV2) SetHostOrClusterId(v string) {
	o.HostOrClusterId = v
}

// GetImStreamId returns the ImStreamId field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetImStreamId() string {
	if o == nil || IsNil(o.ImStreamId) {
		var ret string
		return ret
	}
	return *o.ImStreamId
}

// GetImStreamIdOk returns a tuple with the ImStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetImStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImStreamId) {
		return nil, false
	}
	return o.ImStreamId, true
}

// HasImStreamId returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasImStreamId() bool {
	if o != nil && !IsNil(o.ImStreamId) {
		return true
	}

	return false
}

// SetImStreamId gets a reference to the given string and assigns it to the ImStreamId field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetImStreamId(v string) {
	o.ImStreamId = &v
}

// GetImTagId returns the ImTagId field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetImTagId() string {
	if o == nil || IsNil(o.ImTagId) {
		var ret string
		return ret
	}
	return *o.ImTagId
}

// GetImTagIdOk returns a tuple with the ImTagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetImTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImTagId) {
		return nil, false
	}
	return o.ImTagId, true
}

// HasImTagId returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasImTagId() bool {
	if o != nil && !IsNil(o.ImTagId) {
		return true
	}

	return false
}

// SetImTagId gets a reference to the given string and assigns it to the ImTagId field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetImTagId(v string) {
	o.ImTagId = &v
}

// GetParentVmId returns the ParentVmId field value if set, zero value otherwise.
func (o *FarmProvisioningSettingsCreateSpecV2) GetParentVmId() string {
	if o == nil || IsNil(o.ParentVmId) {
		var ret string
		return ret
	}
	return *o.ParentVmId
}

// GetParentVmIdOk returns a tuple with the ParentVmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetParentVmIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentVmId) {
		return nil, false
	}
	return o.ParentVmId, true
}

// HasParentVmId returns a boolean if a field has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) HasParentVmId() bool {
	if o != nil && !IsNil(o.ParentVmId) {
		return true
	}

	return false
}

// SetParentVmId gets a reference to the given string and assigns it to the ParentVmId field.
func (o *FarmProvisioningSettingsCreateSpecV2) SetParentVmId(v string) {
	o.ParentVmId = &v
}

// GetResourcePoolId returns the ResourcePoolId field value
func (o *FarmProvisioningSettingsCreateSpecV2) GetResourcePoolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetResourcePoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourcePoolId, true
}

// SetResourcePoolId sets field value
func (o *FarmProvisioningSettingsCreateSpecV2) SetResourcePoolId(v string) {
	o.ResourcePoolId = v
}

// GetVmFolderId returns the VmFolderId field value
func (o *FarmProvisioningSettingsCreateSpecV2) GetVmFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmFolderId
}

// GetVmFolderIdOk returns a tuple with the VmFolderId field value
// and a boolean to check if the value has been set.
func (o *FarmProvisioningSettingsCreateSpecV2) GetVmFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmFolderId, true
}

// SetVmFolderId sets field value
func (o *FarmProvisioningSettingsCreateSpecV2) SetVmFolderId(v string) {
	o.VmFolderId = v
}

func (o FarmProvisioningSettingsCreateSpecV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmProvisioningSettingsCreateSpecV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseSnapshotId) {
		toSerialize["base_snapshot_id"] = o.BaseSnapshotId
	}
	if !IsNil(o.ComputeProfileNumCoresPerSocket) {
		toSerialize["compute_profile_num_cores_per_socket"] = o.ComputeProfileNumCoresPerSocket
	}
	if !IsNil(o.ComputeProfileNumCpus) {
		toSerialize["compute_profile_num_cpus"] = o.ComputeProfileNumCpus
	}
	if !IsNil(o.ComputeProfileRamMb) {
		toSerialize["compute_profile_ram_mb"] = o.ComputeProfileRamMb
	}
	toSerialize["datacenter_id"] = o.DatacenterId
	toSerialize["host_or_cluster_id"] = o.HostOrClusterId
	if !IsNil(o.ImStreamId) {
		toSerialize["im_stream_id"] = o.ImStreamId
	}
	if !IsNil(o.ImTagId) {
		toSerialize["im_tag_id"] = o.ImTagId
	}
	if !IsNil(o.ParentVmId) {
		toSerialize["parent_vm_id"] = o.ParentVmId
	}
	toSerialize["resource_pool_id"] = o.ResourcePoolId
	toSerialize["vm_folder_id"] = o.VmFolderId
	return toSerialize, nil
}

func (o *FarmProvisioningSettingsCreateSpecV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"datacenter_id",
		"host_or_cluster_id",
		"resource_pool_id",
		"vm_folder_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFarmProvisioningSettingsCreateSpecV2 := _FarmProvisioningSettingsCreateSpecV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFarmProvisioningSettingsCreateSpecV2)

	if err != nil {
		return err
	}

	*o = FarmProvisioningSettingsCreateSpecV2(varFarmProvisioningSettingsCreateSpecV2)

	return err
}

type NullableFarmProvisioningSettingsCreateSpecV2 struct {
	value *FarmProvisioningSettingsCreateSpecV2
	isSet bool
}

func (v NullableFarmProvisioningSettingsCreateSpecV2) Get() *FarmProvisioningSettingsCreateSpecV2 {
	return v.value
}

func (v *NullableFarmProvisioningSettingsCreateSpecV2) Set(val *FarmProvisioningSettingsCreateSpecV2) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmProvisioningSettingsCreateSpecV2) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmProvisioningSettingsCreateSpecV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmProvisioningSettingsCreateSpecV2(val *FarmProvisioningSettingsCreateSpecV2) *NullableFarmProvisioningSettingsCreateSpecV2 {
	return &NullableFarmProvisioningSettingsCreateSpecV2{value: val, isSet: true}
}

func (v NullableFarmProvisioningSettingsCreateSpecV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmProvisioningSettingsCreateSpecV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


