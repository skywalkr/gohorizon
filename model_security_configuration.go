/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the SecurityConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityConfiguration{}

// SecurityConfiguration Client and server properties of Security configuration.
type SecurityConfiguration struct {
	ClientProperties *ClientProperties `json:"client_properties,omitempty"`
	ServerProperties *ServerProperties `json:"server_properties,omitempty"`
}

// NewSecurityConfiguration instantiates a new SecurityConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityConfiguration() *SecurityConfiguration {
	this := SecurityConfiguration{}
	return &this
}

// NewSecurityConfigurationWithDefaults instantiates a new SecurityConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityConfigurationWithDefaults() *SecurityConfiguration {
	this := SecurityConfiguration{}
	return &this
}

// GetClientProperties returns the ClientProperties field value if set, zero value otherwise.
func (o *SecurityConfiguration) GetClientProperties() ClientProperties {
	if o == nil || IsNil(o.ClientProperties) {
		var ret ClientProperties
		return ret
	}
	return *o.ClientProperties
}

// GetClientPropertiesOk returns a tuple with the ClientProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityConfiguration) GetClientPropertiesOk() (*ClientProperties, bool) {
	if o == nil || IsNil(o.ClientProperties) {
		return nil, false
	}
	return o.ClientProperties, true
}

// HasClientProperties returns a boolean if a field has been set.
func (o *SecurityConfiguration) HasClientProperties() bool {
	if o != nil && !IsNil(o.ClientProperties) {
		return true
	}

	return false
}

// SetClientProperties gets a reference to the given ClientProperties and assigns it to the ClientProperties field.
func (o *SecurityConfiguration) SetClientProperties(v ClientProperties) {
	o.ClientProperties = &v
}

// GetServerProperties returns the ServerProperties field value if set, zero value otherwise.
func (o *SecurityConfiguration) GetServerProperties() ServerProperties {
	if o == nil || IsNil(o.ServerProperties) {
		var ret ServerProperties
		return ret
	}
	return *o.ServerProperties
}

// GetServerPropertiesOk returns a tuple with the ServerProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityConfiguration) GetServerPropertiesOk() (*ServerProperties, bool) {
	if o == nil || IsNil(o.ServerProperties) {
		return nil, false
	}
	return o.ServerProperties, true
}

// HasServerProperties returns a boolean if a field has been set.
func (o *SecurityConfiguration) HasServerProperties() bool {
	if o != nil && !IsNil(o.ServerProperties) {
		return true
	}

	return false
}

// SetServerProperties gets a reference to the given ServerProperties and assigns it to the ServerProperties field.
func (o *SecurityConfiguration) SetServerProperties(v ServerProperties) {
	o.ServerProperties = &v
}

func (o SecurityConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientProperties) {
		toSerialize["client_properties"] = o.ClientProperties
	}
	if !IsNil(o.ServerProperties) {
		toSerialize["server_properties"] = o.ServerProperties
	}
	return toSerialize, nil
}

type NullableSecurityConfiguration struct {
	value *SecurityConfiguration
	isSet bool
}

func (v NullableSecurityConfiguration) Get() *SecurityConfiguration {
	return v.value
}

func (v *NullableSecurityConfiguration) Set(val *SecurityConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityConfiguration(val *SecurityConfiguration) *NullableSecurityConfiguration {
	return &NullableSecurityConfiguration{value: val, isSet: true}
}

func (v NullableSecurityConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


