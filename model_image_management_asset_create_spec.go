/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ImageManagementAssetCreateSpec Information related to image management asset.
type ImageManagementAssetCreateSpec struct {
	// Additional details about image management asset.
	AdditionalDetails *map[string]string `json:"additional_details,omitempty"`
	// Virtual machine snapshot. Must be set if vm_template_id is unset.
	BaseSnapshotId *string `json:"base_snapshot_id,omitempty"`
	// Virtual machine ID. Must be set if vm_template_id is unset.
	BaseVmId *string `json:"base_vm_id,omitempty"`
	// Image management asset clone type. * FULL_CLONE: Image management asset to be used in full clone automated desktop pool. * INSTANT_CLONE: Image management asset to be used in instant clone desktop pool/farm.
	CloneType string `json:"clone_type"`
	// Image management stream to which this asset belongs to.
	ImStreamId string `json:"im_stream_id"`
	// Image management version to which this asset belongs to.
	ImVersionId string `json:"im_version_id"`
	// Image management asset image type. * RDSH_APPS: Image management asset to be used for farm creation which is be used in application. * RDSH_DESKTOP: Image management asset is for farm creation to be created. * VDI_DESKTOP: Image management asset is available for desktops/farms to be created.
	ImageType string `json:"image_type"`
	// Image management asset status. * AVAILABLE: Image management asset is available for desktop pools/farms to be created. * DEPLOYING_VM: Image management asset is deploying VM on the virtual center. * DEPLOYMENT_DONE: Image management asset VM deployed on the virtual center. * DELETED: Image management asset has been deleted. * DISABLED: Image management asset has been disabled and no further pool/farm operation can be done using the same. * FAILED: Image management asset creation has failed. * REPLICATING: Copying the specialized images across all virtual centers. * RETRY_PENDING: When image management asset creation has failed, retry action is pending for asset to be created. * SPECIALIZING_VM: Image management asset is being published and specialized internally like installing agents etc.
	Status string `json:"status"`
	// Virtual Center where this asset is created.
	VcenterId string `json:"vcenter_id"`
	// Virtual machine template ID.
	VmTemplateId *string `json:"vm_template_id,omitempty"`
}

// NewImageManagementAssetCreateSpec instantiates a new ImageManagementAssetCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageManagementAssetCreateSpec(cloneType string, imStreamId string, imVersionId string, imageType string, status string, vcenterId string) *ImageManagementAssetCreateSpec {
	this := ImageManagementAssetCreateSpec{}
	this.CloneType = cloneType
	this.ImStreamId = imStreamId
	this.ImVersionId = imVersionId
	this.ImageType = imageType
	this.Status = status
	this.VcenterId = vcenterId
	return &this
}

// NewImageManagementAssetCreateSpecWithDefaults instantiates a new ImageManagementAssetCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageManagementAssetCreateSpecWithDefaults() *ImageManagementAssetCreateSpec {
	this := ImageManagementAssetCreateSpec{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *ImageManagementAssetCreateSpec) GetAdditionalDetails() map[string]string {
	if o == nil || o.AdditionalDetails == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetAdditionalDetailsOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalDetails == nil {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *ImageManagementAssetCreateSpec) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails != nil {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given map[string]string and assigns it to the AdditionalDetails field.
func (o *ImageManagementAssetCreateSpec) SetAdditionalDetails(v map[string]string) {
	o.AdditionalDetails = &v
}

// GetBaseSnapshotId returns the BaseSnapshotId field value if set, zero value otherwise.
func (o *ImageManagementAssetCreateSpec) GetBaseSnapshotId() string {
	if o == nil || o.BaseSnapshotId == nil {
		var ret string
		return ret
	}
	return *o.BaseSnapshotId
}

// GetBaseSnapshotIdOk returns a tuple with the BaseSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetBaseSnapshotIdOk() (*string, bool) {
	if o == nil || o.BaseSnapshotId == nil {
		return nil, false
	}
	return o.BaseSnapshotId, true
}

// HasBaseSnapshotId returns a boolean if a field has been set.
func (o *ImageManagementAssetCreateSpec) HasBaseSnapshotId() bool {
	if o != nil && o.BaseSnapshotId != nil {
		return true
	}

	return false
}

// SetBaseSnapshotId gets a reference to the given string and assigns it to the BaseSnapshotId field.
func (o *ImageManagementAssetCreateSpec) SetBaseSnapshotId(v string) {
	o.BaseSnapshotId = &v
}

// GetBaseVmId returns the BaseVmId field value if set, zero value otherwise.
func (o *ImageManagementAssetCreateSpec) GetBaseVmId() string {
	if o == nil || o.BaseVmId == nil {
		var ret string
		return ret
	}
	return *o.BaseVmId
}

// GetBaseVmIdOk returns a tuple with the BaseVmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetBaseVmIdOk() (*string, bool) {
	if o == nil || o.BaseVmId == nil {
		return nil, false
	}
	return o.BaseVmId, true
}

// HasBaseVmId returns a boolean if a field has been set.
func (o *ImageManagementAssetCreateSpec) HasBaseVmId() bool {
	if o != nil && o.BaseVmId != nil {
		return true
	}

	return false
}

// SetBaseVmId gets a reference to the given string and assigns it to the BaseVmId field.
func (o *ImageManagementAssetCreateSpec) SetBaseVmId(v string) {
	o.BaseVmId = &v
}

// GetCloneType returns the CloneType field value
func (o *ImageManagementAssetCreateSpec) GetCloneType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloneType
}

// GetCloneTypeOk returns a tuple with the CloneType field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetCloneTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloneType, true
}

// SetCloneType sets field value
func (o *ImageManagementAssetCreateSpec) SetCloneType(v string) {
	o.CloneType = v
}

// GetImStreamId returns the ImStreamId field value
func (o *ImageManagementAssetCreateSpec) GetImStreamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImStreamId
}

// GetImStreamIdOk returns a tuple with the ImStreamId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetImStreamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImStreamId, true
}

// SetImStreamId sets field value
func (o *ImageManagementAssetCreateSpec) SetImStreamId(v string) {
	o.ImStreamId = v
}

// GetImVersionId returns the ImVersionId field value
func (o *ImageManagementAssetCreateSpec) GetImVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImVersionId
}

// GetImVersionIdOk returns a tuple with the ImVersionId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetImVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImVersionId, true
}

// SetImVersionId sets field value
func (o *ImageManagementAssetCreateSpec) SetImVersionId(v string) {
	o.ImVersionId = v
}

// GetImageType returns the ImageType field value
func (o *ImageManagementAssetCreateSpec) GetImageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageType
}

// GetImageTypeOk returns a tuple with the ImageType field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageType, true
}

// SetImageType sets field value
func (o *ImageManagementAssetCreateSpec) SetImageType(v string) {
	o.ImageType = v
}

// GetStatus returns the Status field value
func (o *ImageManagementAssetCreateSpec) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ImageManagementAssetCreateSpec) SetStatus(v string) {
	o.Status = v
}

// GetVcenterId returns the VcenterId field value
func (o *ImageManagementAssetCreateSpec) GetVcenterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VcenterId
}

// GetVcenterIdOk returns a tuple with the VcenterId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetVcenterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VcenterId, true
}

// SetVcenterId sets field value
func (o *ImageManagementAssetCreateSpec) SetVcenterId(v string) {
	o.VcenterId = v
}

// GetVmTemplateId returns the VmTemplateId field value if set, zero value otherwise.
func (o *ImageManagementAssetCreateSpec) GetVmTemplateId() string {
	if o == nil || o.VmTemplateId == nil {
		var ret string
		return ret
	}
	return *o.VmTemplateId
}

// GetVmTemplateIdOk returns a tuple with the VmTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetCreateSpec) GetVmTemplateIdOk() (*string, bool) {
	if o == nil || o.VmTemplateId == nil {
		return nil, false
	}
	return o.VmTemplateId, true
}

// HasVmTemplateId returns a boolean if a field has been set.
func (o *ImageManagementAssetCreateSpec) HasVmTemplateId() bool {
	if o != nil && o.VmTemplateId != nil {
		return true
	}

	return false
}

// SetVmTemplateId gets a reference to the given string and assigns it to the VmTemplateId field.
func (o *ImageManagementAssetCreateSpec) SetVmTemplateId(v string) {
	o.VmTemplateId = &v
}

func (o ImageManagementAssetCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalDetails != nil {
		toSerialize["additional_details"] = o.AdditionalDetails
	}
	if o.BaseSnapshotId != nil {
		toSerialize["base_snapshot_id"] = o.BaseSnapshotId
	}
	if o.BaseVmId != nil {
		toSerialize["base_vm_id"] = o.BaseVmId
	}
	if true {
		toSerialize["clone_type"] = o.CloneType
	}
	if true {
		toSerialize["im_stream_id"] = o.ImStreamId
	}
	if true {
		toSerialize["im_version_id"] = o.ImVersionId
	}
	if true {
		toSerialize["image_type"] = o.ImageType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["vcenter_id"] = o.VcenterId
	}
	if o.VmTemplateId != nil {
		toSerialize["vm_template_id"] = o.VmTemplateId
	}
	return json.Marshal(toSerialize)
}

type NullableImageManagementAssetCreateSpec struct {
	value *ImageManagementAssetCreateSpec
	isSet bool
}

func (v NullableImageManagementAssetCreateSpec) Get() *ImageManagementAssetCreateSpec {
	return v.value
}

func (v *NullableImageManagementAssetCreateSpec) Set(val *ImageManagementAssetCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableImageManagementAssetCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableImageManagementAssetCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageManagementAssetCreateSpec(val *ImageManagementAssetCreateSpec) *NullableImageManagementAssetCreateSpec {
	return &NullableImageManagementAssetCreateSpec{value: val, isSet: true}
}

func (v NullableImageManagementAssetCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageManagementAssetCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
