/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the AgentInstallerPackageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentInstallerPackageInfo{}

// AgentInstallerPackageInfo Information about a registered agent installer package.
type AgentInstallerPackageInfo struct {
	// Build number of the installer.
	BuildNumber *string `json:"build_number,omitempty"`
	// Unique identifier for this agent installer package.
	Id *string `json:"id,omitempty"`
	// URL of the installer executable.
	Url *string `json:"url,omitempty"`
	// Version of the installer MSI.
	Version *string `json:"version,omitempty"`
}

// NewAgentInstallerPackageInfo instantiates a new AgentInstallerPackageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentInstallerPackageInfo() *AgentInstallerPackageInfo {
	this := AgentInstallerPackageInfo{}
	return &this
}

// NewAgentInstallerPackageInfoWithDefaults instantiates a new AgentInstallerPackageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentInstallerPackageInfoWithDefaults() *AgentInstallerPackageInfo {
	this := AgentInstallerPackageInfo{}
	return &this
}

// GetBuildNumber returns the BuildNumber field value if set, zero value otherwise.
func (o *AgentInstallerPackageInfo) GetBuildNumber() string {
	if o == nil || IsNil(o.BuildNumber) {
		var ret string
		return ret
	}
	return *o.BuildNumber
}

// GetBuildNumberOk returns a tuple with the BuildNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInstallerPackageInfo) GetBuildNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BuildNumber) {
		return nil, false
	}
	return o.BuildNumber, true
}

// HasBuildNumber returns a boolean if a field has been set.
func (o *AgentInstallerPackageInfo) HasBuildNumber() bool {
	if o != nil && !IsNil(o.BuildNumber) {
		return true
	}

	return false
}

// SetBuildNumber gets a reference to the given string and assigns it to the BuildNumber field.
func (o *AgentInstallerPackageInfo) SetBuildNumber(v string) {
	o.BuildNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AgentInstallerPackageInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInstallerPackageInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AgentInstallerPackageInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AgentInstallerPackageInfo) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AgentInstallerPackageInfo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInstallerPackageInfo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AgentInstallerPackageInfo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AgentInstallerPackageInfo) SetUrl(v string) {
	o.Url = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AgentInstallerPackageInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInstallerPackageInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AgentInstallerPackageInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AgentInstallerPackageInfo) SetVersion(v string) {
	o.Version = &v
}

func (o AgentInstallerPackageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentInstallerPackageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildNumber) {
		toSerialize["build_number"] = o.BuildNumber
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAgentInstallerPackageInfo struct {
	value *AgentInstallerPackageInfo
	isSet bool
}

func (v NullableAgentInstallerPackageInfo) Get() *AgentInstallerPackageInfo {
	return v.value
}

func (v *NullableAgentInstallerPackageInfo) Set(val *AgentInstallerPackageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentInstallerPackageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentInstallerPackageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentInstallerPackageInfo(val *AgentInstallerPackageInfo) *NullableAgentInstallerPackageInfo {
	return &NullableAgentInstallerPackageInfo{value: val, isSet: true}
}

func (v NullableAgentInstallerPackageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentInstallerPackageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


