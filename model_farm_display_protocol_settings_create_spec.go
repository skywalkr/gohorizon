/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// FarmDisplayProtocolSettingsCreateSpec Display protocol settings for the farm.
type FarmDisplayProtocolSettingsCreateSpec struct {
	// Indicates whether the users can choose the protocol. Default value is true.
	AllowUsersToChooseProtocol *bool `json:"allow_users_to_choose_protocol,omitempty"`
	// Indicates default server display protocol, when user is not allowed to choose protocol.Farms support PCOIP, RDP and BLAST. Default value is PCOIP. * RDP: Microsoft Remote Desktop Protocol. * PCOIP: PCoIP protocol. * BLAST: BLAST protocol.
	DefaultDisplayProtocol *string `json:"default_display_protocol,omitempty"`
	// Indicates whether RDSH instant clone farm must not support NVIDIA GRID vGPUs. If this is true, the host or cluster associated with the farm must support NVIDIA GRID and vGPU types required by the RDSH desktop pool virtualMachines, VmTemplate, or BaseImageSnapshot. If this is false, RDSH instant clone farm must not support NVIDIA GRID vGPUs. This property is only applicable to instant clone farm. Default value is false.
	GridVgpusEnabled *bool `json:"grid_vgpus_enabled,omitempty"`
	// Indicates whether session collaboration feature is enabled. Session collaboration allows a user to share their remote session with other users. Default value is false.
	SessionCollaborationEnabled *bool `json:"session_collaboration_enabled,omitempty"`
}

// NewFarmDisplayProtocolSettingsCreateSpec instantiates a new FarmDisplayProtocolSettingsCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmDisplayProtocolSettingsCreateSpec() *FarmDisplayProtocolSettingsCreateSpec {
	this := FarmDisplayProtocolSettingsCreateSpec{}
	return &this
}

// NewFarmDisplayProtocolSettingsCreateSpecWithDefaults instantiates a new FarmDisplayProtocolSettingsCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmDisplayProtocolSettingsCreateSpecWithDefaults() *FarmDisplayProtocolSettingsCreateSpec {
	this := FarmDisplayProtocolSettingsCreateSpec{}
	return &this
}

// GetAllowUsersToChooseProtocol returns the AllowUsersToChooseProtocol field value if set, zero value otherwise.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetAllowUsersToChooseProtocol() bool {
	if o == nil || o.AllowUsersToChooseProtocol == nil {
		var ret bool
		return ret
	}
	return *o.AllowUsersToChooseProtocol
}

// GetAllowUsersToChooseProtocolOk returns a tuple with the AllowUsersToChooseProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetAllowUsersToChooseProtocolOk() (*bool, bool) {
	if o == nil || o.AllowUsersToChooseProtocol == nil {
		return nil, false
	}
	return o.AllowUsersToChooseProtocol, true
}

// HasAllowUsersToChooseProtocol returns a boolean if a field has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) HasAllowUsersToChooseProtocol() bool {
	if o != nil && o.AllowUsersToChooseProtocol != nil {
		return true
	}

	return false
}

// SetAllowUsersToChooseProtocol gets a reference to the given bool and assigns it to the AllowUsersToChooseProtocol field.
func (o *FarmDisplayProtocolSettingsCreateSpec) SetAllowUsersToChooseProtocol(v bool) {
	o.AllowUsersToChooseProtocol = &v
}

// GetDefaultDisplayProtocol returns the DefaultDisplayProtocol field value if set, zero value otherwise.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetDefaultDisplayProtocol() string {
	if o == nil || o.DefaultDisplayProtocol == nil {
		var ret string
		return ret
	}
	return *o.DefaultDisplayProtocol
}

// GetDefaultDisplayProtocolOk returns a tuple with the DefaultDisplayProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetDefaultDisplayProtocolOk() (*string, bool) {
	if o == nil || o.DefaultDisplayProtocol == nil {
		return nil, false
	}
	return o.DefaultDisplayProtocol, true
}

// HasDefaultDisplayProtocol returns a boolean if a field has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) HasDefaultDisplayProtocol() bool {
	if o != nil && o.DefaultDisplayProtocol != nil {
		return true
	}

	return false
}

// SetDefaultDisplayProtocol gets a reference to the given string and assigns it to the DefaultDisplayProtocol field.
func (o *FarmDisplayProtocolSettingsCreateSpec) SetDefaultDisplayProtocol(v string) {
	o.DefaultDisplayProtocol = &v
}

// GetGridVgpusEnabled returns the GridVgpusEnabled field value if set, zero value otherwise.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetGridVgpusEnabled() bool {
	if o == nil || o.GridVgpusEnabled == nil {
		var ret bool
		return ret
	}
	return *o.GridVgpusEnabled
}

// GetGridVgpusEnabledOk returns a tuple with the GridVgpusEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetGridVgpusEnabledOk() (*bool, bool) {
	if o == nil || o.GridVgpusEnabled == nil {
		return nil, false
	}
	return o.GridVgpusEnabled, true
}

// HasGridVgpusEnabled returns a boolean if a field has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) HasGridVgpusEnabled() bool {
	if o != nil && o.GridVgpusEnabled != nil {
		return true
	}

	return false
}

// SetGridVgpusEnabled gets a reference to the given bool and assigns it to the GridVgpusEnabled field.
func (o *FarmDisplayProtocolSettingsCreateSpec) SetGridVgpusEnabled(v bool) {
	o.GridVgpusEnabled = &v
}

// GetSessionCollaborationEnabled returns the SessionCollaborationEnabled field value if set, zero value otherwise.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetSessionCollaborationEnabled() bool {
	if o == nil || o.SessionCollaborationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SessionCollaborationEnabled
}

// GetSessionCollaborationEnabledOk returns a tuple with the SessionCollaborationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) GetSessionCollaborationEnabledOk() (*bool, bool) {
	if o == nil || o.SessionCollaborationEnabled == nil {
		return nil, false
	}
	return o.SessionCollaborationEnabled, true
}

// HasSessionCollaborationEnabled returns a boolean if a field has been set.
func (o *FarmDisplayProtocolSettingsCreateSpec) HasSessionCollaborationEnabled() bool {
	if o != nil && o.SessionCollaborationEnabled != nil {
		return true
	}

	return false
}

// SetSessionCollaborationEnabled gets a reference to the given bool and assigns it to the SessionCollaborationEnabled field.
func (o *FarmDisplayProtocolSettingsCreateSpec) SetSessionCollaborationEnabled(v bool) {
	o.SessionCollaborationEnabled = &v
}

func (o FarmDisplayProtocolSettingsCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowUsersToChooseProtocol != nil {
		toSerialize["allow_users_to_choose_protocol"] = o.AllowUsersToChooseProtocol
	}
	if o.DefaultDisplayProtocol != nil {
		toSerialize["default_display_protocol"] = o.DefaultDisplayProtocol
	}
	if o.GridVgpusEnabled != nil {
		toSerialize["grid_vgpus_enabled"] = o.GridVgpusEnabled
	}
	if o.SessionCollaborationEnabled != nil {
		toSerialize["session_collaboration_enabled"] = o.SessionCollaborationEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableFarmDisplayProtocolSettingsCreateSpec struct {
	value *FarmDisplayProtocolSettingsCreateSpec
	isSet bool
}

func (v NullableFarmDisplayProtocolSettingsCreateSpec) Get() *FarmDisplayProtocolSettingsCreateSpec {
	return v.value
}

func (v *NullableFarmDisplayProtocolSettingsCreateSpec) Set(val *FarmDisplayProtocolSettingsCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmDisplayProtocolSettingsCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmDisplayProtocolSettingsCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmDisplayProtocolSettingsCreateSpec(val *FarmDisplayProtocolSettingsCreateSpec) *NullableFarmDisplayProtocolSettingsCreateSpec {
	return &NullableFarmDisplayProtocolSettingsCreateSpec{value: val, isSet: true}
}

func (v NullableFarmDisplayProtocolSettingsCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmDisplayProtocolSettingsCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
