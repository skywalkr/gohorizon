/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ConnectionServerUpdateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServerUpdateSpec{}

// ConnectionServerUpdateSpec Information required to update a Connection Server.
type ConnectionServerUpdateSpec struct {
	JwtInfo *ConnectionServerJWTSpec `json:"jwt_info,omitempty"`
}

// NewConnectionServerUpdateSpec instantiates a new ConnectionServerUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerUpdateSpec() *ConnectionServerUpdateSpec {
	this := ConnectionServerUpdateSpec{}
	return &this
}

// NewConnectionServerUpdateSpecWithDefaults instantiates a new ConnectionServerUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerUpdateSpecWithDefaults() *ConnectionServerUpdateSpec {
	this := ConnectionServerUpdateSpec{}
	return &this
}

// GetJwtInfo returns the JwtInfo field value if set, zero value otherwise.
func (o *ConnectionServerUpdateSpec) GetJwtInfo() ConnectionServerJWTSpec {
	if o == nil || IsNil(o.JwtInfo) {
		var ret ConnectionServerJWTSpec
		return ret
	}
	return *o.JwtInfo
}

// GetJwtInfoOk returns a tuple with the JwtInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerUpdateSpec) GetJwtInfoOk() (*ConnectionServerJWTSpec, bool) {
	if o == nil || IsNil(o.JwtInfo) {
		return nil, false
	}
	return o.JwtInfo, true
}

// HasJwtInfo returns a boolean if a field has been set.
func (o *ConnectionServerUpdateSpec) HasJwtInfo() bool {
	if o != nil && !IsNil(o.JwtInfo) {
		return true
	}

	return false
}

// SetJwtInfo gets a reference to the given ConnectionServerJWTSpec and assigns it to the JwtInfo field.
func (o *ConnectionServerUpdateSpec) SetJwtInfo(v ConnectionServerJWTSpec) {
	o.JwtInfo = &v
}

func (o ConnectionServerUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServerUpdateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JwtInfo) {
		toSerialize["jwt_info"] = o.JwtInfo
	}
	return toSerialize, nil
}

type NullableConnectionServerUpdateSpec struct {
	value *ConnectionServerUpdateSpec
	isSet bool
}

func (v NullableConnectionServerUpdateSpec) Get() *ConnectionServerUpdateSpec {
	return v.value
}

func (v *NullableConnectionServerUpdateSpec) Set(val *ConnectionServerUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerUpdateSpec(val *ConnectionServerUpdateSpec) *NullableConnectionServerUpdateSpec {
	return &NullableConnectionServerUpdateSpec{value: val, isSet: true}
}

func (v NullableConnectionServerUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


