/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// AuditEventSummary Information related to Audit Events.
type AuditEventSummary struct {
	// Application Pool associated with this event. Will be unset if there is no application association for this event. Supported Filters : 'Equals'.
	ApplicationPoolName *string `json:"application_pool_name,omitempty"`
	// Desktop Pool associated with this event. Will be unset if there is no desktop association for this event. Supported Filters : 'Equals'.
	DesktopPoolName *string `json:"desktop_pool_name,omitempty"`
	// Unique id representing an event. Supported Filters : 'Equals'.
	Id *int64 `json:"id,omitempty"`
	// FQDN of the machine in the Pod that has logged this event. Supported Filters : 'Equals'.
	MachineDnsName *string `json:"machine_dns_name,omitempty"`
	// Machine associated with this event. Will be unset if there is no machine association for this event. Supported Filters : 'Equals'.
	MachineId *string `json:"machine_id,omitempty"`
	// Audit event message.
	Message *string `json:"message,omitempty"`
	// Horizon component that has logged this event. Supported Filters : 'Equals'.
	Module *string `json:"module,omitempty"`
	// Severity type of the event. Supported Filters : 'Equals'. * INFO: Audit event is of INFO severity. * WARNING: Audit event is of WARNING severity * ERROR: Audit event is of ERROR severity * AUDIT_SUCCESS: Audit event is of AUDIT_SUCCESS severity * AUDIT_FAIL: Audit event is of AUDIT_FAIL severity * UNKNOWN: Not able to identify severity
	Severity *string `json:"severity,omitempty"`
	// Time at which the event occurred. Supported Filters : 'Between'.
	Time *int64 `json:"time,omitempty"`
	// Event name that corresponds to an item in the message catalog. Supported Filters : 'Equals'.
	Type *string `json:"type,omitempty"`
	// Sid of the user associated with this event. Supported Filters : 'Equals'.
	UserId *string `json:"user_id,omitempty"`
}

// NewAuditEventSummary instantiates a new AuditEventSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditEventSummary() *AuditEventSummary {
	this := AuditEventSummary{}
	return &this
}

// NewAuditEventSummaryWithDefaults instantiates a new AuditEventSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditEventSummaryWithDefaults() *AuditEventSummary {
	this := AuditEventSummary{}
	return &this
}

// GetApplicationPoolName returns the ApplicationPoolName field value if set, zero value otherwise.
func (o *AuditEventSummary) GetApplicationPoolName() string {
	if o == nil || o.ApplicationPoolName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationPoolName
}

// GetApplicationPoolNameOk returns a tuple with the ApplicationPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetApplicationPoolNameOk() (*string, bool) {
	if o == nil || o.ApplicationPoolName == nil {
		return nil, false
	}
	return o.ApplicationPoolName, true
}

// HasApplicationPoolName returns a boolean if a field has been set.
func (o *AuditEventSummary) HasApplicationPoolName() bool {
	if o != nil && o.ApplicationPoolName != nil {
		return true
	}

	return false
}

// SetApplicationPoolName gets a reference to the given string and assigns it to the ApplicationPoolName field.
func (o *AuditEventSummary) SetApplicationPoolName(v string) {
	o.ApplicationPoolName = &v
}

// GetDesktopPoolName returns the DesktopPoolName field value if set, zero value otherwise.
func (o *AuditEventSummary) GetDesktopPoolName() string {
	if o == nil || o.DesktopPoolName == nil {
		var ret string
		return ret
	}
	return *o.DesktopPoolName
}

// GetDesktopPoolNameOk returns a tuple with the DesktopPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetDesktopPoolNameOk() (*string, bool) {
	if o == nil || o.DesktopPoolName == nil {
		return nil, false
	}
	return o.DesktopPoolName, true
}

// HasDesktopPoolName returns a boolean if a field has been set.
func (o *AuditEventSummary) HasDesktopPoolName() bool {
	if o != nil && o.DesktopPoolName != nil {
		return true
	}

	return false
}

// SetDesktopPoolName gets a reference to the given string and assigns it to the DesktopPoolName field.
func (o *AuditEventSummary) SetDesktopPoolName(v string) {
	o.DesktopPoolName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuditEventSummary) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuditEventSummary) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AuditEventSummary) SetId(v int64) {
	o.Id = &v
}

// GetMachineDnsName returns the MachineDnsName field value if set, zero value otherwise.
func (o *AuditEventSummary) GetMachineDnsName() string {
	if o == nil || o.MachineDnsName == nil {
		var ret string
		return ret
	}
	return *o.MachineDnsName
}

// GetMachineDnsNameOk returns a tuple with the MachineDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetMachineDnsNameOk() (*string, bool) {
	if o == nil || o.MachineDnsName == nil {
		return nil, false
	}
	return o.MachineDnsName, true
}

// HasMachineDnsName returns a boolean if a field has been set.
func (o *AuditEventSummary) HasMachineDnsName() bool {
	if o != nil && o.MachineDnsName != nil {
		return true
	}

	return false
}

// SetMachineDnsName gets a reference to the given string and assigns it to the MachineDnsName field.
func (o *AuditEventSummary) SetMachineDnsName(v string) {
	o.MachineDnsName = &v
}

// GetMachineId returns the MachineId field value if set, zero value otherwise.
func (o *AuditEventSummary) GetMachineId() string {
	if o == nil || o.MachineId == nil {
		var ret string
		return ret
	}
	return *o.MachineId
}

// GetMachineIdOk returns a tuple with the MachineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetMachineIdOk() (*string, bool) {
	if o == nil || o.MachineId == nil {
		return nil, false
	}
	return o.MachineId, true
}

// HasMachineId returns a boolean if a field has been set.
func (o *AuditEventSummary) HasMachineId() bool {
	if o != nil && o.MachineId != nil {
		return true
	}

	return false
}

// SetMachineId gets a reference to the given string and assigns it to the MachineId field.
func (o *AuditEventSummary) SetMachineId(v string) {
	o.MachineId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AuditEventSummary) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AuditEventSummary) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AuditEventSummary) SetMessage(v string) {
	o.Message = &v
}

// GetModule returns the Module field value if set, zero value otherwise.
func (o *AuditEventSummary) GetModule() string {
	if o == nil || o.Module == nil {
		var ret string
		return ret
	}
	return *o.Module
}

// GetModuleOk returns a tuple with the Module field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetModuleOk() (*string, bool) {
	if o == nil || o.Module == nil {
		return nil, false
	}
	return o.Module, true
}

// HasModule returns a boolean if a field has been set.
func (o *AuditEventSummary) HasModule() bool {
	if o != nil && o.Module != nil {
		return true
	}

	return false
}

// SetModule gets a reference to the given string and assigns it to the Module field.
func (o *AuditEventSummary) SetModule(v string) {
	o.Module = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AuditEventSummary) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AuditEventSummary) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AuditEventSummary) SetSeverity(v string) {
	o.Severity = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *AuditEventSummary) GetTime() int64 {
	if o == nil || o.Time == nil {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetTimeOk() (*int64, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *AuditEventSummary) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *AuditEventSummary) SetTime(v int64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuditEventSummary) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuditEventSummary) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AuditEventSummary) SetType(v string) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AuditEventSummary) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSummary) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AuditEventSummary) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AuditEventSummary) SetUserId(v string) {
	o.UserId = &v
}

func (o AuditEventSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationPoolName != nil {
		toSerialize["application_pool_name"] = o.ApplicationPoolName
	}
	if o.DesktopPoolName != nil {
		toSerialize["desktop_pool_name"] = o.DesktopPoolName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MachineDnsName != nil {
		toSerialize["machine_dns_name"] = o.MachineDnsName
	}
	if o.MachineId != nil {
		toSerialize["machine_id"] = o.MachineId
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Module != nil {
		toSerialize["module"] = o.Module
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableAuditEventSummary struct {
	value *AuditEventSummary
	isSet bool
}

func (v NullableAuditEventSummary) Get() *AuditEventSummary {
	return v.value
}

func (v *NullableAuditEventSummary) Set(val *AuditEventSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditEventSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditEventSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditEventSummary(val *AuditEventSummary) *NullableAuditEventSummary {
	return &NullableAuditEventSummary{value: val, isSet: true}
}

func (v NullableAuditEventSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditEventSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
