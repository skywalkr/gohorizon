/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// VirtualCenterMonitorInfo Monitoring information related to a Virtual Center
type VirtualCenterMonitorInfo struct {
	// Information about the Virtual Center connections from each of the connection servers.
	ConnectionServers *[]VCMonitorConnectionServer `json:"connection_servers,omitempty"`
	// Information about the datastores of the Virtual Center.
	Datastores *[]VCMonitorDatastore `json:"datastores,omitempty"`
	// Number of Desktop Pools And Farms managed by the virtual center.
	DesktopsCount *int32            `json:"desktops_count,omitempty"`
	Details       *VCMonitorDetails `json:"details,omitempty"`
	// Information about the ESX hosts added in the Virtual Center.
	Hosts *[]VCMonitorHost `json:"hosts,omitempty"`
	// Unique ID of the Virtual Center.
	Id *string `json:"id,omitempty"`
	// Virtual Center server name or IP address.
	Name *string `json:"name,omitempty"`
}

// NewVirtualCenterMonitorInfo instantiates a new VirtualCenterMonitorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualCenterMonitorInfo() *VirtualCenterMonitorInfo {
	this := VirtualCenterMonitorInfo{}
	return &this
}

// NewVirtualCenterMonitorInfoWithDefaults instantiates a new VirtualCenterMonitorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualCenterMonitorInfoWithDefaults() *VirtualCenterMonitorInfo {
	this := VirtualCenterMonitorInfo{}
	return &this
}

// GetConnectionServers returns the ConnectionServers field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetConnectionServers() []VCMonitorConnectionServer {
	if o == nil || o.ConnectionServers == nil {
		var ret []VCMonitorConnectionServer
		return ret
	}
	return *o.ConnectionServers
}

// GetConnectionServersOk returns a tuple with the ConnectionServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetConnectionServersOk() (*[]VCMonitorConnectionServer, bool) {
	if o == nil || o.ConnectionServers == nil {
		return nil, false
	}
	return o.ConnectionServers, true
}

// HasConnectionServers returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasConnectionServers() bool {
	if o != nil && o.ConnectionServers != nil {
		return true
	}

	return false
}

// SetConnectionServers gets a reference to the given []VCMonitorConnectionServer and assigns it to the ConnectionServers field.
func (o *VirtualCenterMonitorInfo) SetConnectionServers(v []VCMonitorConnectionServer) {
	o.ConnectionServers = &v
}

// GetDatastores returns the Datastores field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetDatastores() []VCMonitorDatastore {
	if o == nil || o.Datastores == nil {
		var ret []VCMonitorDatastore
		return ret
	}
	return *o.Datastores
}

// GetDatastoresOk returns a tuple with the Datastores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetDatastoresOk() (*[]VCMonitorDatastore, bool) {
	if o == nil || o.Datastores == nil {
		return nil, false
	}
	return o.Datastores, true
}

// HasDatastores returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasDatastores() bool {
	if o != nil && o.Datastores != nil {
		return true
	}

	return false
}

// SetDatastores gets a reference to the given []VCMonitorDatastore and assigns it to the Datastores field.
func (o *VirtualCenterMonitorInfo) SetDatastores(v []VCMonitorDatastore) {
	o.Datastores = &v
}

// GetDesktopsCount returns the DesktopsCount field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetDesktopsCount() int32 {
	if o == nil || o.DesktopsCount == nil {
		var ret int32
		return ret
	}
	return *o.DesktopsCount
}

// GetDesktopsCountOk returns a tuple with the DesktopsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetDesktopsCountOk() (*int32, bool) {
	if o == nil || o.DesktopsCount == nil {
		return nil, false
	}
	return o.DesktopsCount, true
}

// HasDesktopsCount returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasDesktopsCount() bool {
	if o != nil && o.DesktopsCount != nil {
		return true
	}

	return false
}

// SetDesktopsCount gets a reference to the given int32 and assigns it to the DesktopsCount field.
func (o *VirtualCenterMonitorInfo) SetDesktopsCount(v int32) {
	o.DesktopsCount = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetDetails() VCMonitorDetails {
	if o == nil || o.Details == nil {
		var ret VCMonitorDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetDetailsOk() (*VCMonitorDetails, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given VCMonitorDetails and assigns it to the Details field.
func (o *VirtualCenterMonitorInfo) SetDetails(v VCMonitorDetails) {
	o.Details = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetHosts() []VCMonitorHost {
	if o == nil || o.Hosts == nil {
		var ret []VCMonitorHost
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetHostsOk() (*[]VCMonitorHost, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []VCMonitorHost and assigns it to the Hosts field.
func (o *VirtualCenterMonitorInfo) SetHosts(v []VCMonitorHost) {
	o.Hosts = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VirtualCenterMonitorInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VirtualCenterMonitorInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VirtualCenterMonitorInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VirtualCenterMonitorInfo) SetName(v string) {
	o.Name = &v
}

func (o VirtualCenterMonitorInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionServers != nil {
		toSerialize["connection_servers"] = o.ConnectionServers
	}
	if o.Datastores != nil {
		toSerialize["datastores"] = o.Datastores
	}
	if o.DesktopsCount != nil {
		toSerialize["desktops_count"] = o.DesktopsCount
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualCenterMonitorInfo struct {
	value *VirtualCenterMonitorInfo
	isSet bool
}

func (v NullableVirtualCenterMonitorInfo) Get() *VirtualCenterMonitorInfo {
	return v.value
}

func (v *NullableVirtualCenterMonitorInfo) Set(val *VirtualCenterMonitorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualCenterMonitorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualCenterMonitorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualCenterMonitorInfo(val *VirtualCenterMonitorInfo) *NullableVirtualCenterMonitorInfo {
	return &NullableVirtualCenterMonitorInfo{value: val, isSet: true}
}

func (v NullableVirtualCenterMonitorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualCenterMonitorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
