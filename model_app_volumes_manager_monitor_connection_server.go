/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the AppVolumesManagerMonitorConnectionServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppVolumesManagerMonitorConnectionServer{}

// AppVolumesManagerMonitorConnectionServer Information about connection to App Volumes Manager from Connection Server.
type AppVolumesManagerMonitorConnectionServer struct {
	// Connection server host name or IP address.
	Name *string `json:"name,omitempty"`
	// Status of the App Volumes Manager Connection with respect to this Connection Server. * ERROR: There has been no contact from the App Volumes Manager. * OK: The App Volumes Manager is working as expected.
	Status *string `json:"status,omitempty"`
}

// NewAppVolumesManagerMonitorConnectionServer instantiates a new AppVolumesManagerMonitorConnectionServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppVolumesManagerMonitorConnectionServer() *AppVolumesManagerMonitorConnectionServer {
	this := AppVolumesManagerMonitorConnectionServer{}
	return &this
}

// NewAppVolumesManagerMonitorConnectionServerWithDefaults instantiates a new AppVolumesManagerMonitorConnectionServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppVolumesManagerMonitorConnectionServerWithDefaults() *AppVolumesManagerMonitorConnectionServer {
	this := AppVolumesManagerMonitorConnectionServer{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorConnectionServer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorConnectionServer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorConnectionServer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppVolumesManagerMonitorConnectionServer) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorConnectionServer) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorConnectionServer) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorConnectionServer) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AppVolumesManagerMonitorConnectionServer) SetStatus(v string) {
	o.Status = &v
}

func (o AppVolumesManagerMonitorConnectionServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppVolumesManagerMonitorConnectionServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableAppVolumesManagerMonitorConnectionServer struct {
	value *AppVolumesManagerMonitorConnectionServer
	isSet bool
}

func (v NullableAppVolumesManagerMonitorConnectionServer) Get() *AppVolumesManagerMonitorConnectionServer {
	return v.value
}

func (v *NullableAppVolumesManagerMonitorConnectionServer) Set(val *AppVolumesManagerMonitorConnectionServer) {
	v.value = val
	v.isSet = true
}

func (v NullableAppVolumesManagerMonitorConnectionServer) IsSet() bool {
	return v.isSet
}

func (v *NullableAppVolumesManagerMonitorConnectionServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppVolumesManagerMonitorConnectionServer(val *AppVolumesManagerMonitorConnectionServer) *NullableAppVolumesManagerMonitorConnectionServer {
	return &NullableAppVolumesManagerMonitorConnectionServer{value: val, isSet: true}
}

func (v NullableAppVolumesManagerMonitorConnectionServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppVolumesManagerMonitorConnectionServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


