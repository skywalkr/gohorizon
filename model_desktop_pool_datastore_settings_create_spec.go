/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// DesktopPoolDatastoreSettingsCreateSpec Settings for a Virtual Center datastore.
type DesktopPoolDatastoreSettingsCreateSpec struct {
	// Id of the datastore.
	DatastoreId string `json:"datastore_id"`
	// Applicable to full clone desktop pools with default value as false. Indicates whether datastore represents a Storage DRS cluster.
	SdrsCluster *bool `json:"sdrs_cluster,omitempty"`
}

// NewDesktopPoolDatastoreSettingsCreateSpec instantiates a new DesktopPoolDatastoreSettingsCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesktopPoolDatastoreSettingsCreateSpec(datastoreId string) *DesktopPoolDatastoreSettingsCreateSpec {
	this := DesktopPoolDatastoreSettingsCreateSpec{}
	this.DatastoreId = datastoreId
	return &this
}

// NewDesktopPoolDatastoreSettingsCreateSpecWithDefaults instantiates a new DesktopPoolDatastoreSettingsCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesktopPoolDatastoreSettingsCreateSpecWithDefaults() *DesktopPoolDatastoreSettingsCreateSpec {
	this := DesktopPoolDatastoreSettingsCreateSpec{}
	return &this
}

// GetDatastoreId returns the DatastoreId field value
func (o *DesktopPoolDatastoreSettingsCreateSpec) GetDatastoreId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatastoreId
}

// GetDatastoreIdOk returns a tuple with the DatastoreId field value
// and a boolean to check if the value has been set.
func (o *DesktopPoolDatastoreSettingsCreateSpec) GetDatastoreIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatastoreId, true
}

// SetDatastoreId sets field value
func (o *DesktopPoolDatastoreSettingsCreateSpec) SetDatastoreId(v string) {
	o.DatastoreId = v
}

// GetSdrsCluster returns the SdrsCluster field value if set, zero value otherwise.
func (o *DesktopPoolDatastoreSettingsCreateSpec) GetSdrsCluster() bool {
	if o == nil || o.SdrsCluster == nil {
		var ret bool
		return ret
	}
	return *o.SdrsCluster
}

// GetSdrsClusterOk returns a tuple with the SdrsCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolDatastoreSettingsCreateSpec) GetSdrsClusterOk() (*bool, bool) {
	if o == nil || o.SdrsCluster == nil {
		return nil, false
	}
	return o.SdrsCluster, true
}

// HasSdrsCluster returns a boolean if a field has been set.
func (o *DesktopPoolDatastoreSettingsCreateSpec) HasSdrsCluster() bool {
	if o != nil && o.SdrsCluster != nil {
		return true
	}

	return false
}

// SetSdrsCluster gets a reference to the given bool and assigns it to the SdrsCluster field.
func (o *DesktopPoolDatastoreSettingsCreateSpec) SetSdrsCluster(v bool) {
	o.SdrsCluster = &v
}

func (o DesktopPoolDatastoreSettingsCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["datastore_id"] = o.DatastoreId
	}
	if o.SdrsCluster != nil {
		toSerialize["sdrs_cluster"] = o.SdrsCluster
	}
	return json.Marshal(toSerialize)
}

type NullableDesktopPoolDatastoreSettingsCreateSpec struct {
	value *DesktopPoolDatastoreSettingsCreateSpec
	isSet bool
}

func (v NullableDesktopPoolDatastoreSettingsCreateSpec) Get() *DesktopPoolDatastoreSettingsCreateSpec {
	return v.value
}

func (v *NullableDesktopPoolDatastoreSettingsCreateSpec) Set(val *DesktopPoolDatastoreSettingsCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableDesktopPoolDatastoreSettingsCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableDesktopPoolDatastoreSettingsCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesktopPoolDatastoreSettingsCreateSpec(val *DesktopPoolDatastoreSettingsCreateSpec) *NullableDesktopPoolDatastoreSettingsCreateSpec {
	return &NullableDesktopPoolDatastoreSettingsCreateSpec{value: val, isSet: true}
}

func (v NullableDesktopPoolDatastoreSettingsCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesktopPoolDatastoreSettingsCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
