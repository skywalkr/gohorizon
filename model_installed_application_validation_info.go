/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the InstalledApplicationValidationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstalledApplicationValidationInfo{}

// InstalledApplicationValidationInfo Information about the application installed on RDS server/machine of a farm/desktop pool based on a given application execution path.
type InstalledApplicationValidationInfo struct {
	// Application executable path.
	ApplicationExePath *string `json:"application_exe_path,omitempty"`
	// Machine/RDS server ids on which this application has not been installed on. This will be populated only when application is not installed on one or more RDS servers/machines.
	MachineOrRdsServerIds []string `json:"machine_or_rds_server_ids,omitempty"`
	// Status of application installation on all RDS servers/machines. * SUCCESS: The given application is installed on all RDS Servers/machines of a given farm/desktop pool. * NOT_INSTALLED: The given application is not installed on one or more RDS Servers/machines of a given farm/desktop pool.
	Status *string `json:"status,omitempty"`
}

// NewInstalledApplicationValidationInfo instantiates a new InstalledApplicationValidationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstalledApplicationValidationInfo() *InstalledApplicationValidationInfo {
	this := InstalledApplicationValidationInfo{}
	return &this
}

// NewInstalledApplicationValidationInfoWithDefaults instantiates a new InstalledApplicationValidationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstalledApplicationValidationInfoWithDefaults() *InstalledApplicationValidationInfo {
	this := InstalledApplicationValidationInfo{}
	return &this
}

// GetApplicationExePath returns the ApplicationExePath field value if set, zero value otherwise.
func (o *InstalledApplicationValidationInfo) GetApplicationExePath() string {
	if o == nil || IsNil(o.ApplicationExePath) {
		var ret string
		return ret
	}
	return *o.ApplicationExePath
}

// GetApplicationExePathOk returns a tuple with the ApplicationExePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstalledApplicationValidationInfo) GetApplicationExePathOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationExePath) {
		return nil, false
	}
	return o.ApplicationExePath, true
}

// HasApplicationExePath returns a boolean if a field has been set.
func (o *InstalledApplicationValidationInfo) HasApplicationExePath() bool {
	if o != nil && !IsNil(o.ApplicationExePath) {
		return true
	}

	return false
}

// SetApplicationExePath gets a reference to the given string and assigns it to the ApplicationExePath field.
func (o *InstalledApplicationValidationInfo) SetApplicationExePath(v string) {
	o.ApplicationExePath = &v
}

// GetMachineOrRdsServerIds returns the MachineOrRdsServerIds field value if set, zero value otherwise.
func (o *InstalledApplicationValidationInfo) GetMachineOrRdsServerIds() []string {
	if o == nil || IsNil(o.MachineOrRdsServerIds) {
		var ret []string
		return ret
	}
	return o.MachineOrRdsServerIds
}

// GetMachineOrRdsServerIdsOk returns a tuple with the MachineOrRdsServerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstalledApplicationValidationInfo) GetMachineOrRdsServerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MachineOrRdsServerIds) {
		return nil, false
	}
	return o.MachineOrRdsServerIds, true
}

// HasMachineOrRdsServerIds returns a boolean if a field has been set.
func (o *InstalledApplicationValidationInfo) HasMachineOrRdsServerIds() bool {
	if o != nil && !IsNil(o.MachineOrRdsServerIds) {
		return true
	}

	return false
}

// SetMachineOrRdsServerIds gets a reference to the given []string and assigns it to the MachineOrRdsServerIds field.
func (o *InstalledApplicationValidationInfo) SetMachineOrRdsServerIds(v []string) {
	o.MachineOrRdsServerIds = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InstalledApplicationValidationInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstalledApplicationValidationInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InstalledApplicationValidationInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InstalledApplicationValidationInfo) SetStatus(v string) {
	o.Status = &v
}

func (o InstalledApplicationValidationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstalledApplicationValidationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationExePath) {
		toSerialize["application_exe_path"] = o.ApplicationExePath
	}
	if !IsNil(o.MachineOrRdsServerIds) {
		toSerialize["machine_or_rds_server_ids"] = o.MachineOrRdsServerIds
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableInstalledApplicationValidationInfo struct {
	value *InstalledApplicationValidationInfo
	isSet bool
}

func (v NullableInstalledApplicationValidationInfo) Get() *InstalledApplicationValidationInfo {
	return v.value
}

func (v *NullableInstalledApplicationValidationInfo) Set(val *InstalledApplicationValidationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInstalledApplicationValidationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInstalledApplicationValidationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstalledApplicationValidationInfo(val *InstalledApplicationValidationInfo) *NullableInstalledApplicationValidationInfo {
	return &NullableInstalledApplicationValidationInfo{value: val, isSet: true}
}

func (v NullableInstalledApplicationValidationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstalledApplicationValidationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


