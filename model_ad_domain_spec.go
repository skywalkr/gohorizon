/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ADDomainSpec Specification of ADDomain
type ADDomainSpec struct {
	AdDomainAdvancedSettings *ADDomainAdvancedSettings `json:"ad_domain_advanced_settings,omitempty"`
	// The DNS name of the domain.
	DnsName string `json:"dns_name"`
	// The NetBIOS name of the domain.
	NetbiosName    string                     `json:"netbios_name"`
	PrimaryAccount *ServiceAccountCredentials `json:"primary_account,omitempty"`
}

// NewADDomainSpec instantiates a new ADDomainSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADDomainSpec(dnsName string, netbiosName string) *ADDomainSpec {
	this := ADDomainSpec{}
	this.DnsName = dnsName
	this.NetbiosName = netbiosName
	return &this
}

// NewADDomainSpecWithDefaults instantiates a new ADDomainSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADDomainSpecWithDefaults() *ADDomainSpec {
	this := ADDomainSpec{}
	return &this
}

// GetAdDomainAdvancedSettings returns the AdDomainAdvancedSettings field value if set, zero value otherwise.
func (o *ADDomainSpec) GetAdDomainAdvancedSettings() ADDomainAdvancedSettings {
	if o == nil || o.AdDomainAdvancedSettings == nil {
		var ret ADDomainAdvancedSettings
		return ret
	}
	return *o.AdDomainAdvancedSettings
}

// GetAdDomainAdvancedSettingsOk returns a tuple with the AdDomainAdvancedSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainSpec) GetAdDomainAdvancedSettingsOk() (*ADDomainAdvancedSettings, bool) {
	if o == nil || o.AdDomainAdvancedSettings == nil {
		return nil, false
	}
	return o.AdDomainAdvancedSettings, true
}

// HasAdDomainAdvancedSettings returns a boolean if a field has been set.
func (o *ADDomainSpec) HasAdDomainAdvancedSettings() bool {
	if o != nil && o.AdDomainAdvancedSettings != nil {
		return true
	}

	return false
}

// SetAdDomainAdvancedSettings gets a reference to the given ADDomainAdvancedSettings and assigns it to the AdDomainAdvancedSettings field.
func (o *ADDomainSpec) SetAdDomainAdvancedSettings(v ADDomainAdvancedSettings) {
	o.AdDomainAdvancedSettings = &v
}

// GetDnsName returns the DnsName field value
func (o *ADDomainSpec) GetDnsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value
// and a boolean to check if the value has been set.
func (o *ADDomainSpec) GetDnsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DnsName, true
}

// SetDnsName sets field value
func (o *ADDomainSpec) SetDnsName(v string) {
	o.DnsName = v
}

// GetNetbiosName returns the NetbiosName field value
func (o *ADDomainSpec) GetNetbiosName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetbiosName
}

// GetNetbiosNameOk returns a tuple with the NetbiosName field value
// and a boolean to check if the value has been set.
func (o *ADDomainSpec) GetNetbiosNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetbiosName, true
}

// SetNetbiosName sets field value
func (o *ADDomainSpec) SetNetbiosName(v string) {
	o.NetbiosName = v
}

// GetPrimaryAccount returns the PrimaryAccount field value if set, zero value otherwise.
func (o *ADDomainSpec) GetPrimaryAccount() ServiceAccountCredentials {
	if o == nil || o.PrimaryAccount == nil {
		var ret ServiceAccountCredentials
		return ret
	}
	return *o.PrimaryAccount
}

// GetPrimaryAccountOk returns a tuple with the PrimaryAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainSpec) GetPrimaryAccountOk() (*ServiceAccountCredentials, bool) {
	if o == nil || o.PrimaryAccount == nil {
		return nil, false
	}
	return o.PrimaryAccount, true
}

// HasPrimaryAccount returns a boolean if a field has been set.
func (o *ADDomainSpec) HasPrimaryAccount() bool {
	if o != nil && o.PrimaryAccount != nil {
		return true
	}

	return false
}

// SetPrimaryAccount gets a reference to the given ServiceAccountCredentials and assigns it to the PrimaryAccount field.
func (o *ADDomainSpec) SetPrimaryAccount(v ServiceAccountCredentials) {
	o.PrimaryAccount = &v
}

func (o ADDomainSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdDomainAdvancedSettings != nil {
		toSerialize["ad_domain_advanced_settings"] = o.AdDomainAdvancedSettings
	}
	if true {
		toSerialize["dns_name"] = o.DnsName
	}
	if true {
		toSerialize["netbios_name"] = o.NetbiosName
	}
	if o.PrimaryAccount != nil {
		toSerialize["primary_account"] = o.PrimaryAccount
	}
	return json.Marshal(toSerialize)
}

type NullableADDomainSpec struct {
	value *ADDomainSpec
	isSet bool
}

func (v NullableADDomainSpec) Get() *ADDomainSpec {
	return v.value
}

func (v *NullableADDomainSpec) Set(val *ADDomainSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableADDomainSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableADDomainSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADDomainSpec(val *ADDomainSpec) *NullableADDomainSpec {
	return &NullableADDomainSpec{value: val, isSet: true}
}

func (v NullableADDomainSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADDomainSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
