/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ImageManagementAssetInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageManagementAssetInfo{}

// ImageManagementAssetInfo Information related to image management asset.
type ImageManagementAssetInfo struct {
	// Additional details about image management asset.
	AdditionalDetails *map[string]string `json:"additional_details,omitempty"`
	// Virtual machine snapshot. Must be set if vm_template_id is unset.
	BaseSnapshotId *string `json:"base_snapshot_id,omitempty"`
	// Virtual machine ID. Must be set if vm_template_id is unset.
	BaseVmId *string `json:"base_vm_id,omitempty"`
	// Image management asset clone type. * FULL_CLONE: Image management asset to be used in full clone automated desktop pool. * INSTANT_CLONE: Image management asset to be used in instant clone desktop pool/farm.
	CloneType *string `json:"clone_type,omitempty"`
	// Datacenter where this asset is created.
	DatacenterId *string `json:"datacenter_id,omitempty"`
	// Unique ID representing image management asset.
	Id *string `json:"id,omitempty"`
	// Image management stream to which this asset belongs to.
	ImStreamId *string `json:"im_stream_id,omitempty"`
	// Image management version to which this asset belongs to.
	ImVersionId *string `json:"im_version_id,omitempty"`
	// Image management asset image type. * RDSH_APPS: Image management asset to be used for farm creation which is be used in application. * RDSH_DESKTOP: Image management asset is for farm creation to be created. * VDI_DESKTOP: Image management asset is available for desktops/farms to be created.
	ImageType *string `json:"image_type,omitempty"`
	// Image management asset status. * AVAILABLE: Image management asset is available for desktop pools/farms to be created. * DEPLOYING_VM: Image management asset is deploying VM on the virtual center. * DEPLOYMENT_DONE: Image management asset VM deployed on the virtual center. * DELETED: Image management asset has been deleted. * DISABLED: Image management asset has been disabled and no further pool/farm operation can be done using the same. * FAILED: Image management asset creation has failed. * REPLICATING: Copying the specialized images across all virtual centers. * RETRY_PENDING: When image management asset creation has failed, retry action is pending for asset to be created. * SPECIALIZING_VM: Image management asset is being published and specialized internally like installing agents etc.
	Status *string `json:"status,omitempty"`
	// Virtual Center where this asset is created.
	VcenterId *string `json:"vcenter_id,omitempty"`
	// Virtual machine template ID.
	VmTemplateId *string `json:"vm_template_id,omitempty"`
}

// NewImageManagementAssetInfo instantiates a new ImageManagementAssetInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageManagementAssetInfo() *ImageManagementAssetInfo {
	this := ImageManagementAssetInfo{}
	return &this
}

// NewImageManagementAssetInfoWithDefaults instantiates a new ImageManagementAssetInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageManagementAssetInfoWithDefaults() *ImageManagementAssetInfo {
	this := ImageManagementAssetInfo{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetAdditionalDetails() map[string]string {
	if o == nil || IsNil(o.AdditionalDetails) {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetAdditionalDetailsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AdditionalDetails) {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasAdditionalDetails() bool {
	if o != nil && !IsNil(o.AdditionalDetails) {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given map[string]string and assigns it to the AdditionalDetails field.
func (o *ImageManagementAssetInfo) SetAdditionalDetails(v map[string]string) {
	o.AdditionalDetails = &v
}

// GetBaseSnapshotId returns the BaseSnapshotId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetBaseSnapshotId() string {
	if o == nil || IsNil(o.BaseSnapshotId) {
		var ret string
		return ret
	}
	return *o.BaseSnapshotId
}

// GetBaseSnapshotIdOk returns a tuple with the BaseSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetBaseSnapshotIdOk() (*string, bool) {
	if o == nil || IsNil(o.BaseSnapshotId) {
		return nil, false
	}
	return o.BaseSnapshotId, true
}

// HasBaseSnapshotId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasBaseSnapshotId() bool {
	if o != nil && !IsNil(o.BaseSnapshotId) {
		return true
	}

	return false
}

// SetBaseSnapshotId gets a reference to the given string and assigns it to the BaseSnapshotId field.
func (o *ImageManagementAssetInfo) SetBaseSnapshotId(v string) {
	o.BaseSnapshotId = &v
}

// GetBaseVmId returns the BaseVmId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetBaseVmId() string {
	if o == nil || IsNil(o.BaseVmId) {
		var ret string
		return ret
	}
	return *o.BaseVmId
}

// GetBaseVmIdOk returns a tuple with the BaseVmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetBaseVmIdOk() (*string, bool) {
	if o == nil || IsNil(o.BaseVmId) {
		return nil, false
	}
	return o.BaseVmId, true
}

// HasBaseVmId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasBaseVmId() bool {
	if o != nil && !IsNil(o.BaseVmId) {
		return true
	}

	return false
}

// SetBaseVmId gets a reference to the given string and assigns it to the BaseVmId field.
func (o *ImageManagementAssetInfo) SetBaseVmId(v string) {
	o.BaseVmId = &v
}

// GetCloneType returns the CloneType field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetCloneType() string {
	if o == nil || IsNil(o.CloneType) {
		var ret string
		return ret
	}
	return *o.CloneType
}

// GetCloneTypeOk returns a tuple with the CloneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetCloneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloneType) {
		return nil, false
	}
	return o.CloneType, true
}

// HasCloneType returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasCloneType() bool {
	if o != nil && !IsNil(o.CloneType) {
		return true
	}

	return false
}

// SetCloneType gets a reference to the given string and assigns it to the CloneType field.
func (o *ImageManagementAssetInfo) SetCloneType(v string) {
	o.CloneType = &v
}

// GetDatacenterId returns the DatacenterId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetDatacenterId() string {
	if o == nil || IsNil(o.DatacenterId) {
		var ret string
		return ret
	}
	return *o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetDatacenterIdOk() (*string, bool) {
	if o == nil || IsNil(o.DatacenterId) {
		return nil, false
	}
	return o.DatacenterId, true
}

// HasDatacenterId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasDatacenterId() bool {
	if o != nil && !IsNil(o.DatacenterId) {
		return true
	}

	return false
}

// SetDatacenterId gets a reference to the given string and assigns it to the DatacenterId field.
func (o *ImageManagementAssetInfo) SetDatacenterId(v string) {
	o.DatacenterId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageManagementAssetInfo) SetId(v string) {
	o.Id = &v
}

// GetImStreamId returns the ImStreamId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetImStreamId() string {
	if o == nil || IsNil(o.ImStreamId) {
		var ret string
		return ret
	}
	return *o.ImStreamId
}

// GetImStreamIdOk returns a tuple with the ImStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetImStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImStreamId) {
		return nil, false
	}
	return o.ImStreamId, true
}

// HasImStreamId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasImStreamId() bool {
	if o != nil && !IsNil(o.ImStreamId) {
		return true
	}

	return false
}

// SetImStreamId gets a reference to the given string and assigns it to the ImStreamId field.
func (o *ImageManagementAssetInfo) SetImStreamId(v string) {
	o.ImStreamId = &v
}

// GetImVersionId returns the ImVersionId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetImVersionId() string {
	if o == nil || IsNil(o.ImVersionId) {
		var ret string
		return ret
	}
	return *o.ImVersionId
}

// GetImVersionIdOk returns a tuple with the ImVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetImVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImVersionId) {
		return nil, false
	}
	return o.ImVersionId, true
}

// HasImVersionId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasImVersionId() bool {
	if o != nil && !IsNil(o.ImVersionId) {
		return true
	}

	return false
}

// SetImVersionId gets a reference to the given string and assigns it to the ImVersionId field.
func (o *ImageManagementAssetInfo) SetImVersionId(v string) {
	o.ImVersionId = &v
}

// GetImageType returns the ImageType field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetImageType() string {
	if o == nil || IsNil(o.ImageType) {
		var ret string
		return ret
	}
	return *o.ImageType
}

// GetImageTypeOk returns a tuple with the ImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetImageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ImageType) {
		return nil, false
	}
	return o.ImageType, true
}

// HasImageType returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasImageType() bool {
	if o != nil && !IsNil(o.ImageType) {
		return true
	}

	return false
}

// SetImageType gets a reference to the given string and assigns it to the ImageType field.
func (o *ImageManagementAssetInfo) SetImageType(v string) {
	o.ImageType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ImageManagementAssetInfo) SetStatus(v string) {
	o.Status = &v
}

// GetVcenterId returns the VcenterId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetVcenterId() string {
	if o == nil || IsNil(o.VcenterId) {
		var ret string
		return ret
	}
	return *o.VcenterId
}

// GetVcenterIdOk returns a tuple with the VcenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetVcenterIdOk() (*string, bool) {
	if o == nil || IsNil(o.VcenterId) {
		return nil, false
	}
	return o.VcenterId, true
}

// HasVcenterId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasVcenterId() bool {
	if o != nil && !IsNil(o.VcenterId) {
		return true
	}

	return false
}

// SetVcenterId gets a reference to the given string and assigns it to the VcenterId field.
func (o *ImageManagementAssetInfo) SetVcenterId(v string) {
	o.VcenterId = &v
}

// GetVmTemplateId returns the VmTemplateId field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetVmTemplateId() string {
	if o == nil || IsNil(o.VmTemplateId) {
		var ret string
		return ret
	}
	return *o.VmTemplateId
}

// GetVmTemplateIdOk returns a tuple with the VmTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetVmTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.VmTemplateId) {
		return nil, false
	}
	return o.VmTemplateId, true
}

// HasVmTemplateId returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasVmTemplateId() bool {
	if o != nil && !IsNil(o.VmTemplateId) {
		return true
	}

	return false
}

// SetVmTemplateId gets a reference to the given string and assigns it to the VmTemplateId field.
func (o *ImageManagementAssetInfo) SetVmTemplateId(v string) {
	o.VmTemplateId = &v
}

func (o ImageManagementAssetInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageManagementAssetInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalDetails) {
		toSerialize["additional_details"] = o.AdditionalDetails
	}
	if !IsNil(o.BaseSnapshotId) {
		toSerialize["base_snapshot_id"] = o.BaseSnapshotId
	}
	if !IsNil(o.BaseVmId) {
		toSerialize["base_vm_id"] = o.BaseVmId
	}
	if !IsNil(o.CloneType) {
		toSerialize["clone_type"] = o.CloneType
	}
	if !IsNil(o.DatacenterId) {
		toSerialize["datacenter_id"] = o.DatacenterId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImStreamId) {
		toSerialize["im_stream_id"] = o.ImStreamId
	}
	if !IsNil(o.ImVersionId) {
		toSerialize["im_version_id"] = o.ImVersionId
	}
	if !IsNil(o.ImageType) {
		toSerialize["image_type"] = o.ImageType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.VcenterId) {
		toSerialize["vcenter_id"] = o.VcenterId
	}
	if !IsNil(o.VmTemplateId) {
		toSerialize["vm_template_id"] = o.VmTemplateId
	}
	return toSerialize, nil
}

type NullableImageManagementAssetInfo struct {
	value *ImageManagementAssetInfo
	isSet bool
}

func (v NullableImageManagementAssetInfo) Get() *ImageManagementAssetInfo {
	return v.value
}

func (v *NullableImageManagementAssetInfo) Set(val *ImageManagementAssetInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableImageManagementAssetInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableImageManagementAssetInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageManagementAssetInfo(val *ImageManagementAssetInfo) *NullableImageManagementAssetInfo {
	return &NullableImageManagementAssetInfo{value: val, isSet: true}
}

func (v NullableImageManagementAssetInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageManagementAssetInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


