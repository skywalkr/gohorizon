/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ImageManagementAssetInfo Information related to image management asset.
type ImageManagementAssetInfo struct {
	// Additional details about image management asset.
	AdditionalDetails *map[string]string `json:"additional_details,omitempty"`
	// Virtual machine snapshot. Must be set if vm_template_id is unset.
	BaseSnapshotId string `json:"base_snapshot_id"`
	// Virtual machine ID. Must be set if vm_template_id is unset.
	BaseVmId string `json:"base_vm_id"`
	// Image management asset clone type. * FULL_CLONE: Image management asset to be used in full clone automated desktop pool. * INSTANT_CLONE: Image management asset to be used in instant clone desktop pool/farm.
	CloneType string `json:"clone_type"`
	// Datacenter where this asset is created.
	DatacenterId string `json:"datacenter_id"`
	// Unique ID representing image management asset.
	Id string `json:"id"`
	// Image management stream to which this asset belongs to.
	ImStreamId string `json:"im_stream_id"`
	// Image management version to which this asset belongs to.
	ImVersionId string `json:"im_version_id"`
	// Image management asset image type. * RDSH_APPS: Image management asset to be used for farm creation which is be used in application. * RDSH_DESKTOP: Image management asset is for farm creation to be created. * VDI_DESKTOP: Image management asset is available for desktops/farms to be created.
	ImageType string `json:"image_type"`
	// Image management asset status. * AVAILABLE: Image management asset is available for desktop pools/farms to be created. * DEPLOYING_VM: Image management asset is deploying VM on the virtual center. * DEPLOYMENT_DONE: Image management asset VM deployed on the virtual center. * DELETED: Image management asset has been deleted. * DISABLED: Image management asset has been disabled and no further pool/farm operation can be done using the same. * FAILED: Image management asset creation has failed. * REPLICATING: Copying the specialized images across all virtual centers. * RETRY_PENDING: When image management asset creation has failed, retry action is pending for asset to be created. * SPECIALIZING_VM: Image management asset is being published and specialized internally like installing agents etc.
	Status string `json:"status"`
	// Virtual Center where this asset is created.
	VcenterId string `json:"vcenter_id"`
	// Virtual machine template ID.
	VmTemplateId string `json:"vm_template_id"`
}

// NewImageManagementAssetInfo instantiates a new ImageManagementAssetInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageManagementAssetInfo(baseSnapshotId string, baseVmId string, cloneType string, datacenterId string, id string, imStreamId string, imVersionId string, imageType string, status string, vcenterId string, vmTemplateId string) *ImageManagementAssetInfo {
	this := ImageManagementAssetInfo{}
	this.BaseSnapshotId = baseSnapshotId
	this.BaseVmId = baseVmId
	this.CloneType = cloneType
	this.DatacenterId = datacenterId
	this.Id = id
	this.ImStreamId = imStreamId
	this.ImVersionId = imVersionId
	this.ImageType = imageType
	this.Status = status
	this.VcenterId = vcenterId
	this.VmTemplateId = vmTemplateId
	return &this
}

// NewImageManagementAssetInfoWithDefaults instantiates a new ImageManagementAssetInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageManagementAssetInfoWithDefaults() *ImageManagementAssetInfo {
	this := ImageManagementAssetInfo{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *ImageManagementAssetInfo) GetAdditionalDetails() map[string]string {
	if o == nil || o.AdditionalDetails == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetAdditionalDetailsOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalDetails == nil {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *ImageManagementAssetInfo) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails != nil {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given map[string]string and assigns it to the AdditionalDetails field.
func (o *ImageManagementAssetInfo) SetAdditionalDetails(v map[string]string) {
	o.AdditionalDetails = &v
}

// GetBaseSnapshotId returns the BaseSnapshotId field value
func (o *ImageManagementAssetInfo) GetBaseSnapshotId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseSnapshotId
}

// GetBaseSnapshotIdOk returns a tuple with the BaseSnapshotId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetBaseSnapshotIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseSnapshotId, true
}

// SetBaseSnapshotId sets field value
func (o *ImageManagementAssetInfo) SetBaseSnapshotId(v string) {
	o.BaseSnapshotId = v
}

// GetBaseVmId returns the BaseVmId field value
func (o *ImageManagementAssetInfo) GetBaseVmId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseVmId
}

// GetBaseVmIdOk returns a tuple with the BaseVmId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetBaseVmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseVmId, true
}

// SetBaseVmId sets field value
func (o *ImageManagementAssetInfo) SetBaseVmId(v string) {
	o.BaseVmId = v
}

// GetCloneType returns the CloneType field value
func (o *ImageManagementAssetInfo) GetCloneType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloneType
}

// GetCloneTypeOk returns a tuple with the CloneType field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetCloneTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloneType, true
}

// SetCloneType sets field value
func (o *ImageManagementAssetInfo) SetCloneType(v string) {
	o.CloneType = v
}

// GetDatacenterId returns the DatacenterId field value
func (o *ImageManagementAssetInfo) GetDatacenterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetDatacenterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatacenterId, true
}

// SetDatacenterId sets field value
func (o *ImageManagementAssetInfo) SetDatacenterId(v string) {
	o.DatacenterId = v
}

// GetId returns the Id field value
func (o *ImageManagementAssetInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ImageManagementAssetInfo) SetId(v string) {
	o.Id = v
}

// GetImStreamId returns the ImStreamId field value
func (o *ImageManagementAssetInfo) GetImStreamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImStreamId
}

// GetImStreamIdOk returns a tuple with the ImStreamId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetImStreamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImStreamId, true
}

// SetImStreamId sets field value
func (o *ImageManagementAssetInfo) SetImStreamId(v string) {
	o.ImStreamId = v
}

// GetImVersionId returns the ImVersionId field value
func (o *ImageManagementAssetInfo) GetImVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImVersionId
}

// GetImVersionIdOk returns a tuple with the ImVersionId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetImVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImVersionId, true
}

// SetImVersionId sets field value
func (o *ImageManagementAssetInfo) SetImVersionId(v string) {
	o.ImVersionId = v
}

// GetImageType returns the ImageType field value
func (o *ImageManagementAssetInfo) GetImageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageType
}

// GetImageTypeOk returns a tuple with the ImageType field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageType, true
}

// SetImageType sets field value
func (o *ImageManagementAssetInfo) SetImageType(v string) {
	o.ImageType = v
}

// GetStatus returns the Status field value
func (o *ImageManagementAssetInfo) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ImageManagementAssetInfo) SetStatus(v string) {
	o.Status = v
}

// GetVcenterId returns the VcenterId field value
func (o *ImageManagementAssetInfo) GetVcenterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VcenterId
}

// GetVcenterIdOk returns a tuple with the VcenterId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetVcenterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VcenterId, true
}

// SetVcenterId sets field value
func (o *ImageManagementAssetInfo) SetVcenterId(v string) {
	o.VcenterId = v
}

// GetVmTemplateId returns the VmTemplateId field value
func (o *ImageManagementAssetInfo) GetVmTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmTemplateId
}

// GetVmTemplateIdOk returns a tuple with the VmTemplateId field value
// and a boolean to check if the value has been set.
func (o *ImageManagementAssetInfo) GetVmTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmTemplateId, true
}

// SetVmTemplateId sets field value
func (o *ImageManagementAssetInfo) SetVmTemplateId(v string) {
	o.VmTemplateId = v
}

func (o ImageManagementAssetInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalDetails != nil {
		toSerialize["additional_details"] = o.AdditionalDetails
	}
	if true {
		toSerialize["base_snapshot_id"] = o.BaseSnapshotId
	}
	if true {
		toSerialize["base_vm_id"] = o.BaseVmId
	}
	if true {
		toSerialize["clone_type"] = o.CloneType
	}
	if true {
		toSerialize["datacenter_id"] = o.DatacenterId
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["im_stream_id"] = o.ImStreamId
	}
	if true {
		toSerialize["im_version_id"] = o.ImVersionId
	}
	if true {
		toSerialize["image_type"] = o.ImageType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["vcenter_id"] = o.VcenterId
	}
	if true {
		toSerialize["vm_template_id"] = o.VmTemplateId
	}
	return json.Marshal(toSerialize)
}

type NullableImageManagementAssetInfo struct {
	value *ImageManagementAssetInfo
	isSet bool
}

func (v NullableImageManagementAssetInfo) Get() *ImageManagementAssetInfo {
	return v.value
}

func (v *NullableImageManagementAssetInfo) Set(val *ImageManagementAssetInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableImageManagementAssetInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableImageManagementAssetInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageManagementAssetInfo(val *ImageManagementAssetInfo) *NullableImageManagementAssetInfo {
	return &NullableImageManagementAssetInfo{value: val, isSet: true}
}

func (v NullableImageManagementAssetInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageManagementAssetInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
