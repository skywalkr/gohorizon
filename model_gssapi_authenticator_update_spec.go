/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GSSAPIAuthenticatorUpdateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GSSAPIAuthenticatorUpdateSpec{}

// GSSAPIAuthenticatorUpdateSpec Information required to update GSSAPI Authenticator.
type GSSAPIAuthenticatorUpdateSpec struct {
	// Indicates whether the legacy Horizon clients will be allowed to use login as current user.
	AllowLegacyClients bool `json:"allow_legacy_clients"`
	// Indicates whether NTLM is allowed for GSSAPI authentication. When the client does not have access to the domain controllers in the hosted environment kerberos authentication fails, clients can fall back to NTLM authentication if allowNTLMFallback is set to true.
	AllowNtlmFallback bool `json:"allow_ntlm_fallback"`
	// Indicates whether the login as current user is enabled or not.
	EnableLoginAsCurrentUser bool `json:"enable_login_as_current_user"`
	// Indicates whether channel bindings is supported or not.
	EnforceChannelBindings bool `json:"enforce_channel_bindings"`
	// Indicates True SSO trigger mode on sessions using this authenticator. * DISABLED: Do not use True SSO. * OPTIONAL: If no SSO credentials are provided then use True SSO otherwise use the supplied SSO credentials. * ENABLED: Always use True SSO even if client supplied SSO credentials.
	TriggerMode string `json:"trigger_mode"`
}

type _GSSAPIAuthenticatorUpdateSpec GSSAPIAuthenticatorUpdateSpec

// NewGSSAPIAuthenticatorUpdateSpec instantiates a new GSSAPIAuthenticatorUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGSSAPIAuthenticatorUpdateSpec(allowLegacyClients bool, allowNtlmFallback bool, enableLoginAsCurrentUser bool, enforceChannelBindings bool, triggerMode string) *GSSAPIAuthenticatorUpdateSpec {
	this := GSSAPIAuthenticatorUpdateSpec{}
	this.AllowLegacyClients = allowLegacyClients
	this.AllowNtlmFallback = allowNtlmFallback
	this.EnableLoginAsCurrentUser = enableLoginAsCurrentUser
	this.EnforceChannelBindings = enforceChannelBindings
	this.TriggerMode = triggerMode
	return &this
}

// NewGSSAPIAuthenticatorUpdateSpecWithDefaults instantiates a new GSSAPIAuthenticatorUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGSSAPIAuthenticatorUpdateSpecWithDefaults() *GSSAPIAuthenticatorUpdateSpec {
	this := GSSAPIAuthenticatorUpdateSpec{}
	return &this
}

// GetAllowLegacyClients returns the AllowLegacyClients field value
func (o *GSSAPIAuthenticatorUpdateSpec) GetAllowLegacyClients() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowLegacyClients
}

// GetAllowLegacyClientsOk returns a tuple with the AllowLegacyClients field value
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorUpdateSpec) GetAllowLegacyClientsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowLegacyClients, true
}

// SetAllowLegacyClients sets field value
func (o *GSSAPIAuthenticatorUpdateSpec) SetAllowLegacyClients(v bool) {
	o.AllowLegacyClients = v
}

// GetAllowNtlmFallback returns the AllowNtlmFallback field value
func (o *GSSAPIAuthenticatorUpdateSpec) GetAllowNtlmFallback() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowNtlmFallback
}

// GetAllowNtlmFallbackOk returns a tuple with the AllowNtlmFallback field value
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorUpdateSpec) GetAllowNtlmFallbackOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowNtlmFallback, true
}

// SetAllowNtlmFallback sets field value
func (o *GSSAPIAuthenticatorUpdateSpec) SetAllowNtlmFallback(v bool) {
	o.AllowNtlmFallback = v
}

// GetEnableLoginAsCurrentUser returns the EnableLoginAsCurrentUser field value
func (o *GSSAPIAuthenticatorUpdateSpec) GetEnableLoginAsCurrentUser() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableLoginAsCurrentUser
}

// GetEnableLoginAsCurrentUserOk returns a tuple with the EnableLoginAsCurrentUser field value
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorUpdateSpec) GetEnableLoginAsCurrentUserOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableLoginAsCurrentUser, true
}

// SetEnableLoginAsCurrentUser sets field value
func (o *GSSAPIAuthenticatorUpdateSpec) SetEnableLoginAsCurrentUser(v bool) {
	o.EnableLoginAsCurrentUser = v
}

// GetEnforceChannelBindings returns the EnforceChannelBindings field value
func (o *GSSAPIAuthenticatorUpdateSpec) GetEnforceChannelBindings() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnforceChannelBindings
}

// GetEnforceChannelBindingsOk returns a tuple with the EnforceChannelBindings field value
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorUpdateSpec) GetEnforceChannelBindingsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnforceChannelBindings, true
}

// SetEnforceChannelBindings sets field value
func (o *GSSAPIAuthenticatorUpdateSpec) SetEnforceChannelBindings(v bool) {
	o.EnforceChannelBindings = v
}

// GetTriggerMode returns the TriggerMode field value
func (o *GSSAPIAuthenticatorUpdateSpec) GetTriggerMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TriggerMode
}

// GetTriggerModeOk returns a tuple with the TriggerMode field value
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorUpdateSpec) GetTriggerModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggerMode, true
}

// SetTriggerMode sets field value
func (o *GSSAPIAuthenticatorUpdateSpec) SetTriggerMode(v string) {
	o.TriggerMode = v
}

func (o GSSAPIAuthenticatorUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GSSAPIAuthenticatorUpdateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allow_legacy_clients"] = o.AllowLegacyClients
	toSerialize["allow_ntlm_fallback"] = o.AllowNtlmFallback
	toSerialize["enable_login_as_current_user"] = o.EnableLoginAsCurrentUser
	toSerialize["enforce_channel_bindings"] = o.EnforceChannelBindings
	toSerialize["trigger_mode"] = o.TriggerMode
	return toSerialize, nil
}

func (o *GSSAPIAuthenticatorUpdateSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allow_legacy_clients",
		"allow_ntlm_fallback",
		"enable_login_as_current_user",
		"enforce_channel_bindings",
		"trigger_mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGSSAPIAuthenticatorUpdateSpec := _GSSAPIAuthenticatorUpdateSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGSSAPIAuthenticatorUpdateSpec)

	if err != nil {
		return err
	}

	*o = GSSAPIAuthenticatorUpdateSpec(varGSSAPIAuthenticatorUpdateSpec)

	return err
}

type NullableGSSAPIAuthenticatorUpdateSpec struct {
	value *GSSAPIAuthenticatorUpdateSpec
	isSet bool
}

func (v NullableGSSAPIAuthenticatorUpdateSpec) Get() *GSSAPIAuthenticatorUpdateSpec {
	return v.value
}

func (v *NullableGSSAPIAuthenticatorUpdateSpec) Set(val *GSSAPIAuthenticatorUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGSSAPIAuthenticatorUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGSSAPIAuthenticatorUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGSSAPIAuthenticatorUpdateSpec(val *GSSAPIAuthenticatorUpdateSpec) *NullableGSSAPIAuthenticatorUpdateSpec {
	return &NullableGSSAPIAuthenticatorUpdateSpec{value: val, isSet: true}
}

func (v NullableGSSAPIAuthenticatorUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGSSAPIAuthenticatorUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


