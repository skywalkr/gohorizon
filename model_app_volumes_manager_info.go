/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the AppVolumesManagerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppVolumesManagerInfo{}

// AppVolumesManagerInfo Information about App Volumes Manager.
type AppVolumesManagerInfo struct {
	// Unique Id of the App Volumes Manager.
	Id *string `json:"id,omitempty"`
	// Port of the App Volumes Manager to connect to.
	Port *int32 `json:"port,omitempty"`
	// App Volumes Manager's server name or IP address.
	ServerName *string `json:"server_name,omitempty"`
	// Username to login to App Volumes Manager.
	Username *string `json:"username,omitempty"`
}

// NewAppVolumesManagerInfo instantiates a new AppVolumesManagerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppVolumesManagerInfo() *AppVolumesManagerInfo {
	this := AppVolumesManagerInfo{}
	return &this
}

// NewAppVolumesManagerInfoWithDefaults instantiates a new AppVolumesManagerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppVolumesManagerInfoWithDefaults() *AppVolumesManagerInfo {
	this := AppVolumesManagerInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppVolumesManagerInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppVolumesManagerInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppVolumesManagerInfo) SetId(v string) {
	o.Id = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *AppVolumesManagerInfo) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerInfo) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *AppVolumesManagerInfo) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *AppVolumesManagerInfo) SetPort(v int32) {
	o.Port = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *AppVolumesManagerInfo) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerInfo) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *AppVolumesManagerInfo) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *AppVolumesManagerInfo) SetServerName(v string) {
	o.ServerName = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AppVolumesManagerInfo) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerInfo) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AppVolumesManagerInfo) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AppVolumesManagerInfo) SetUsername(v string) {
	o.Username = &v
}

func (o AppVolumesManagerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppVolumesManagerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.ServerName) {
		toSerialize["server_name"] = o.ServerName
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableAppVolumesManagerInfo struct {
	value *AppVolumesManagerInfo
	isSet bool
}

func (v NullableAppVolumesManagerInfo) Get() *AppVolumesManagerInfo {
	return v.value
}

func (v *NullableAppVolumesManagerInfo) Set(val *AppVolumesManagerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAppVolumesManagerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAppVolumesManagerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppVolumesManagerInfo(val *AppVolumesManagerInfo) *NullableAppVolumesManagerInfo {
	return &NullableAppVolumesManagerInfo{value: val, isSet: true}
}

func (v NullableAppVolumesManagerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppVolumesManagerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


