/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ConnectionServerSessionProtocolData Details of connected session count for each session protocol.
type ConnectionServerSessionProtocolData struct {
	// Number of active sessions launched using the protocol.
	SessionCount int32 `json:"session_count"`
	// Protocol used in launching the session. * PCOIP: Display protocol is PCoIP. * RDP: Display protocol is RDP. * BLAST: Display protocol is BLAST. * CONSOLE: Display protocol is console. * UNKNOWN: Display protocol is unknown.
	SessionProtocol string `json:"session_protocol"`
}

// NewConnectionServerSessionProtocolData instantiates a new ConnectionServerSessionProtocolData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerSessionProtocolData(sessionCount int32, sessionProtocol string) *ConnectionServerSessionProtocolData {
	this := ConnectionServerSessionProtocolData{}
	this.SessionCount = sessionCount
	this.SessionProtocol = sessionProtocol
	return &this
}

// NewConnectionServerSessionProtocolDataWithDefaults instantiates a new ConnectionServerSessionProtocolData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerSessionProtocolDataWithDefaults() *ConnectionServerSessionProtocolData {
	this := ConnectionServerSessionProtocolData{}
	return &this
}

// GetSessionCount returns the SessionCount field value
func (o *ConnectionServerSessionProtocolData) GetSessionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SessionCount
}

// GetSessionCountOk returns a tuple with the SessionCount field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerSessionProtocolData) GetSessionCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionCount, true
}

// SetSessionCount sets field value
func (o *ConnectionServerSessionProtocolData) SetSessionCount(v int32) {
	o.SessionCount = v
}

// GetSessionProtocol returns the SessionProtocol field value
func (o *ConnectionServerSessionProtocolData) GetSessionProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionProtocol
}

// GetSessionProtocolOk returns a tuple with the SessionProtocol field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerSessionProtocolData) GetSessionProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionProtocol, true
}

// SetSessionProtocol sets field value
func (o *ConnectionServerSessionProtocolData) SetSessionProtocol(v string) {
	o.SessionProtocol = v
}

func (o ConnectionServerSessionProtocolData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["session_count"] = o.SessionCount
	}
	if true {
		toSerialize["session_protocol"] = o.SessionProtocol
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionServerSessionProtocolData struct {
	value *ConnectionServerSessionProtocolData
	isSet bool
}

func (v NullableConnectionServerSessionProtocolData) Get() *ConnectionServerSessionProtocolData {
	return v.value
}

func (v *NullableConnectionServerSessionProtocolData) Set(val *ConnectionServerSessionProtocolData) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerSessionProtocolData) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerSessionProtocolData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerSessionProtocolData(val *ConnectionServerSessionProtocolData) *NullableConnectionServerSessionProtocolData {
	return &NullableConnectionServerSessionProtocolData{value: val, isSet: true}
}

func (v NullableConnectionServerSessionProtocolData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerSessionProtocolData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
