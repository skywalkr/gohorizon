/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ADDomainInfo Information related to AD Domains of the environment.
type ADDomainInfo struct {
	// DNS name of the AD Domain.
	DnsName string `json:"dns_name"`
	// Unique SID representing AD Domain.
	Id string `json:"id"`
	// NetBIOS name of the AD Domain.
	NetbiosName string `json:"netbios_name"`
}

// NewADDomainInfo instantiates a new ADDomainInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADDomainInfo(dnsName string, id string, netbiosName string) *ADDomainInfo {
	this := ADDomainInfo{}
	this.DnsName = dnsName
	this.Id = id
	this.NetbiosName = netbiosName
	return &this
}

// NewADDomainInfoWithDefaults instantiates a new ADDomainInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADDomainInfoWithDefaults() *ADDomainInfo {
	this := ADDomainInfo{}
	return &this
}

// GetDnsName returns the DnsName field value
func (o *ADDomainInfo) GetDnsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value
// and a boolean to check if the value has been set.
func (o *ADDomainInfo) GetDnsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DnsName, true
}

// SetDnsName sets field value
func (o *ADDomainInfo) SetDnsName(v string) {
	o.DnsName = v
}

// GetId returns the Id field value
func (o *ADDomainInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ADDomainInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ADDomainInfo) SetId(v string) {
	o.Id = v
}

// GetNetbiosName returns the NetbiosName field value
func (o *ADDomainInfo) GetNetbiosName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetbiosName
}

// GetNetbiosNameOk returns a tuple with the NetbiosName field value
// and a boolean to check if the value has been set.
func (o *ADDomainInfo) GetNetbiosNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetbiosName, true
}

// SetNetbiosName sets field value
func (o *ADDomainInfo) SetNetbiosName(v string) {
	o.NetbiosName = v
}

func (o ADDomainInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dns_name"] = o.DnsName
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["netbios_name"] = o.NetbiosName
	}
	return json.Marshal(toSerialize)
}

type NullableADDomainInfo struct {
	value *ADDomainInfo
	isSet bool
}

func (v NullableADDomainInfo) Get() *ADDomainInfo {
	return v.value
}

func (v *NullableADDomainInfo) Set(val *ADDomainInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableADDomainInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableADDomainInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADDomainInfo(val *ADDomainInfo) *NullableADDomainInfo {
	return &NullableADDomainInfo{value: val, isSet: true}
}

func (v NullableADDomainInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADDomainInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
