/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the FarmInfoV5 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmInfoV5{}

// FarmInfoV5 Information related to Farm.<br>List API returning this information can use search filter query to filter on specific fields supported by filters.<br>Supported Filters: 'And', 'Or', 'Equals', 'StartsWith', 'Contains' and 'EndsWith'.<br>See the field description to know the filter types it supports.
type FarmInfoV5 struct {
	// Access groups can organize the entities such as farms in the organization. They can also be used for delegated administration.<br>Supported Filters: 'Equals'.
	AccessGroupId *string `json:"access_group_id,omitempty"`
	// Associated app volumes manager id for the Farm.
	AppVolumesManagerGuid *string `json:"app_volumes_manager_guid,omitempty"`
	AutomatedFarmSettings *FarmAutomatedSettingsInfoV3 `json:"automated_farm_settings,omitempty"`
	// Indicates whether the farm is in the process of being deleted.<br>Supported Filters: 'Equals'.
	DeleteInProgress *bool `json:"delete_in_progress,omitempty"`
	// Description of the farm. The maximum length is 1024 characters.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'.
	Description *string `json:"description,omitempty"`
	// ID of RDS desktop pool associated with the farm.<br>Supported Filters: 'Equals'.
	DesktopPoolId *string `json:"desktop_pool_id,omitempty"`
	// Display name of the farm. The maximum length is 256 characters.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'.
	DisplayName *string `json:"display_name,omitempty"`
	DisplayProtocolSettings *FarmDisplayProtocolSettingsInfo `json:"display_protocol_settings,omitempty"`
	// Indicates whether the farm is enabled for brokering.<br>Supported Filters: 'Equals'.
	Enabled *bool `json:"enabled,omitempty"`
	// Unique ID representing farm.<br>Supported Filters: 'Equals'.
	Id *string `json:"id,omitempty"`
	LoadBalancerSettings *RDSHLoadBalancerSettingsInfoV2 `json:"load_balancer_settings,omitempty"`
	// Name of the farm. The maximum length is 64 characters.<br>Supported Filters: 'Equals', 'StartsWith' and 'Contains'.
	Name *string `json:"name,omitempty"`
	// The minimum number of machines that must be fully operational in order to avoid showing the farm in an error state. 
	ServerErrorThreshold *int32 `json:"server_error_threshold,omitempty"`
	SessionSettings *FarmSessionSettingsInfoV2 `json:"session_settings,omitempty"`
	// Type of the farm.<br>Supported Filters: 'Equals'. * AUTOMATED: Automated Farm. * MANUAL: Manual Farm.
	Type *string `json:"type,omitempty"`
	// Indicates whether to use custom scripts for load balancing or not.
	UseCustomScriptForLoadBalancing *bool `json:"use_custom_script_for_load_balancing,omitempty"`
}

// NewFarmInfoV5 instantiates a new FarmInfoV5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmInfoV5() *FarmInfoV5 {
	this := FarmInfoV5{}
	return &this
}

// NewFarmInfoV5WithDefaults instantiates a new FarmInfoV5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmInfoV5WithDefaults() *FarmInfoV5 {
	this := FarmInfoV5{}
	return &this
}

// GetAccessGroupId returns the AccessGroupId field value if set, zero value otherwise.
func (o *FarmInfoV5) GetAccessGroupId() string {
	if o == nil || IsNil(o.AccessGroupId) {
		var ret string
		return ret
	}
	return *o.AccessGroupId
}

// GetAccessGroupIdOk returns a tuple with the AccessGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetAccessGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessGroupId) {
		return nil, false
	}
	return o.AccessGroupId, true
}

// HasAccessGroupId returns a boolean if a field has been set.
func (o *FarmInfoV5) HasAccessGroupId() bool {
	if o != nil && !IsNil(o.AccessGroupId) {
		return true
	}

	return false
}

// SetAccessGroupId gets a reference to the given string and assigns it to the AccessGroupId field.
func (o *FarmInfoV5) SetAccessGroupId(v string) {
	o.AccessGroupId = &v
}

// GetAppVolumesManagerGuid returns the AppVolumesManagerGuid field value if set, zero value otherwise.
func (o *FarmInfoV5) GetAppVolumesManagerGuid() string {
	if o == nil || IsNil(o.AppVolumesManagerGuid) {
		var ret string
		return ret
	}
	return *o.AppVolumesManagerGuid
}

// GetAppVolumesManagerGuidOk returns a tuple with the AppVolumesManagerGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetAppVolumesManagerGuidOk() (*string, bool) {
	if o == nil || IsNil(o.AppVolumesManagerGuid) {
		return nil, false
	}
	return o.AppVolumesManagerGuid, true
}

// HasAppVolumesManagerGuid returns a boolean if a field has been set.
func (o *FarmInfoV5) HasAppVolumesManagerGuid() bool {
	if o != nil && !IsNil(o.AppVolumesManagerGuid) {
		return true
	}

	return false
}

// SetAppVolumesManagerGuid gets a reference to the given string and assigns it to the AppVolumesManagerGuid field.
func (o *FarmInfoV5) SetAppVolumesManagerGuid(v string) {
	o.AppVolumesManagerGuid = &v
}

// GetAutomatedFarmSettings returns the AutomatedFarmSettings field value if set, zero value otherwise.
func (o *FarmInfoV5) GetAutomatedFarmSettings() FarmAutomatedSettingsInfoV3 {
	if o == nil || IsNil(o.AutomatedFarmSettings) {
		var ret FarmAutomatedSettingsInfoV3
		return ret
	}
	return *o.AutomatedFarmSettings
}

// GetAutomatedFarmSettingsOk returns a tuple with the AutomatedFarmSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetAutomatedFarmSettingsOk() (*FarmAutomatedSettingsInfoV3, bool) {
	if o == nil || IsNil(o.AutomatedFarmSettings) {
		return nil, false
	}
	return o.AutomatedFarmSettings, true
}

// HasAutomatedFarmSettings returns a boolean if a field has been set.
func (o *FarmInfoV5) HasAutomatedFarmSettings() bool {
	if o != nil && !IsNil(o.AutomatedFarmSettings) {
		return true
	}

	return false
}

// SetAutomatedFarmSettings gets a reference to the given FarmAutomatedSettingsInfoV3 and assigns it to the AutomatedFarmSettings field.
func (o *FarmInfoV5) SetAutomatedFarmSettings(v FarmAutomatedSettingsInfoV3) {
	o.AutomatedFarmSettings = &v
}

// GetDeleteInProgress returns the DeleteInProgress field value if set, zero value otherwise.
func (o *FarmInfoV5) GetDeleteInProgress() bool {
	if o == nil || IsNil(o.DeleteInProgress) {
		var ret bool
		return ret
	}
	return *o.DeleteInProgress
}

// GetDeleteInProgressOk returns a tuple with the DeleteInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetDeleteInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteInProgress) {
		return nil, false
	}
	return o.DeleteInProgress, true
}

// HasDeleteInProgress returns a boolean if a field has been set.
func (o *FarmInfoV5) HasDeleteInProgress() bool {
	if o != nil && !IsNil(o.DeleteInProgress) {
		return true
	}

	return false
}

// SetDeleteInProgress gets a reference to the given bool and assigns it to the DeleteInProgress field.
func (o *FarmInfoV5) SetDeleteInProgress(v bool) {
	o.DeleteInProgress = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FarmInfoV5) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FarmInfoV5) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FarmInfoV5) SetDescription(v string) {
	o.Description = &v
}

// GetDesktopPoolId returns the DesktopPoolId field value if set, zero value otherwise.
func (o *FarmInfoV5) GetDesktopPoolId() string {
	if o == nil || IsNil(o.DesktopPoolId) {
		var ret string
		return ret
	}
	return *o.DesktopPoolId
}

// GetDesktopPoolIdOk returns a tuple with the DesktopPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetDesktopPoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.DesktopPoolId) {
		return nil, false
	}
	return o.DesktopPoolId, true
}

// HasDesktopPoolId returns a boolean if a field has been set.
func (o *FarmInfoV5) HasDesktopPoolId() bool {
	if o != nil && !IsNil(o.DesktopPoolId) {
		return true
	}

	return false
}

// SetDesktopPoolId gets a reference to the given string and assigns it to the DesktopPoolId field.
func (o *FarmInfoV5) SetDesktopPoolId(v string) {
	o.DesktopPoolId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *FarmInfoV5) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *FarmInfoV5) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *FarmInfoV5) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayProtocolSettings returns the DisplayProtocolSettings field value if set, zero value otherwise.
func (o *FarmInfoV5) GetDisplayProtocolSettings() FarmDisplayProtocolSettingsInfo {
	if o == nil || IsNil(o.DisplayProtocolSettings) {
		var ret FarmDisplayProtocolSettingsInfo
		return ret
	}
	return *o.DisplayProtocolSettings
}

// GetDisplayProtocolSettingsOk returns a tuple with the DisplayProtocolSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetDisplayProtocolSettingsOk() (*FarmDisplayProtocolSettingsInfo, bool) {
	if o == nil || IsNil(o.DisplayProtocolSettings) {
		return nil, false
	}
	return o.DisplayProtocolSettings, true
}

// HasDisplayProtocolSettings returns a boolean if a field has been set.
func (o *FarmInfoV5) HasDisplayProtocolSettings() bool {
	if o != nil && !IsNil(o.DisplayProtocolSettings) {
		return true
	}

	return false
}

// SetDisplayProtocolSettings gets a reference to the given FarmDisplayProtocolSettingsInfo and assigns it to the DisplayProtocolSettings field.
func (o *FarmInfoV5) SetDisplayProtocolSettings(v FarmDisplayProtocolSettingsInfo) {
	o.DisplayProtocolSettings = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *FarmInfoV5) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *FarmInfoV5) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *FarmInfoV5) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FarmInfoV5) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FarmInfoV5) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FarmInfoV5) SetId(v string) {
	o.Id = &v
}

// GetLoadBalancerSettings returns the LoadBalancerSettings field value if set, zero value otherwise.
func (o *FarmInfoV5) GetLoadBalancerSettings() RDSHLoadBalancerSettingsInfoV2 {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		var ret RDSHLoadBalancerSettingsInfoV2
		return ret
	}
	return *o.LoadBalancerSettings
}

// GetLoadBalancerSettingsOk returns a tuple with the LoadBalancerSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetLoadBalancerSettingsOk() (*RDSHLoadBalancerSettingsInfoV2, bool) {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		return nil, false
	}
	return o.LoadBalancerSettings, true
}

// HasLoadBalancerSettings returns a boolean if a field has been set.
func (o *FarmInfoV5) HasLoadBalancerSettings() bool {
	if o != nil && !IsNil(o.LoadBalancerSettings) {
		return true
	}

	return false
}

// SetLoadBalancerSettings gets a reference to the given RDSHLoadBalancerSettingsInfoV2 and assigns it to the LoadBalancerSettings field.
func (o *FarmInfoV5) SetLoadBalancerSettings(v RDSHLoadBalancerSettingsInfoV2) {
	o.LoadBalancerSettings = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FarmInfoV5) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FarmInfoV5) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FarmInfoV5) SetName(v string) {
	o.Name = &v
}

// GetServerErrorThreshold returns the ServerErrorThreshold field value if set, zero value otherwise.
func (o *FarmInfoV5) GetServerErrorThreshold() int32 {
	if o == nil || IsNil(o.ServerErrorThreshold) {
		var ret int32
		return ret
	}
	return *o.ServerErrorThreshold
}

// GetServerErrorThresholdOk returns a tuple with the ServerErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetServerErrorThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerErrorThreshold) {
		return nil, false
	}
	return o.ServerErrorThreshold, true
}

// HasServerErrorThreshold returns a boolean if a field has been set.
func (o *FarmInfoV5) HasServerErrorThreshold() bool {
	if o != nil && !IsNil(o.ServerErrorThreshold) {
		return true
	}

	return false
}

// SetServerErrorThreshold gets a reference to the given int32 and assigns it to the ServerErrorThreshold field.
func (o *FarmInfoV5) SetServerErrorThreshold(v int32) {
	o.ServerErrorThreshold = &v
}

// GetSessionSettings returns the SessionSettings field value if set, zero value otherwise.
func (o *FarmInfoV5) GetSessionSettings() FarmSessionSettingsInfoV2 {
	if o == nil || IsNil(o.SessionSettings) {
		var ret FarmSessionSettingsInfoV2
		return ret
	}
	return *o.SessionSettings
}

// GetSessionSettingsOk returns a tuple with the SessionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetSessionSettingsOk() (*FarmSessionSettingsInfoV2, bool) {
	if o == nil || IsNil(o.SessionSettings) {
		return nil, false
	}
	return o.SessionSettings, true
}

// HasSessionSettings returns a boolean if a field has been set.
func (o *FarmInfoV5) HasSessionSettings() bool {
	if o != nil && !IsNil(o.SessionSettings) {
		return true
	}

	return false
}

// SetSessionSettings gets a reference to the given FarmSessionSettingsInfoV2 and assigns it to the SessionSettings field.
func (o *FarmInfoV5) SetSessionSettings(v FarmSessionSettingsInfoV2) {
	o.SessionSettings = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FarmInfoV5) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FarmInfoV5) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FarmInfoV5) SetType(v string) {
	o.Type = &v
}

// GetUseCustomScriptForLoadBalancing returns the UseCustomScriptForLoadBalancing field value if set, zero value otherwise.
func (o *FarmInfoV5) GetUseCustomScriptForLoadBalancing() bool {
	if o == nil || IsNil(o.UseCustomScriptForLoadBalancing) {
		var ret bool
		return ret
	}
	return *o.UseCustomScriptForLoadBalancing
}

// GetUseCustomScriptForLoadBalancingOk returns a tuple with the UseCustomScriptForLoadBalancing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmInfoV5) GetUseCustomScriptForLoadBalancingOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCustomScriptForLoadBalancing) {
		return nil, false
	}
	return o.UseCustomScriptForLoadBalancing, true
}

// HasUseCustomScriptForLoadBalancing returns a boolean if a field has been set.
func (o *FarmInfoV5) HasUseCustomScriptForLoadBalancing() bool {
	if o != nil && !IsNil(o.UseCustomScriptForLoadBalancing) {
		return true
	}

	return false
}

// SetUseCustomScriptForLoadBalancing gets a reference to the given bool and assigns it to the UseCustomScriptForLoadBalancing field.
func (o *FarmInfoV5) SetUseCustomScriptForLoadBalancing(v bool) {
	o.UseCustomScriptForLoadBalancing = &v
}

func (o FarmInfoV5) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmInfoV5) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessGroupId) {
		toSerialize["access_group_id"] = o.AccessGroupId
	}
	if !IsNil(o.AppVolumesManagerGuid) {
		toSerialize["app_volumes_manager_guid"] = o.AppVolumesManagerGuid
	}
	if !IsNil(o.AutomatedFarmSettings) {
		toSerialize["automated_farm_settings"] = o.AutomatedFarmSettings
	}
	if !IsNil(o.DeleteInProgress) {
		toSerialize["delete_in_progress"] = o.DeleteInProgress
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DesktopPoolId) {
		toSerialize["desktop_pool_id"] = o.DesktopPoolId
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.DisplayProtocolSettings) {
		toSerialize["display_protocol_settings"] = o.DisplayProtocolSettings
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LoadBalancerSettings) {
		toSerialize["load_balancer_settings"] = o.LoadBalancerSettings
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ServerErrorThreshold) {
		toSerialize["server_error_threshold"] = o.ServerErrorThreshold
	}
	if !IsNil(o.SessionSettings) {
		toSerialize["session_settings"] = o.SessionSettings
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UseCustomScriptForLoadBalancing) {
		toSerialize["use_custom_script_for_load_balancing"] = o.UseCustomScriptForLoadBalancing
	}
	return toSerialize, nil
}

type NullableFarmInfoV5 struct {
	value *FarmInfoV5
	isSet bool
}

func (v NullableFarmInfoV5) Get() *FarmInfoV5 {
	return v.value
}

func (v *NullableFarmInfoV5) Set(val *FarmInfoV5) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmInfoV5) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmInfoV5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmInfoV5(val *FarmInfoV5) *NullableFarmInfoV5 {
	return &NullableFarmInfoV5{value: val, isSet: true}
}

func (v NullableFarmInfoV5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmInfoV5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


