/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ADDomainAdvancedSettingsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADDomainAdvancedSettingsInfo{}

// ADDomainAdvancedSettingsInfo Information related to untrusted Domain advance settings.
type ADDomainAdvancedSettingsInfo struct {
	// Auto discovers domain controllers. Auto discovery, AD domain controllers and preferred site name are mutually exclusive. Only one of them can be defined at a time. Default value is true.
	AdDomainAutoDiscovery *bool `json:"ad_domain_auto_discovery,omitempty"`
	// Active directory domain Context.
	AdDomainContext *string `json:"ad_domain_context,omitempty"`
	// One or more AD domain controllers. Auto discovery, AD domain controllers and preferred site name are mutually exclusive.  Only one of them can be defined at a time.
	AdDomainControllers []string `json:"ad_domain_controllers,omitempty"`
	// ADDomain preferred domain site. Auto discovery, AD domain controllers and preferred site name are mutually exclusive. Only one of them can be defined at a time.
	AdDomainPreferredSite *string `json:"ad_domain_preferred_site,omitempty"`
	// Port of the server to connect to.
	Port *int32 `json:"port,omitempty"`
}

// NewADDomainAdvancedSettingsInfo instantiates a new ADDomainAdvancedSettingsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADDomainAdvancedSettingsInfo() *ADDomainAdvancedSettingsInfo {
	this := ADDomainAdvancedSettingsInfo{}
	return &this
}

// NewADDomainAdvancedSettingsInfoWithDefaults instantiates a new ADDomainAdvancedSettingsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADDomainAdvancedSettingsInfoWithDefaults() *ADDomainAdvancedSettingsInfo {
	this := ADDomainAdvancedSettingsInfo{}
	return &this
}

// GetAdDomainAutoDiscovery returns the AdDomainAutoDiscovery field value if set, zero value otherwise.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainAutoDiscovery() bool {
	if o == nil || IsNil(o.AdDomainAutoDiscovery) {
		var ret bool
		return ret
	}
	return *o.AdDomainAutoDiscovery
}

// GetAdDomainAutoDiscoveryOk returns a tuple with the AdDomainAutoDiscovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainAutoDiscoveryOk() (*bool, bool) {
	if o == nil || IsNil(o.AdDomainAutoDiscovery) {
		return nil, false
	}
	return o.AdDomainAutoDiscovery, true
}

// HasAdDomainAutoDiscovery returns a boolean if a field has been set.
func (o *ADDomainAdvancedSettingsInfo) HasAdDomainAutoDiscovery() bool {
	if o != nil && !IsNil(o.AdDomainAutoDiscovery) {
		return true
	}

	return false
}

// SetAdDomainAutoDiscovery gets a reference to the given bool and assigns it to the AdDomainAutoDiscovery field.
func (o *ADDomainAdvancedSettingsInfo) SetAdDomainAutoDiscovery(v bool) {
	o.AdDomainAutoDiscovery = &v
}

// GetAdDomainContext returns the AdDomainContext field value if set, zero value otherwise.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainContext() string {
	if o == nil || IsNil(o.AdDomainContext) {
		var ret string
		return ret
	}
	return *o.AdDomainContext
}

// GetAdDomainContextOk returns a tuple with the AdDomainContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainContextOk() (*string, bool) {
	if o == nil || IsNil(o.AdDomainContext) {
		return nil, false
	}
	return o.AdDomainContext, true
}

// HasAdDomainContext returns a boolean if a field has been set.
func (o *ADDomainAdvancedSettingsInfo) HasAdDomainContext() bool {
	if o != nil && !IsNil(o.AdDomainContext) {
		return true
	}

	return false
}

// SetAdDomainContext gets a reference to the given string and assigns it to the AdDomainContext field.
func (o *ADDomainAdvancedSettingsInfo) SetAdDomainContext(v string) {
	o.AdDomainContext = &v
}

// GetAdDomainControllers returns the AdDomainControllers field value if set, zero value otherwise.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainControllers() []string {
	if o == nil || IsNil(o.AdDomainControllers) {
		var ret []string
		return ret
	}
	return o.AdDomainControllers
}

// GetAdDomainControllersOk returns a tuple with the AdDomainControllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainControllersOk() ([]string, bool) {
	if o == nil || IsNil(o.AdDomainControllers) {
		return nil, false
	}
	return o.AdDomainControllers, true
}

// HasAdDomainControllers returns a boolean if a field has been set.
func (o *ADDomainAdvancedSettingsInfo) HasAdDomainControllers() bool {
	if o != nil && !IsNil(o.AdDomainControllers) {
		return true
	}

	return false
}

// SetAdDomainControllers gets a reference to the given []string and assigns it to the AdDomainControllers field.
func (o *ADDomainAdvancedSettingsInfo) SetAdDomainControllers(v []string) {
	o.AdDomainControllers = v
}

// GetAdDomainPreferredSite returns the AdDomainPreferredSite field value if set, zero value otherwise.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainPreferredSite() string {
	if o == nil || IsNil(o.AdDomainPreferredSite) {
		var ret string
		return ret
	}
	return *o.AdDomainPreferredSite
}

// GetAdDomainPreferredSiteOk returns a tuple with the AdDomainPreferredSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainAdvancedSettingsInfo) GetAdDomainPreferredSiteOk() (*string, bool) {
	if o == nil || IsNil(o.AdDomainPreferredSite) {
		return nil, false
	}
	return o.AdDomainPreferredSite, true
}

// HasAdDomainPreferredSite returns a boolean if a field has been set.
func (o *ADDomainAdvancedSettingsInfo) HasAdDomainPreferredSite() bool {
	if o != nil && !IsNil(o.AdDomainPreferredSite) {
		return true
	}

	return false
}

// SetAdDomainPreferredSite gets a reference to the given string and assigns it to the AdDomainPreferredSite field.
func (o *ADDomainAdvancedSettingsInfo) SetAdDomainPreferredSite(v string) {
	o.AdDomainPreferredSite = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ADDomainAdvancedSettingsInfo) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainAdvancedSettingsInfo) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ADDomainAdvancedSettingsInfo) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ADDomainAdvancedSettingsInfo) SetPort(v int32) {
	o.Port = &v
}

func (o ADDomainAdvancedSettingsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADDomainAdvancedSettingsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdDomainAutoDiscovery) {
		toSerialize["ad_domain_auto_discovery"] = o.AdDomainAutoDiscovery
	}
	if !IsNil(o.AdDomainContext) {
		toSerialize["ad_domain_context"] = o.AdDomainContext
	}
	if !IsNil(o.AdDomainControllers) {
		toSerialize["ad_domain_controllers"] = o.AdDomainControllers
	}
	if !IsNil(o.AdDomainPreferredSite) {
		toSerialize["ad_domain_preferred_site"] = o.AdDomainPreferredSite
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

type NullableADDomainAdvancedSettingsInfo struct {
	value *ADDomainAdvancedSettingsInfo
	isSet bool
}

func (v NullableADDomainAdvancedSettingsInfo) Get() *ADDomainAdvancedSettingsInfo {
	return v.value
}

func (v *NullableADDomainAdvancedSettingsInfo) Set(val *ADDomainAdvancedSettingsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableADDomainAdvancedSettingsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableADDomainAdvancedSettingsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADDomainAdvancedSettingsInfo(val *ADDomainAdvancedSettingsInfo) *NullableADDomainAdvancedSettingsInfo {
	return &NullableADDomainAdvancedSettingsInfo{value: val, isSet: true}
}

func (v NullableADDomainAdvancedSettingsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADDomainAdvancedSettingsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


