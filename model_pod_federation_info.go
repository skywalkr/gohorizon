/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the PodFederationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodFederationInfo{}

// PodFederationInfo Information related to Pod Federation.
type PodFederationInfo struct {
	// Individual connection server CPA status for this pod.
	ConnectionServerStatuses []ConnectionServerStatus `json:"connection_server_statuses,omitempty"`
	// GUID representing the pod federation.
	Guid *string `json:"guid,omitempty"`
	// CPA status of the current connection server in the pod. * ENABLED: CPA is enabled. * DISABLED: CPA is disabled. * PENDING: CPA is undergoing an operation related to initialization, uninitialization, joining, or unjoining. * ENABLE_ERROR: The connection server has failed to reach the ENABLED status in a timely manner. This may also indicate the current connection server was recently installed. * DISABLE_ERROR: The connection server has failed to reach the DISABLED status in a timely manner.
	LocalConnectionServerStatus *string `json:"local_connection_server_status,omitempty"`
	// Name of the pod federation.
	Name *string `json:"name,omitempty"`
	// Member sites in the pod federation.
	Sites []string `json:"sites,omitempty"`
}

// NewPodFederationInfo instantiates a new PodFederationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodFederationInfo() *PodFederationInfo {
	this := PodFederationInfo{}
	return &this
}

// NewPodFederationInfoWithDefaults instantiates a new PodFederationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodFederationInfoWithDefaults() *PodFederationInfo {
	this := PodFederationInfo{}
	return &this
}

// GetConnectionServerStatuses returns the ConnectionServerStatuses field value if set, zero value otherwise.
func (o *PodFederationInfo) GetConnectionServerStatuses() []ConnectionServerStatus {
	if o == nil || IsNil(o.ConnectionServerStatuses) {
		var ret []ConnectionServerStatus
		return ret
	}
	return o.ConnectionServerStatuses
}

// GetConnectionServerStatusesOk returns a tuple with the ConnectionServerStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodFederationInfo) GetConnectionServerStatusesOk() ([]ConnectionServerStatus, bool) {
	if o == nil || IsNil(o.ConnectionServerStatuses) {
		return nil, false
	}
	return o.ConnectionServerStatuses, true
}

// HasConnectionServerStatuses returns a boolean if a field has been set.
func (o *PodFederationInfo) HasConnectionServerStatuses() bool {
	if o != nil && !IsNil(o.ConnectionServerStatuses) {
		return true
	}

	return false
}

// SetConnectionServerStatuses gets a reference to the given []ConnectionServerStatus and assigns it to the ConnectionServerStatuses field.
func (o *PodFederationInfo) SetConnectionServerStatuses(v []ConnectionServerStatus) {
	o.ConnectionServerStatuses = v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *PodFederationInfo) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodFederationInfo) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *PodFederationInfo) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *PodFederationInfo) SetGuid(v string) {
	o.Guid = &v
}

// GetLocalConnectionServerStatus returns the LocalConnectionServerStatus field value if set, zero value otherwise.
func (o *PodFederationInfo) GetLocalConnectionServerStatus() string {
	if o == nil || IsNil(o.LocalConnectionServerStatus) {
		var ret string
		return ret
	}
	return *o.LocalConnectionServerStatus
}

// GetLocalConnectionServerStatusOk returns a tuple with the LocalConnectionServerStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodFederationInfo) GetLocalConnectionServerStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LocalConnectionServerStatus) {
		return nil, false
	}
	return o.LocalConnectionServerStatus, true
}

// HasLocalConnectionServerStatus returns a boolean if a field has been set.
func (o *PodFederationInfo) HasLocalConnectionServerStatus() bool {
	if o != nil && !IsNil(o.LocalConnectionServerStatus) {
		return true
	}

	return false
}

// SetLocalConnectionServerStatus gets a reference to the given string and assigns it to the LocalConnectionServerStatus field.
func (o *PodFederationInfo) SetLocalConnectionServerStatus(v string) {
	o.LocalConnectionServerStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PodFederationInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodFederationInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PodFederationInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PodFederationInfo) SetName(v string) {
	o.Name = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *PodFederationInfo) GetSites() []string {
	if o == nil || IsNil(o.Sites) {
		var ret []string
		return ret
	}
	return o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodFederationInfo) GetSitesOk() ([]string, bool) {
	if o == nil || IsNil(o.Sites) {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *PodFederationInfo) HasSites() bool {
	if o != nil && !IsNil(o.Sites) {
		return true
	}

	return false
}

// SetSites gets a reference to the given []string and assigns it to the Sites field.
func (o *PodFederationInfo) SetSites(v []string) {
	o.Sites = v
}

func (o PodFederationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodFederationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionServerStatuses) {
		toSerialize["connection_server_statuses"] = o.ConnectionServerStatuses
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.LocalConnectionServerStatus) {
		toSerialize["local_connection_server_status"] = o.LocalConnectionServerStatus
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Sites) {
		toSerialize["sites"] = o.Sites
	}
	return toSerialize, nil
}

type NullablePodFederationInfo struct {
	value *PodFederationInfo
	isSet bool
}

func (v NullablePodFederationInfo) Get() *PodFederationInfo {
	return v.value
}

func (v *NullablePodFederationInfo) Set(val *PodFederationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePodFederationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePodFederationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodFederationInfo(val *PodFederationInfo) *NullablePodFederationInfo {
	return &NullablePodFederationInfo{value: val, isSet: true}
}

func (v NullablePodFederationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodFederationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


