/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the SmartCardAuthTokens type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmartCardAuthTokens{}

// SmartCardAuthTokens Smart card authentication tokens.
type SmartCardAuthTokens struct {
	// Access Token to be used in API calls.
	AccessToken *string `json:"access_token,omitempty"`
	// Domain
	Domain *string `json:"domain,omitempty"`
	// Refresh Token to be used to get a new Access token.
	RefreshToken *string `json:"refresh_token,omitempty"`
	// User Name
	UserName *string `json:"user_name,omitempty"`
}

// NewSmartCardAuthTokens instantiates a new SmartCardAuthTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartCardAuthTokens() *SmartCardAuthTokens {
	this := SmartCardAuthTokens{}
	return &this
}

// NewSmartCardAuthTokensWithDefaults instantiates a new SmartCardAuthTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartCardAuthTokensWithDefaults() *SmartCardAuthTokens {
	this := SmartCardAuthTokens{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *SmartCardAuthTokens) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartCardAuthTokens) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *SmartCardAuthTokens) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *SmartCardAuthTokens) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *SmartCardAuthTokens) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartCardAuthTokens) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *SmartCardAuthTokens) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *SmartCardAuthTokens) SetDomain(v string) {
	o.Domain = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *SmartCardAuthTokens) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartCardAuthTokens) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *SmartCardAuthTokens) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *SmartCardAuthTokens) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *SmartCardAuthTokens) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartCardAuthTokens) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *SmartCardAuthTokens) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *SmartCardAuthTokens) SetUserName(v string) {
	o.UserName = &v
}

func (o SmartCardAuthTokens) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmartCardAuthTokens) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableSmartCardAuthTokens struct {
	value *SmartCardAuthTokens
	isSet bool
}

func (v NullableSmartCardAuthTokens) Get() *SmartCardAuthTokens {
	return v.value
}

func (v *NullableSmartCardAuthTokens) Set(val *SmartCardAuthTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartCardAuthTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartCardAuthTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartCardAuthTokens(val *SmartCardAuthTokens) *NullableSmartCardAuthTokens {
	return &NullableSmartCardAuthTokens{value: val, isSet: true}
}

func (v NullableSmartCardAuthTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartCardAuthTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


