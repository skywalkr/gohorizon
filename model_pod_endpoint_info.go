/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// PodEndpointInfo Information related to pod endpoint.
type PodEndpointInfo struct {
	// Indicates whether an endpoint is enabled. A disabled endpoint is excluded from participating in inter-pod communication.
	Enabled *bool `json:"enabled,omitempty"`
	// Unique ID representing this pod endpoint.
	Id *string `json:"id,omitempty"`
	// Name of the pod endpoint.
	Name *string `json:"name,omitempty"`
	// The URL for the pod endpoint. This address and port is used for inter-pod communication.
	ServerAddress *string `json:"server_address,omitempty"`
}

// NewPodEndpointInfo instantiates a new PodEndpointInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodEndpointInfo() *PodEndpointInfo {
	this := PodEndpointInfo{}
	return &this
}

// NewPodEndpointInfoWithDefaults instantiates a new PodEndpointInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodEndpointInfoWithDefaults() *PodEndpointInfo {
	this := PodEndpointInfo{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PodEndpointInfo) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodEndpointInfo) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PodEndpointInfo) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PodEndpointInfo) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PodEndpointInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodEndpointInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PodEndpointInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PodEndpointInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PodEndpointInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodEndpointInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PodEndpointInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PodEndpointInfo) SetName(v string) {
	o.Name = &v
}

// GetServerAddress returns the ServerAddress field value if set, zero value otherwise.
func (o *PodEndpointInfo) GetServerAddress() string {
	if o == nil || o.ServerAddress == nil {
		var ret string
		return ret
	}
	return *o.ServerAddress
}

// GetServerAddressOk returns a tuple with the ServerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodEndpointInfo) GetServerAddressOk() (*string, bool) {
	if o == nil || o.ServerAddress == nil {
		return nil, false
	}
	return o.ServerAddress, true
}

// HasServerAddress returns a boolean if a field has been set.
func (o *PodEndpointInfo) HasServerAddress() bool {
	if o != nil && o.ServerAddress != nil {
		return true
	}

	return false
}

// SetServerAddress gets a reference to the given string and assigns it to the ServerAddress field.
func (o *PodEndpointInfo) SetServerAddress(v string) {
	o.ServerAddress = &v
}

func (o PodEndpointInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ServerAddress != nil {
		toSerialize["server_address"] = o.ServerAddress
	}
	return json.Marshal(toSerialize)
}

type NullablePodEndpointInfo struct {
	value *PodEndpointInfo
	isSet bool
}

func (v NullablePodEndpointInfo) Get() *PodEndpointInfo {
	return v.value
}

func (v *NullablePodEndpointInfo) Set(val *PodEndpointInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePodEndpointInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePodEndpointInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodEndpointInfo(val *PodEndpointInfo) *NullablePodEndpointInfo {
	return &NullablePodEndpointInfo{value: val, isSet: true}
}

func (v NullablePodEndpointInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodEndpointInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
