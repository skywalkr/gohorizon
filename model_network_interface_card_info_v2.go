/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the NetworkInterfaceCardInfoV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkInterfaceCardInfoV2{}

// NetworkInterfaceCardInfoV2 Information related to network interface card.
type NetworkInterfaceCardInfoV2 struct {
	// Unique ID representing the network interface card.
	Id *string `json:"id,omitempty"`
	// Network interface card MAC address.
	MacAddress *string `json:"mac_address,omitempty"`
	// Network interface card name.
	Name *string `json:"name,omitempty"`
	// Type of network interface card. * NETWORK: Standard network. * OPAQUE_NETWORK: Opaque network. * DISTRUBUTED_VIRTUAL_PORT_GROUP: DVS Port group.
	NetworkType *string `json:"network_type,omitempty"`
}

// NewNetworkInterfaceCardInfoV2 instantiates a new NetworkInterfaceCardInfoV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterfaceCardInfoV2() *NetworkInterfaceCardInfoV2 {
	this := NetworkInterfaceCardInfoV2{}
	return &this
}

// NewNetworkInterfaceCardInfoV2WithDefaults instantiates a new NetworkInterfaceCardInfoV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceCardInfoV2WithDefaults() *NetworkInterfaceCardInfoV2 {
	this := NetworkInterfaceCardInfoV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkInterfaceCardInfoV2) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceCardInfoV2) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkInterfaceCardInfoV2) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NetworkInterfaceCardInfoV2) SetId(v string) {
	o.Id = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *NetworkInterfaceCardInfoV2) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceCardInfoV2) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *NetworkInterfaceCardInfoV2) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *NetworkInterfaceCardInfoV2) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkInterfaceCardInfoV2) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceCardInfoV2) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkInterfaceCardInfoV2) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkInterfaceCardInfoV2) SetName(v string) {
	o.Name = &v
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *NetworkInterfaceCardInfoV2) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceCardInfoV2) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *NetworkInterfaceCardInfoV2) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *NetworkInterfaceCardInfoV2) SetNetworkType(v string) {
	o.NetworkType = &v
}

func (o NetworkInterfaceCardInfoV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkInterfaceCardInfoV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkType) {
		toSerialize["network_type"] = o.NetworkType
	}
	return toSerialize, nil
}

type NullableNetworkInterfaceCardInfoV2 struct {
	value *NetworkInterfaceCardInfoV2
	isSet bool
}

func (v NullableNetworkInterfaceCardInfoV2) Get() *NetworkInterfaceCardInfoV2 {
	return v.value
}

func (v *NullableNetworkInterfaceCardInfoV2) Set(val *NetworkInterfaceCardInfoV2) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterfaceCardInfoV2) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterfaceCardInfoV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterfaceCardInfoV2(val *NetworkInterfaceCardInfoV2) *NullableNetworkInterfaceCardInfoV2 {
	return &NullableNetworkInterfaceCardInfoV2{value: val, isSet: true}
}

func (v NullableNetworkInterfaceCardInfoV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterfaceCardInfoV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


