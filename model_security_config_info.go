/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the SecurityConfigInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityConfigInfo{}

// SecurityConfigInfo Security configuration of connection server and secure gateway.
type SecurityConfigInfo struct {
	CertificateProperties *CertificateProperties `json:"certificate_properties,omitempty"`
	ConnectionServerSecurityConfig *SecurityConfiguration `json:"connection_server_security_config,omitempty"`
	SecureGatewaySecurityConfig *SecurityConfiguration `json:"secure_gateway_security_config,omitempty"`
}

// NewSecurityConfigInfo instantiates a new SecurityConfigInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityConfigInfo() *SecurityConfigInfo {
	this := SecurityConfigInfo{}
	return &this
}

// NewSecurityConfigInfoWithDefaults instantiates a new SecurityConfigInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityConfigInfoWithDefaults() *SecurityConfigInfo {
	this := SecurityConfigInfo{}
	return &this
}

// GetCertificateProperties returns the CertificateProperties field value if set, zero value otherwise.
func (o *SecurityConfigInfo) GetCertificateProperties() CertificateProperties {
	if o == nil || IsNil(o.CertificateProperties) {
		var ret CertificateProperties
		return ret
	}
	return *o.CertificateProperties
}

// GetCertificatePropertiesOk returns a tuple with the CertificateProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityConfigInfo) GetCertificatePropertiesOk() (*CertificateProperties, bool) {
	if o == nil || IsNil(o.CertificateProperties) {
		return nil, false
	}
	return o.CertificateProperties, true
}

// HasCertificateProperties returns a boolean if a field has been set.
func (o *SecurityConfigInfo) HasCertificateProperties() bool {
	if o != nil && !IsNil(o.CertificateProperties) {
		return true
	}

	return false
}

// SetCertificateProperties gets a reference to the given CertificateProperties and assigns it to the CertificateProperties field.
func (o *SecurityConfigInfo) SetCertificateProperties(v CertificateProperties) {
	o.CertificateProperties = &v
}

// GetConnectionServerSecurityConfig returns the ConnectionServerSecurityConfig field value if set, zero value otherwise.
func (o *SecurityConfigInfo) GetConnectionServerSecurityConfig() SecurityConfiguration {
	if o == nil || IsNil(o.ConnectionServerSecurityConfig) {
		var ret SecurityConfiguration
		return ret
	}
	return *o.ConnectionServerSecurityConfig
}

// GetConnectionServerSecurityConfigOk returns a tuple with the ConnectionServerSecurityConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityConfigInfo) GetConnectionServerSecurityConfigOk() (*SecurityConfiguration, bool) {
	if o == nil || IsNil(o.ConnectionServerSecurityConfig) {
		return nil, false
	}
	return o.ConnectionServerSecurityConfig, true
}

// HasConnectionServerSecurityConfig returns a boolean if a field has been set.
func (o *SecurityConfigInfo) HasConnectionServerSecurityConfig() bool {
	if o != nil && !IsNil(o.ConnectionServerSecurityConfig) {
		return true
	}

	return false
}

// SetConnectionServerSecurityConfig gets a reference to the given SecurityConfiguration and assigns it to the ConnectionServerSecurityConfig field.
func (o *SecurityConfigInfo) SetConnectionServerSecurityConfig(v SecurityConfiguration) {
	o.ConnectionServerSecurityConfig = &v
}

// GetSecureGatewaySecurityConfig returns the SecureGatewaySecurityConfig field value if set, zero value otherwise.
func (o *SecurityConfigInfo) GetSecureGatewaySecurityConfig() SecurityConfiguration {
	if o == nil || IsNil(o.SecureGatewaySecurityConfig) {
		var ret SecurityConfiguration
		return ret
	}
	return *o.SecureGatewaySecurityConfig
}

// GetSecureGatewaySecurityConfigOk returns a tuple with the SecureGatewaySecurityConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityConfigInfo) GetSecureGatewaySecurityConfigOk() (*SecurityConfiguration, bool) {
	if o == nil || IsNil(o.SecureGatewaySecurityConfig) {
		return nil, false
	}
	return o.SecureGatewaySecurityConfig, true
}

// HasSecureGatewaySecurityConfig returns a boolean if a field has been set.
func (o *SecurityConfigInfo) HasSecureGatewaySecurityConfig() bool {
	if o != nil && !IsNil(o.SecureGatewaySecurityConfig) {
		return true
	}

	return false
}

// SetSecureGatewaySecurityConfig gets a reference to the given SecurityConfiguration and assigns it to the SecureGatewaySecurityConfig field.
func (o *SecurityConfigInfo) SetSecureGatewaySecurityConfig(v SecurityConfiguration) {
	o.SecureGatewaySecurityConfig = &v
}

func (o SecurityConfigInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityConfigInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificateProperties) {
		toSerialize["certificate_properties"] = o.CertificateProperties
	}
	if !IsNil(o.ConnectionServerSecurityConfig) {
		toSerialize["connection_server_security_config"] = o.ConnectionServerSecurityConfig
	}
	if !IsNil(o.SecureGatewaySecurityConfig) {
		toSerialize["secure_gateway_security_config"] = o.SecureGatewaySecurityConfig
	}
	return toSerialize, nil
}

type NullableSecurityConfigInfo struct {
	value *SecurityConfigInfo
	isSet bool
}

func (v NullableSecurityConfigInfo) Get() *SecurityConfigInfo {
	return v.value
}

func (v *NullableSecurityConfigInfo) Set(val *SecurityConfigInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityConfigInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityConfigInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityConfigInfo(val *SecurityConfigInfo) *NullableSecurityConfigInfo {
	return &NullableSecurityConfigInfo{value: val, isSet: true}
}

func (v NullableSecurityConfigInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityConfigInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


