/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the GatewayMonitorInfoV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayMonitorInfoV3{}

// GatewayMonitorInfoV3 Monitoring information related to Gateways registered in the environment.
type GatewayMonitorInfoV3 struct {
	// Number of active connections for the gateway. Includes PCoIP and BLAST connection counts.
	ActiveConnectionCount *int32 `json:"active_connection_count,omitempty"`
	// Number of BLAST connections for the gateway.
	BlastConnectionCount *int32 `json:"blast_connection_count,omitempty"`
	Details *GatewayMonitorDetails `json:"details,omitempty"`
	// Unique ID of the Gateway.
	Id *string `json:"id,omitempty"`
	// The timestamp in milliseconds when the last update was obtained. Measured as epoch time.
	LastUpdatedTimestamp *int64 `json:"last_updated_timestamp,omitempty"`
	// Gateway name.
	Name *string `json:"name,omitempty"`
	// Number of PCoIP connections for the gateway.
	PcoipConnectionCount *int32 `json:"pcoip_connection_count,omitempty"`
	// Status of the Gateway. * NOT_CONTACTED: There has been no contact from the gateway. * PROBLEM: The gateway has reported a problem. * STALE: Gateway is stale. Gateway will be marked as stale when Connection Server does not receive any request from the Gateway in last two successive intervals. * OK: The Gateway is working as expected.
	Status *string `json:"status,omitempty"`
	// Number of unrecognized PCoIP Secure Gateway requests.
	UnrecognizedPcoipRequestsCount *int32 `json:"unrecognized_pcoip_requests_count,omitempty"`
	// Number of unrecognized Tunnel requests.
	UnrecognizedTunnelRequestsCount *int32 `json:"unrecognized_tunnel_requests_count,omitempty"`
	// Number of unrecognized XML API requests.
	UnrecognizedXmlapiRequestsCount *int32 `json:"unrecognized_xmlapi_requests_count,omitempty"`
}

// NewGatewayMonitorInfoV3 instantiates a new GatewayMonitorInfoV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayMonitorInfoV3() *GatewayMonitorInfoV3 {
	this := GatewayMonitorInfoV3{}
	return &this
}

// NewGatewayMonitorInfoV3WithDefaults instantiates a new GatewayMonitorInfoV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayMonitorInfoV3WithDefaults() *GatewayMonitorInfoV3 {
	this := GatewayMonitorInfoV3{}
	return &this
}

// GetActiveConnectionCount returns the ActiveConnectionCount field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetActiveConnectionCount() int32 {
	if o == nil || IsNil(o.ActiveConnectionCount) {
		var ret int32
		return ret
	}
	return *o.ActiveConnectionCount
}

// GetActiveConnectionCountOk returns a tuple with the ActiveConnectionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetActiveConnectionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveConnectionCount) {
		return nil, false
	}
	return o.ActiveConnectionCount, true
}

// HasActiveConnectionCount returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasActiveConnectionCount() bool {
	if o != nil && !IsNil(o.ActiveConnectionCount) {
		return true
	}

	return false
}

// SetActiveConnectionCount gets a reference to the given int32 and assigns it to the ActiveConnectionCount field.
func (o *GatewayMonitorInfoV3) SetActiveConnectionCount(v int32) {
	o.ActiveConnectionCount = &v
}

// GetBlastConnectionCount returns the BlastConnectionCount field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetBlastConnectionCount() int32 {
	if o == nil || IsNil(o.BlastConnectionCount) {
		var ret int32
		return ret
	}
	return *o.BlastConnectionCount
}

// GetBlastConnectionCountOk returns a tuple with the BlastConnectionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetBlastConnectionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.BlastConnectionCount) {
		return nil, false
	}
	return o.BlastConnectionCount, true
}

// HasBlastConnectionCount returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasBlastConnectionCount() bool {
	if o != nil && !IsNil(o.BlastConnectionCount) {
		return true
	}

	return false
}

// SetBlastConnectionCount gets a reference to the given int32 and assigns it to the BlastConnectionCount field.
func (o *GatewayMonitorInfoV3) SetBlastConnectionCount(v int32) {
	o.BlastConnectionCount = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetDetails() GatewayMonitorDetails {
	if o == nil || IsNil(o.Details) {
		var ret GatewayMonitorDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetDetailsOk() (*GatewayMonitorDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given GatewayMonitorDetails and assigns it to the Details field.
func (o *GatewayMonitorInfoV3) SetDetails(v GatewayMonitorDetails) {
	o.Details = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GatewayMonitorInfoV3) SetId(v string) {
	o.Id = &v
}

// GetLastUpdatedTimestamp returns the LastUpdatedTimestamp field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetLastUpdatedTimestamp() int64 {
	if o == nil || IsNil(o.LastUpdatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTimestamp
}

// GetLastUpdatedTimestampOk returns a tuple with the LastUpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetLastUpdatedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdatedTimestamp) {
		return nil, false
	}
	return o.LastUpdatedTimestamp, true
}

// HasLastUpdatedTimestamp returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasLastUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.LastUpdatedTimestamp) {
		return true
	}

	return false
}

// SetLastUpdatedTimestamp gets a reference to the given int64 and assigns it to the LastUpdatedTimestamp field.
func (o *GatewayMonitorInfoV3) SetLastUpdatedTimestamp(v int64) {
	o.LastUpdatedTimestamp = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GatewayMonitorInfoV3) SetName(v string) {
	o.Name = &v
}

// GetPcoipConnectionCount returns the PcoipConnectionCount field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetPcoipConnectionCount() int32 {
	if o == nil || IsNil(o.PcoipConnectionCount) {
		var ret int32
		return ret
	}
	return *o.PcoipConnectionCount
}

// GetPcoipConnectionCountOk returns a tuple with the PcoipConnectionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetPcoipConnectionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PcoipConnectionCount) {
		return nil, false
	}
	return o.PcoipConnectionCount, true
}

// HasPcoipConnectionCount returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasPcoipConnectionCount() bool {
	if o != nil && !IsNil(o.PcoipConnectionCount) {
		return true
	}

	return false
}

// SetPcoipConnectionCount gets a reference to the given int32 and assigns it to the PcoipConnectionCount field.
func (o *GatewayMonitorInfoV3) SetPcoipConnectionCount(v int32) {
	o.PcoipConnectionCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GatewayMonitorInfoV3) SetStatus(v string) {
	o.Status = &v
}

// GetUnrecognizedPcoipRequestsCount returns the UnrecognizedPcoipRequestsCount field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetUnrecognizedPcoipRequestsCount() int32 {
	if o == nil || IsNil(o.UnrecognizedPcoipRequestsCount) {
		var ret int32
		return ret
	}
	return *o.UnrecognizedPcoipRequestsCount
}

// GetUnrecognizedPcoipRequestsCountOk returns a tuple with the UnrecognizedPcoipRequestsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetUnrecognizedPcoipRequestsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnrecognizedPcoipRequestsCount) {
		return nil, false
	}
	return o.UnrecognizedPcoipRequestsCount, true
}

// HasUnrecognizedPcoipRequestsCount returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasUnrecognizedPcoipRequestsCount() bool {
	if o != nil && !IsNil(o.UnrecognizedPcoipRequestsCount) {
		return true
	}

	return false
}

// SetUnrecognizedPcoipRequestsCount gets a reference to the given int32 and assigns it to the UnrecognizedPcoipRequestsCount field.
func (o *GatewayMonitorInfoV3) SetUnrecognizedPcoipRequestsCount(v int32) {
	o.UnrecognizedPcoipRequestsCount = &v
}

// GetUnrecognizedTunnelRequestsCount returns the UnrecognizedTunnelRequestsCount field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetUnrecognizedTunnelRequestsCount() int32 {
	if o == nil || IsNil(o.UnrecognizedTunnelRequestsCount) {
		var ret int32
		return ret
	}
	return *o.UnrecognizedTunnelRequestsCount
}

// GetUnrecognizedTunnelRequestsCountOk returns a tuple with the UnrecognizedTunnelRequestsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetUnrecognizedTunnelRequestsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnrecognizedTunnelRequestsCount) {
		return nil, false
	}
	return o.UnrecognizedTunnelRequestsCount, true
}

// HasUnrecognizedTunnelRequestsCount returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasUnrecognizedTunnelRequestsCount() bool {
	if o != nil && !IsNil(o.UnrecognizedTunnelRequestsCount) {
		return true
	}

	return false
}

// SetUnrecognizedTunnelRequestsCount gets a reference to the given int32 and assigns it to the UnrecognizedTunnelRequestsCount field.
func (o *GatewayMonitorInfoV3) SetUnrecognizedTunnelRequestsCount(v int32) {
	o.UnrecognizedTunnelRequestsCount = &v
}

// GetUnrecognizedXmlapiRequestsCount returns the UnrecognizedXmlapiRequestsCount field value if set, zero value otherwise.
func (o *GatewayMonitorInfoV3) GetUnrecognizedXmlapiRequestsCount() int32 {
	if o == nil || IsNil(o.UnrecognizedXmlapiRequestsCount) {
		var ret int32
		return ret
	}
	return *o.UnrecognizedXmlapiRequestsCount
}

// GetUnrecognizedXmlapiRequestsCountOk returns a tuple with the UnrecognizedXmlapiRequestsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayMonitorInfoV3) GetUnrecognizedXmlapiRequestsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnrecognizedXmlapiRequestsCount) {
		return nil, false
	}
	return o.UnrecognizedXmlapiRequestsCount, true
}

// HasUnrecognizedXmlapiRequestsCount returns a boolean if a field has been set.
func (o *GatewayMonitorInfoV3) HasUnrecognizedXmlapiRequestsCount() bool {
	if o != nil && !IsNil(o.UnrecognizedXmlapiRequestsCount) {
		return true
	}

	return false
}

// SetUnrecognizedXmlapiRequestsCount gets a reference to the given int32 and assigns it to the UnrecognizedXmlapiRequestsCount field.
func (o *GatewayMonitorInfoV3) SetUnrecognizedXmlapiRequestsCount(v int32) {
	o.UnrecognizedXmlapiRequestsCount = &v
}

func (o GatewayMonitorInfoV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayMonitorInfoV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveConnectionCount) {
		toSerialize["active_connection_count"] = o.ActiveConnectionCount
	}
	if !IsNil(o.BlastConnectionCount) {
		toSerialize["blast_connection_count"] = o.BlastConnectionCount
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdatedTimestamp) {
		toSerialize["last_updated_timestamp"] = o.LastUpdatedTimestamp
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PcoipConnectionCount) {
		toSerialize["pcoip_connection_count"] = o.PcoipConnectionCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UnrecognizedPcoipRequestsCount) {
		toSerialize["unrecognized_pcoip_requests_count"] = o.UnrecognizedPcoipRequestsCount
	}
	if !IsNil(o.UnrecognizedTunnelRequestsCount) {
		toSerialize["unrecognized_tunnel_requests_count"] = o.UnrecognizedTunnelRequestsCount
	}
	if !IsNil(o.UnrecognizedXmlapiRequestsCount) {
		toSerialize["unrecognized_xmlapi_requests_count"] = o.UnrecognizedXmlapiRequestsCount
	}
	return toSerialize, nil
}

type NullableGatewayMonitorInfoV3 struct {
	value *GatewayMonitorInfoV3
	isSet bool
}

func (v NullableGatewayMonitorInfoV3) Get() *GatewayMonitorInfoV3 {
	return v.value
}

func (v *NullableGatewayMonitorInfoV3) Set(val *GatewayMonitorInfoV3) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayMonitorInfoV3) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayMonitorInfoV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayMonitorInfoV3(val *GatewayMonitorInfoV3) *NullableGatewayMonitorInfoV3 {
	return &NullableGatewayMonitorInfoV3{value: val, isSet: true}
}

func (v NullableGatewayMonitorInfoV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayMonitorInfoV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


