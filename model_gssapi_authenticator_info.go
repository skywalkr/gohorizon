/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the GSSAPIAuthenticatorInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GSSAPIAuthenticatorInfo{}

// GSSAPIAuthenticatorInfo Information about to GSSAPI Authenticator.
type GSSAPIAuthenticatorInfo struct {
	// Indicates whether the legacy Horizon clients will be allowed to use login as current user.
	AllowLegacyClients *bool `json:"allow_legacy_clients,omitempty"`
	// Indicates whether NTLM is allowed for GSSAPI authentication. When the client does not have access to the domain controllers in the hosted environment kerberos authentication fails, clients can fall back to NTLM authentication if allowNTLMFallback is set to true.
	AllowNtlmFallback *bool `json:"allow_ntlm_fallback,omitempty"`
	// The list of Connection Servers for which this GSSAPI authenticator is enabled.
	ConnectionServers []string `json:"connection_servers,omitempty"`
	// Indicates whether the login as current user is enabled or not.
	EnableLoginAsCurrentUser *bool `json:"enable_login_as_current_user,omitempty"`
	// Indicates whether channel bindings is supported or not.
	EnforceChannelBindings *bool `json:"enforce_channel_bindings,omitempty"`
	// Unique ID representing this GSSAPI Authenticator.
	Id *string `json:"id,omitempty"`
	// Indicates True SSO trigger mode on sessions using this authenticator. * DISABLED: Do not use True SSO. * OPTIONAL: If no SSO credentials are provided then use True SSO otherwise use the supplied SSO credentials. * ENABLED: Always use True SSO even if client supplied SSO credentials.
	TriggerMode *string `json:"trigger_mode,omitempty"`
}

// NewGSSAPIAuthenticatorInfo instantiates a new GSSAPIAuthenticatorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGSSAPIAuthenticatorInfo() *GSSAPIAuthenticatorInfo {
	this := GSSAPIAuthenticatorInfo{}
	return &this
}

// NewGSSAPIAuthenticatorInfoWithDefaults instantiates a new GSSAPIAuthenticatorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGSSAPIAuthenticatorInfoWithDefaults() *GSSAPIAuthenticatorInfo {
	this := GSSAPIAuthenticatorInfo{}
	return &this
}

// GetAllowLegacyClients returns the AllowLegacyClients field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetAllowLegacyClients() bool {
	if o == nil || IsNil(o.AllowLegacyClients) {
		var ret bool
		return ret
	}
	return *o.AllowLegacyClients
}

// GetAllowLegacyClientsOk returns a tuple with the AllowLegacyClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetAllowLegacyClientsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowLegacyClients) {
		return nil, false
	}
	return o.AllowLegacyClients, true
}

// HasAllowLegacyClients returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasAllowLegacyClients() bool {
	if o != nil && !IsNil(o.AllowLegacyClients) {
		return true
	}

	return false
}

// SetAllowLegacyClients gets a reference to the given bool and assigns it to the AllowLegacyClients field.
func (o *GSSAPIAuthenticatorInfo) SetAllowLegacyClients(v bool) {
	o.AllowLegacyClients = &v
}

// GetAllowNtlmFallback returns the AllowNtlmFallback field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetAllowNtlmFallback() bool {
	if o == nil || IsNil(o.AllowNtlmFallback) {
		var ret bool
		return ret
	}
	return *o.AllowNtlmFallback
}

// GetAllowNtlmFallbackOk returns a tuple with the AllowNtlmFallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetAllowNtlmFallbackOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowNtlmFallback) {
		return nil, false
	}
	return o.AllowNtlmFallback, true
}

// HasAllowNtlmFallback returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasAllowNtlmFallback() bool {
	if o != nil && !IsNil(o.AllowNtlmFallback) {
		return true
	}

	return false
}

// SetAllowNtlmFallback gets a reference to the given bool and assigns it to the AllowNtlmFallback field.
func (o *GSSAPIAuthenticatorInfo) SetAllowNtlmFallback(v bool) {
	o.AllowNtlmFallback = &v
}

// GetConnectionServers returns the ConnectionServers field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetConnectionServers() []string {
	if o == nil || IsNil(o.ConnectionServers) {
		var ret []string
		return ret
	}
	return o.ConnectionServers
}

// GetConnectionServersOk returns a tuple with the ConnectionServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetConnectionServersOk() ([]string, bool) {
	if o == nil || IsNil(o.ConnectionServers) {
		return nil, false
	}
	return o.ConnectionServers, true
}

// HasConnectionServers returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasConnectionServers() bool {
	if o != nil && !IsNil(o.ConnectionServers) {
		return true
	}

	return false
}

// SetConnectionServers gets a reference to the given []string and assigns it to the ConnectionServers field.
func (o *GSSAPIAuthenticatorInfo) SetConnectionServers(v []string) {
	o.ConnectionServers = v
}

// GetEnableLoginAsCurrentUser returns the EnableLoginAsCurrentUser field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetEnableLoginAsCurrentUser() bool {
	if o == nil || IsNil(o.EnableLoginAsCurrentUser) {
		var ret bool
		return ret
	}
	return *o.EnableLoginAsCurrentUser
}

// GetEnableLoginAsCurrentUserOk returns a tuple with the EnableLoginAsCurrentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetEnableLoginAsCurrentUserOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableLoginAsCurrentUser) {
		return nil, false
	}
	return o.EnableLoginAsCurrentUser, true
}

// HasEnableLoginAsCurrentUser returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasEnableLoginAsCurrentUser() bool {
	if o != nil && !IsNil(o.EnableLoginAsCurrentUser) {
		return true
	}

	return false
}

// SetEnableLoginAsCurrentUser gets a reference to the given bool and assigns it to the EnableLoginAsCurrentUser field.
func (o *GSSAPIAuthenticatorInfo) SetEnableLoginAsCurrentUser(v bool) {
	o.EnableLoginAsCurrentUser = &v
}

// GetEnforceChannelBindings returns the EnforceChannelBindings field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetEnforceChannelBindings() bool {
	if o == nil || IsNil(o.EnforceChannelBindings) {
		var ret bool
		return ret
	}
	return *o.EnforceChannelBindings
}

// GetEnforceChannelBindingsOk returns a tuple with the EnforceChannelBindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetEnforceChannelBindingsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnforceChannelBindings) {
		return nil, false
	}
	return o.EnforceChannelBindings, true
}

// HasEnforceChannelBindings returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasEnforceChannelBindings() bool {
	if o != nil && !IsNil(o.EnforceChannelBindings) {
		return true
	}

	return false
}

// SetEnforceChannelBindings gets a reference to the given bool and assigns it to the EnforceChannelBindings field.
func (o *GSSAPIAuthenticatorInfo) SetEnforceChannelBindings(v bool) {
	o.EnforceChannelBindings = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GSSAPIAuthenticatorInfo) SetId(v string) {
	o.Id = &v
}

// GetTriggerMode returns the TriggerMode field value if set, zero value otherwise.
func (o *GSSAPIAuthenticatorInfo) GetTriggerMode() string {
	if o == nil || IsNil(o.TriggerMode) {
		var ret string
		return ret
	}
	return *o.TriggerMode
}

// GetTriggerModeOk returns a tuple with the TriggerMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GSSAPIAuthenticatorInfo) GetTriggerModeOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerMode) {
		return nil, false
	}
	return o.TriggerMode, true
}

// HasTriggerMode returns a boolean if a field has been set.
func (o *GSSAPIAuthenticatorInfo) HasTriggerMode() bool {
	if o != nil && !IsNil(o.TriggerMode) {
		return true
	}

	return false
}

// SetTriggerMode gets a reference to the given string and assigns it to the TriggerMode field.
func (o *GSSAPIAuthenticatorInfo) SetTriggerMode(v string) {
	o.TriggerMode = &v
}

func (o GSSAPIAuthenticatorInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GSSAPIAuthenticatorInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowLegacyClients) {
		toSerialize["allow_legacy_clients"] = o.AllowLegacyClients
	}
	if !IsNil(o.AllowNtlmFallback) {
		toSerialize["allow_ntlm_fallback"] = o.AllowNtlmFallback
	}
	if !IsNil(o.ConnectionServers) {
		toSerialize["connection_servers"] = o.ConnectionServers
	}
	if !IsNil(o.EnableLoginAsCurrentUser) {
		toSerialize["enable_login_as_current_user"] = o.EnableLoginAsCurrentUser
	}
	if !IsNil(o.EnforceChannelBindings) {
		toSerialize["enforce_channel_bindings"] = o.EnforceChannelBindings
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TriggerMode) {
		toSerialize["trigger_mode"] = o.TriggerMode
	}
	return toSerialize, nil
}

type NullableGSSAPIAuthenticatorInfo struct {
	value *GSSAPIAuthenticatorInfo
	isSet bool
}

func (v NullableGSSAPIAuthenticatorInfo) Get() *GSSAPIAuthenticatorInfo {
	return v.value
}

func (v *NullableGSSAPIAuthenticatorInfo) Set(val *GSSAPIAuthenticatorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGSSAPIAuthenticatorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGSSAPIAuthenticatorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGSSAPIAuthenticatorInfo(val *GSSAPIAuthenticatorInfo) *NullableGSSAPIAuthenticatorInfo {
	return &NullableGSSAPIAuthenticatorInfo{value: val, isSet: true}
}

func (v NullableGSSAPIAuthenticatorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGSSAPIAuthenticatorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


