/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConnectionServerGSSAPISpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServerGSSAPISpec{}

// ConnectionServerGSSAPISpec Information related to connection server GSS API configuration.
type ConnectionServerGSSAPISpec struct {
	// Indicates whether GSSAPI authentication is enabled.
	GssApienabled bool `json:"gss_apienabled"`
}

type _ConnectionServerGSSAPISpec ConnectionServerGSSAPISpec

// NewConnectionServerGSSAPISpec instantiates a new ConnectionServerGSSAPISpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerGSSAPISpec(gssApienabled bool) *ConnectionServerGSSAPISpec {
	this := ConnectionServerGSSAPISpec{}
	this.GssApienabled = gssApienabled
	return &this
}

// NewConnectionServerGSSAPISpecWithDefaults instantiates a new ConnectionServerGSSAPISpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerGSSAPISpecWithDefaults() *ConnectionServerGSSAPISpec {
	this := ConnectionServerGSSAPISpec{}
	return &this
}

// GetGssApienabled returns the GssApienabled field value
func (o *ConnectionServerGSSAPISpec) GetGssApienabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.GssApienabled
}

// GetGssApienabledOk returns a tuple with the GssApienabled field value
// and a boolean to check if the value has been set.
func (o *ConnectionServerGSSAPISpec) GetGssApienabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GssApienabled, true
}

// SetGssApienabled sets field value
func (o *ConnectionServerGSSAPISpec) SetGssApienabled(v bool) {
	o.GssApienabled = v
}

func (o ConnectionServerGSSAPISpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServerGSSAPISpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gss_apienabled"] = o.GssApienabled
	return toSerialize, nil
}

func (o *ConnectionServerGSSAPISpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"gss_apienabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectionServerGSSAPISpec := _ConnectionServerGSSAPISpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConnectionServerGSSAPISpec)

	if err != nil {
		return err
	}

	*o = ConnectionServerGSSAPISpec(varConnectionServerGSSAPISpec)

	return err
}

type NullableConnectionServerGSSAPISpec struct {
	value *ConnectionServerGSSAPISpec
	isSet bool
}

func (v NullableConnectionServerGSSAPISpec) Get() *ConnectionServerGSSAPISpec {
	return v.value
}

func (v *NullableConnectionServerGSSAPISpec) Set(val *ConnectionServerGSSAPISpec) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerGSSAPISpec) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerGSSAPISpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerGSSAPISpec(val *ConnectionServerGSSAPISpec) *NullableConnectionServerGSSAPISpec {
	return &NullableConnectionServerGSSAPISpec{value: val, isSet: true}
}

func (v NullableConnectionServerGSSAPISpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerGSSAPISpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


