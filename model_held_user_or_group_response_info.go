/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the HeldUserOrGroupResponseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeldUserOrGroupResponseInfo{}

// HeldUserOrGroupResponseInfo Contains information about all the VMs assigned to the held user and their states. Also contains other general information related to the held user or group.
type HeldUserOrGroupResponseInfo struct {
	// Unique SID representing held user or group.
	AdUserOrGroupId *string `json:"ad_user_or_group_id,omitempty"`
	// List of error objects containing error key and error message.
	Errors []APIError `json:"errors,omitempty"`
	// List of objects containing information related to held Virtual Machines.
	MachinesData []HeldVMInfo `json:"machines_data,omitempty"`
	// Response HTTP status code of the operation.
	StatusCode *int32 `json:"status_code,omitempty"`
	// Timestamp in milliseconds when the operation failed. Measured as epoch time.
	Timestamp *int64 `json:"timestamp,omitempty"`
}

// NewHeldUserOrGroupResponseInfo instantiates a new HeldUserOrGroupResponseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeldUserOrGroupResponseInfo() *HeldUserOrGroupResponseInfo {
	this := HeldUserOrGroupResponseInfo{}
	return &this
}

// NewHeldUserOrGroupResponseInfoWithDefaults instantiates a new HeldUserOrGroupResponseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeldUserOrGroupResponseInfoWithDefaults() *HeldUserOrGroupResponseInfo {
	this := HeldUserOrGroupResponseInfo{}
	return &this
}

// GetAdUserOrGroupId returns the AdUserOrGroupId field value if set, zero value otherwise.
func (o *HeldUserOrGroupResponseInfo) GetAdUserOrGroupId() string {
	if o == nil || IsNil(o.AdUserOrGroupId) {
		var ret string
		return ret
	}
	return *o.AdUserOrGroupId
}

// GetAdUserOrGroupIdOk returns a tuple with the AdUserOrGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeldUserOrGroupResponseInfo) GetAdUserOrGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdUserOrGroupId) {
		return nil, false
	}
	return o.AdUserOrGroupId, true
}

// HasAdUserOrGroupId returns a boolean if a field has been set.
func (o *HeldUserOrGroupResponseInfo) HasAdUserOrGroupId() bool {
	if o != nil && !IsNil(o.AdUserOrGroupId) {
		return true
	}

	return false
}

// SetAdUserOrGroupId gets a reference to the given string and assigns it to the AdUserOrGroupId field.
func (o *HeldUserOrGroupResponseInfo) SetAdUserOrGroupId(v string) {
	o.AdUserOrGroupId = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *HeldUserOrGroupResponseInfo) GetErrors() []APIError {
	if o == nil || IsNil(o.Errors) {
		var ret []APIError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeldUserOrGroupResponseInfo) GetErrorsOk() ([]APIError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *HeldUserOrGroupResponseInfo) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []APIError and assigns it to the Errors field.
func (o *HeldUserOrGroupResponseInfo) SetErrors(v []APIError) {
	o.Errors = v
}

// GetMachinesData returns the MachinesData field value if set, zero value otherwise.
func (o *HeldUserOrGroupResponseInfo) GetMachinesData() []HeldVMInfo {
	if o == nil || IsNil(o.MachinesData) {
		var ret []HeldVMInfo
		return ret
	}
	return o.MachinesData
}

// GetMachinesDataOk returns a tuple with the MachinesData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeldUserOrGroupResponseInfo) GetMachinesDataOk() ([]HeldVMInfo, bool) {
	if o == nil || IsNil(o.MachinesData) {
		return nil, false
	}
	return o.MachinesData, true
}

// HasMachinesData returns a boolean if a field has been set.
func (o *HeldUserOrGroupResponseInfo) HasMachinesData() bool {
	if o != nil && !IsNil(o.MachinesData) {
		return true
	}

	return false
}

// SetMachinesData gets a reference to the given []HeldVMInfo and assigns it to the MachinesData field.
func (o *HeldUserOrGroupResponseInfo) SetMachinesData(v []HeldVMInfo) {
	o.MachinesData = v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *HeldUserOrGroupResponseInfo) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeldUserOrGroupResponseInfo) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *HeldUserOrGroupResponseInfo) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *HeldUserOrGroupResponseInfo) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *HeldUserOrGroupResponseInfo) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeldUserOrGroupResponseInfo) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *HeldUserOrGroupResponseInfo) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *HeldUserOrGroupResponseInfo) SetTimestamp(v int64) {
	o.Timestamp = &v
}

func (o HeldUserOrGroupResponseInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeldUserOrGroupResponseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdUserOrGroupId) {
		toSerialize["ad_user_or_group_id"] = o.AdUserOrGroupId
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.MachinesData) {
		toSerialize["machines_data"] = o.MachinesData
	}
	if !IsNil(o.StatusCode) {
		toSerialize["status_code"] = o.StatusCode
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableHeldUserOrGroupResponseInfo struct {
	value *HeldUserOrGroupResponseInfo
	isSet bool
}

func (v NullableHeldUserOrGroupResponseInfo) Get() *HeldUserOrGroupResponseInfo {
	return v.value
}

func (v *NullableHeldUserOrGroupResponseInfo) Set(val *HeldUserOrGroupResponseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHeldUserOrGroupResponseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHeldUserOrGroupResponseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeldUserOrGroupResponseInfo(val *HeldUserOrGroupResponseInfo) *NullableHeldUserOrGroupResponseInfo {
	return &NullableHeldUserOrGroupResponseInfo{value: val, isSet: true}
}

func (v NullableHeldUserOrGroupResponseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeldUserOrGroupResponseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


