/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the SAMLAuthenticatorServerSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SAMLAuthenticatorServerSpec{}

// SAMLAuthenticatorServerSpec SAML Authenticator server Information.
type SAMLAuthenticatorServerSpec struct {
	// The administrator URL for the SAML authenticator.
	AdministratorUrl *string `json:"administrator_url,omitempty"`
	// The metadata URL of the SAML Authenticator.
	MetadataUrl *string `json:"metadata_url,omitempty"`
}

// NewSAMLAuthenticatorServerSpec instantiates a new SAMLAuthenticatorServerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSAMLAuthenticatorServerSpec() *SAMLAuthenticatorServerSpec {
	this := SAMLAuthenticatorServerSpec{}
	return &this
}

// NewSAMLAuthenticatorServerSpecWithDefaults instantiates a new SAMLAuthenticatorServerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSAMLAuthenticatorServerSpecWithDefaults() *SAMLAuthenticatorServerSpec {
	this := SAMLAuthenticatorServerSpec{}
	return &this
}

// GetAdministratorUrl returns the AdministratorUrl field value if set, zero value otherwise.
func (o *SAMLAuthenticatorServerSpec) GetAdministratorUrl() string {
	if o == nil || IsNil(o.AdministratorUrl) {
		var ret string
		return ret
	}
	return *o.AdministratorUrl
}

// GetAdministratorUrlOk returns a tuple with the AdministratorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorServerSpec) GetAdministratorUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AdministratorUrl) {
		return nil, false
	}
	return o.AdministratorUrl, true
}

// HasAdministratorUrl returns a boolean if a field has been set.
func (o *SAMLAuthenticatorServerSpec) HasAdministratorUrl() bool {
	if o != nil && !IsNil(o.AdministratorUrl) {
		return true
	}

	return false
}

// SetAdministratorUrl gets a reference to the given string and assigns it to the AdministratorUrl field.
func (o *SAMLAuthenticatorServerSpec) SetAdministratorUrl(v string) {
	o.AdministratorUrl = &v
}

// GetMetadataUrl returns the MetadataUrl field value if set, zero value otherwise.
func (o *SAMLAuthenticatorServerSpec) GetMetadataUrl() string {
	if o == nil || IsNil(o.MetadataUrl) {
		var ret string
		return ret
	}
	return *o.MetadataUrl
}

// GetMetadataUrlOk returns a tuple with the MetadataUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorServerSpec) GetMetadataUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataUrl) {
		return nil, false
	}
	return o.MetadataUrl, true
}

// HasMetadataUrl returns a boolean if a field has been set.
func (o *SAMLAuthenticatorServerSpec) HasMetadataUrl() bool {
	if o != nil && !IsNil(o.MetadataUrl) {
		return true
	}

	return false
}

// SetMetadataUrl gets a reference to the given string and assigns it to the MetadataUrl field.
func (o *SAMLAuthenticatorServerSpec) SetMetadataUrl(v string) {
	o.MetadataUrl = &v
}

func (o SAMLAuthenticatorServerSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SAMLAuthenticatorServerSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdministratorUrl) {
		toSerialize["administrator_url"] = o.AdministratorUrl
	}
	if !IsNil(o.MetadataUrl) {
		toSerialize["metadata_url"] = o.MetadataUrl
	}
	return toSerialize, nil
}

type NullableSAMLAuthenticatorServerSpec struct {
	value *SAMLAuthenticatorServerSpec
	isSet bool
}

func (v NullableSAMLAuthenticatorServerSpec) Get() *SAMLAuthenticatorServerSpec {
	return v.value
}

func (v *NullableSAMLAuthenticatorServerSpec) Set(val *SAMLAuthenticatorServerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSAMLAuthenticatorServerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSAMLAuthenticatorServerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSAMLAuthenticatorServerSpec(val *SAMLAuthenticatorServerSpec) *NullableSAMLAuthenticatorServerSpec {
	return &NullableSAMLAuthenticatorServerSpec{value: val, isSet: true}
}

func (v NullableSAMLAuthenticatorServerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSAMLAuthenticatorServerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


