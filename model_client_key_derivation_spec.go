/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClientKeyDerivationSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientKeyDerivationSpec{}

// ClientKeyDerivationSpec Client key derivation spec.
type ClientKeyDerivationSpec struct {
	// Identifier as Base64 encoded binary data.
	Identifier string `json:"identifier" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	// Nonce as Base64 encoded binary data.
	Nonce string `json:"nonce" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	// Diffie Hellman public key as Base64 encoded binary data.
	PublicKey string `json:"public_key" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	// List of client supported schemes for key derivation.
	SupportedSchemes []string `json:"supported_schemes"`
}

type _ClientKeyDerivationSpec ClientKeyDerivationSpec

// NewClientKeyDerivationSpec instantiates a new ClientKeyDerivationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientKeyDerivationSpec(identifier string, nonce string, publicKey string, supportedSchemes []string) *ClientKeyDerivationSpec {
	this := ClientKeyDerivationSpec{}
	this.Identifier = identifier
	this.Nonce = nonce
	this.PublicKey = publicKey
	this.SupportedSchemes = supportedSchemes
	return &this
}

// NewClientKeyDerivationSpecWithDefaults instantiates a new ClientKeyDerivationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientKeyDerivationSpecWithDefaults() *ClientKeyDerivationSpec {
	this := ClientKeyDerivationSpec{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *ClientKeyDerivationSpec) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *ClientKeyDerivationSpec) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *ClientKeyDerivationSpec) SetIdentifier(v string) {
	o.Identifier = v
}

// GetNonce returns the Nonce field value
func (o *ClientKeyDerivationSpec) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *ClientKeyDerivationSpec) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *ClientKeyDerivationSpec) SetNonce(v string) {
	o.Nonce = v
}

// GetPublicKey returns the PublicKey field value
func (o *ClientKeyDerivationSpec) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *ClientKeyDerivationSpec) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *ClientKeyDerivationSpec) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetSupportedSchemes returns the SupportedSchemes field value
func (o *ClientKeyDerivationSpec) GetSupportedSchemes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SupportedSchemes
}

// GetSupportedSchemesOk returns a tuple with the SupportedSchemes field value
// and a boolean to check if the value has been set.
func (o *ClientKeyDerivationSpec) GetSupportedSchemesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportedSchemes, true
}

// SetSupportedSchemes sets field value
func (o *ClientKeyDerivationSpec) SetSupportedSchemes(v []string) {
	o.SupportedSchemes = v
}

func (o ClientKeyDerivationSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientKeyDerivationSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["nonce"] = o.Nonce
	toSerialize["public_key"] = o.PublicKey
	toSerialize["supported_schemes"] = o.SupportedSchemes
	return toSerialize, nil
}

func (o *ClientKeyDerivationSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"nonce",
		"public_key",
		"supported_schemes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientKeyDerivationSpec := _ClientKeyDerivationSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientKeyDerivationSpec)

	if err != nil {
		return err
	}

	*o = ClientKeyDerivationSpec(varClientKeyDerivationSpec)

	return err
}

type NullableClientKeyDerivationSpec struct {
	value *ClientKeyDerivationSpec
	isSet bool
}

func (v NullableClientKeyDerivationSpec) Get() *ClientKeyDerivationSpec {
	return v.value
}

func (v *NullableClientKeyDerivationSpec) Set(val *ClientKeyDerivationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClientKeyDerivationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClientKeyDerivationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientKeyDerivationSpec(val *ClientKeyDerivationSpec) *NullableClientKeyDerivationSpec {
	return &NullableClientKeyDerivationSpec{value: val, isSet: true}
}

func (v NullableClientKeyDerivationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientKeyDerivationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


