/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppVolumesManagerUpdateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppVolumesManagerUpdateSpec{}

// AppVolumesManagerUpdateSpec Information required to update App Volumes Manager.
type AppVolumesManagerUpdateSpec struct {
	// Password of the account.
	Password []string `json:"password"`
	// Port of the app volumes manager to connect to.
	Port *int32 `json:"port,omitempty"`
	// App Volumes Manager's server name or IP address.
	ServerName string `json:"server_name"`
	// Username to login to App Volumes Manager
	Username string `json:"username"`
}

type _AppVolumesManagerUpdateSpec AppVolumesManagerUpdateSpec

// NewAppVolumesManagerUpdateSpec instantiates a new AppVolumesManagerUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppVolumesManagerUpdateSpec(password []string, serverName string, username string) *AppVolumesManagerUpdateSpec {
	this := AppVolumesManagerUpdateSpec{}
	this.Password = password
	this.ServerName = serverName
	this.Username = username
	return &this
}

// NewAppVolumesManagerUpdateSpecWithDefaults instantiates a new AppVolumesManagerUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppVolumesManagerUpdateSpecWithDefaults() *AppVolumesManagerUpdateSpec {
	this := AppVolumesManagerUpdateSpec{}
	return &this
}

// GetPassword returns the Password field value
func (o *AppVolumesManagerUpdateSpec) GetPassword() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerUpdateSpec) GetPasswordOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password, true
}

// SetPassword sets field value
func (o *AppVolumesManagerUpdateSpec) SetPassword(v []string) {
	o.Password = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *AppVolumesManagerUpdateSpec) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerUpdateSpec) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *AppVolumesManagerUpdateSpec) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *AppVolumesManagerUpdateSpec) SetPort(v int32) {
	o.Port = &v
}

// GetServerName returns the ServerName field value
func (o *AppVolumesManagerUpdateSpec) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerUpdateSpec) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *AppVolumesManagerUpdateSpec) SetServerName(v string) {
	o.ServerName = v
}

// GetUsername returns the Username field value
func (o *AppVolumesManagerUpdateSpec) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerUpdateSpec) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AppVolumesManagerUpdateSpec) SetUsername(v string) {
	o.Username = v
}

func (o AppVolumesManagerUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppVolumesManagerUpdateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.Password
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	toSerialize["server_name"] = o.ServerName
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

func (o *AppVolumesManagerUpdateSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"password",
		"server_name",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppVolumesManagerUpdateSpec := _AppVolumesManagerUpdateSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppVolumesManagerUpdateSpec)

	if err != nil {
		return err
	}

	*o = AppVolumesManagerUpdateSpec(varAppVolumesManagerUpdateSpec)

	return err
}

type NullableAppVolumesManagerUpdateSpec struct {
	value *AppVolumesManagerUpdateSpec
	isSet bool
}

func (v NullableAppVolumesManagerUpdateSpec) Get() *AppVolumesManagerUpdateSpec {
	return v.value
}

func (v *NullableAppVolumesManagerUpdateSpec) Set(val *AppVolumesManagerUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAppVolumesManagerUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAppVolumesManagerUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppVolumesManagerUpdateSpec(val *AppVolumesManagerUpdateSpec) *NullableAppVolumesManagerUpdateSpec {
	return &NullableAppVolumesManagerUpdateSpec{value: val, isSet: true}
}

func (v NullableAppVolumesManagerUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppVolumesManagerUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


