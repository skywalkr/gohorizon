/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// GlobalSessionClientData Client data for the session.
type GlobalSessionClientData struct {
	// IP Address of the client machine for the session.
	Address *string `json:"address,omitempty"`
	// Client location for the session.
	LocationId *string `json:"location_id,omitempty"`
	// Client machine name for the session.
	Name *string `json:"name,omitempty"`
	// Client type for the session. * WINDOWS: Client type is Windows client. * MAC: Client type is Mac client. * HTMLACCESS: Client type is Web client. * LINUX: Client type is Linux client. * IOS: Client type is iOS client. * ANDROID: Client type is Android client. * OTHER: Client type is other.
	Type *string `json:"type,omitempty"`
	// Client version for the session.
	Version *string `json:"version,omitempty"`
}

// NewGlobalSessionClientData instantiates a new GlobalSessionClientData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalSessionClientData() *GlobalSessionClientData {
	this := GlobalSessionClientData{}
	return &this
}

// NewGlobalSessionClientDataWithDefaults instantiates a new GlobalSessionClientData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalSessionClientDataWithDefaults() *GlobalSessionClientData {
	this := GlobalSessionClientData{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GlobalSessionClientData) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionClientData) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GlobalSessionClientData) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GlobalSessionClientData) SetAddress(v string) {
	o.Address = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *GlobalSessionClientData) GetLocationId() string {
	if o == nil || o.LocationId == nil {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionClientData) GetLocationIdOk() (*string, bool) {
	if o == nil || o.LocationId == nil {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *GlobalSessionClientData) HasLocationId() bool {
	if o != nil && o.LocationId != nil {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *GlobalSessionClientData) SetLocationId(v string) {
	o.LocationId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlobalSessionClientData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionClientData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlobalSessionClientData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlobalSessionClientData) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GlobalSessionClientData) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionClientData) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GlobalSessionClientData) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GlobalSessionClientData) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GlobalSessionClientData) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionClientData) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GlobalSessionClientData) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GlobalSessionClientData) SetVersion(v string) {
	o.Version = &v
}

func (o GlobalSessionClientData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.LocationId != nil {
		toSerialize["location_id"] = o.LocationId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableGlobalSessionClientData struct {
	value *GlobalSessionClientData
	isSet bool
}

func (v NullableGlobalSessionClientData) Get() *GlobalSessionClientData {
	return v.value
}

func (v *NullableGlobalSessionClientData) Set(val *GlobalSessionClientData) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalSessionClientData) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalSessionClientData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalSessionClientData(val *GlobalSessionClientData) *NullableGlobalSessionClientData {
	return &NullableGlobalSessionClientData{value: val, isSet: true}
}

func (v NullableGlobalSessionClientData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalSessionClientData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
