/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the FarmScheduledMaintenanceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmScheduledMaintenanceInfo{}

// FarmScheduledMaintenanceInfo Scheduled maintenance settings for the automated farm.
type FarmScheduledMaintenanceInfo struct {
	// Indicates whether immediate maintenance is scheduled.
	ImmediateMaintenanceScheduled *bool `json:"immediate_maintenance_scheduled,omitempty"`
	// Determines when to perform the operation on RDS servers which have an active session. * FORCE_LOGOFF: Users will be forced to log off when the system is ready to execute the operation. Before being forcibly logged off, users may have a grace period in which to save their work which can be configured in Global Settings. * WAIT_FOR_LOGOFF: Wait for connected users to disconnect before the task starts. The operation starts immediately when there are no active sessions.
	LogoffPolicy *string `json:"logoff_policy,omitempty"`
	// Time when next scheduled maintenance would happen.
	NextScheduledTime *int64 `json:"next_scheduled_time,omitempty"`
	RecurringMaintenanceSettings *FarmRecurringMaintenanceSettingsInfo `json:"recurring_maintenance_settings,omitempty"`
	// Indicates whether the operation should stop on first error.
	StopOnFirstError *bool `json:"stop_on_first_error,omitempty"`
}

// NewFarmScheduledMaintenanceInfo instantiates a new FarmScheduledMaintenanceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmScheduledMaintenanceInfo() *FarmScheduledMaintenanceInfo {
	this := FarmScheduledMaintenanceInfo{}
	return &this
}

// NewFarmScheduledMaintenanceInfoWithDefaults instantiates a new FarmScheduledMaintenanceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmScheduledMaintenanceInfoWithDefaults() *FarmScheduledMaintenanceInfo {
	this := FarmScheduledMaintenanceInfo{}
	return &this
}

// GetImmediateMaintenanceScheduled returns the ImmediateMaintenanceScheduled field value if set, zero value otherwise.
func (o *FarmScheduledMaintenanceInfo) GetImmediateMaintenanceScheduled() bool {
	if o == nil || IsNil(o.ImmediateMaintenanceScheduled) {
		var ret bool
		return ret
	}
	return *o.ImmediateMaintenanceScheduled
}

// GetImmediateMaintenanceScheduledOk returns a tuple with the ImmediateMaintenanceScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmScheduledMaintenanceInfo) GetImmediateMaintenanceScheduledOk() (*bool, bool) {
	if o == nil || IsNil(o.ImmediateMaintenanceScheduled) {
		return nil, false
	}
	return o.ImmediateMaintenanceScheduled, true
}

// HasImmediateMaintenanceScheduled returns a boolean if a field has been set.
func (o *FarmScheduledMaintenanceInfo) HasImmediateMaintenanceScheduled() bool {
	if o != nil && !IsNil(o.ImmediateMaintenanceScheduled) {
		return true
	}

	return false
}

// SetImmediateMaintenanceScheduled gets a reference to the given bool and assigns it to the ImmediateMaintenanceScheduled field.
func (o *FarmScheduledMaintenanceInfo) SetImmediateMaintenanceScheduled(v bool) {
	o.ImmediateMaintenanceScheduled = &v
}

// GetLogoffPolicy returns the LogoffPolicy field value if set, zero value otherwise.
func (o *FarmScheduledMaintenanceInfo) GetLogoffPolicy() string {
	if o == nil || IsNil(o.LogoffPolicy) {
		var ret string
		return ret
	}
	return *o.LogoffPolicy
}

// GetLogoffPolicyOk returns a tuple with the LogoffPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmScheduledMaintenanceInfo) GetLogoffPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.LogoffPolicy) {
		return nil, false
	}
	return o.LogoffPolicy, true
}

// HasLogoffPolicy returns a boolean if a field has been set.
func (o *FarmScheduledMaintenanceInfo) HasLogoffPolicy() bool {
	if o != nil && !IsNil(o.LogoffPolicy) {
		return true
	}

	return false
}

// SetLogoffPolicy gets a reference to the given string and assigns it to the LogoffPolicy field.
func (o *FarmScheduledMaintenanceInfo) SetLogoffPolicy(v string) {
	o.LogoffPolicy = &v
}

// GetNextScheduledTime returns the NextScheduledTime field value if set, zero value otherwise.
func (o *FarmScheduledMaintenanceInfo) GetNextScheduledTime() int64 {
	if o == nil || IsNil(o.NextScheduledTime) {
		var ret int64
		return ret
	}
	return *o.NextScheduledTime
}

// GetNextScheduledTimeOk returns a tuple with the NextScheduledTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmScheduledMaintenanceInfo) GetNextScheduledTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.NextScheduledTime) {
		return nil, false
	}
	return o.NextScheduledTime, true
}

// HasNextScheduledTime returns a boolean if a field has been set.
func (o *FarmScheduledMaintenanceInfo) HasNextScheduledTime() bool {
	if o != nil && !IsNil(o.NextScheduledTime) {
		return true
	}

	return false
}

// SetNextScheduledTime gets a reference to the given int64 and assigns it to the NextScheduledTime field.
func (o *FarmScheduledMaintenanceInfo) SetNextScheduledTime(v int64) {
	o.NextScheduledTime = &v
}

// GetRecurringMaintenanceSettings returns the RecurringMaintenanceSettings field value if set, zero value otherwise.
func (o *FarmScheduledMaintenanceInfo) GetRecurringMaintenanceSettings() FarmRecurringMaintenanceSettingsInfo {
	if o == nil || IsNil(o.RecurringMaintenanceSettings) {
		var ret FarmRecurringMaintenanceSettingsInfo
		return ret
	}
	return *o.RecurringMaintenanceSettings
}

// GetRecurringMaintenanceSettingsOk returns a tuple with the RecurringMaintenanceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmScheduledMaintenanceInfo) GetRecurringMaintenanceSettingsOk() (*FarmRecurringMaintenanceSettingsInfo, bool) {
	if o == nil || IsNil(o.RecurringMaintenanceSettings) {
		return nil, false
	}
	return o.RecurringMaintenanceSettings, true
}

// HasRecurringMaintenanceSettings returns a boolean if a field has been set.
func (o *FarmScheduledMaintenanceInfo) HasRecurringMaintenanceSettings() bool {
	if o != nil && !IsNil(o.RecurringMaintenanceSettings) {
		return true
	}

	return false
}

// SetRecurringMaintenanceSettings gets a reference to the given FarmRecurringMaintenanceSettingsInfo and assigns it to the RecurringMaintenanceSettings field.
func (o *FarmScheduledMaintenanceInfo) SetRecurringMaintenanceSettings(v FarmRecurringMaintenanceSettingsInfo) {
	o.RecurringMaintenanceSettings = &v
}

// GetStopOnFirstError returns the StopOnFirstError field value if set, zero value otherwise.
func (o *FarmScheduledMaintenanceInfo) GetStopOnFirstError() bool {
	if o == nil || IsNil(o.StopOnFirstError) {
		var ret bool
		return ret
	}
	return *o.StopOnFirstError
}

// GetStopOnFirstErrorOk returns a tuple with the StopOnFirstError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmScheduledMaintenanceInfo) GetStopOnFirstErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.StopOnFirstError) {
		return nil, false
	}
	return o.StopOnFirstError, true
}

// HasStopOnFirstError returns a boolean if a field has been set.
func (o *FarmScheduledMaintenanceInfo) HasStopOnFirstError() bool {
	if o != nil && !IsNil(o.StopOnFirstError) {
		return true
	}

	return false
}

// SetStopOnFirstError gets a reference to the given bool and assigns it to the StopOnFirstError field.
func (o *FarmScheduledMaintenanceInfo) SetStopOnFirstError(v bool) {
	o.StopOnFirstError = &v
}

func (o FarmScheduledMaintenanceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmScheduledMaintenanceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImmediateMaintenanceScheduled) {
		toSerialize["immediate_maintenance_scheduled"] = o.ImmediateMaintenanceScheduled
	}
	if !IsNil(o.LogoffPolicy) {
		toSerialize["logoff_policy"] = o.LogoffPolicy
	}
	if !IsNil(o.NextScheduledTime) {
		toSerialize["next_scheduled_time"] = o.NextScheduledTime
	}
	if !IsNil(o.RecurringMaintenanceSettings) {
		toSerialize["recurring_maintenance_settings"] = o.RecurringMaintenanceSettings
	}
	if !IsNil(o.StopOnFirstError) {
		toSerialize["stop_on_first_error"] = o.StopOnFirstError
	}
	return toSerialize, nil
}

type NullableFarmScheduledMaintenanceInfo struct {
	value *FarmScheduledMaintenanceInfo
	isSet bool
}

func (v NullableFarmScheduledMaintenanceInfo) Get() *FarmScheduledMaintenanceInfo {
	return v.value
}

func (v *NullableFarmScheduledMaintenanceInfo) Set(val *FarmScheduledMaintenanceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmScheduledMaintenanceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmScheduledMaintenanceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmScheduledMaintenanceInfo(val *FarmScheduledMaintenanceInfo) *NullableFarmScheduledMaintenanceInfo {
	return &NullableFarmScheduledMaintenanceInfo{value: val, isSet: true}
}

func (v NullableFarmScheduledMaintenanceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmScheduledMaintenanceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


