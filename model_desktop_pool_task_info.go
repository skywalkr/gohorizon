/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// DesktopPoolTaskInfo Information related to Desktop Pool Task.
type DesktopPoolTaskInfo struct {
	// Number of VMs whose task is in cancelled state.
	CancelledVmtaskCount *int32 `json:"cancelled_vmtask_count,omitempty"`
	// Description of the desktop pool task.
	Description *string `json:"description,omitempty"`
	// Number of VMs whose task is in fault state.
	ErrorVmtaskCount *int32 `json:"error_vmtask_count,omitempty"`
	// Number of VMs whose task is in holding state.
	HaltedVmtaskCount *int32 `json:"halted_vmtask_count,omitempty"`
	// Unique ID representing Desktop Pool Task.
	Id *string `json:"id,omitempty"`
	// The current desktop pool operation. * PUSH_IMAGE: A push image operation.
	Operation *string `json:"operation,omitempty"`
	// Number of VMs whose task is scheduled or running.
	RemainingVmtaskCount *int32 `json:"remaining_vmtask_count,omitempty"`
	// Time at which desktop pool task is scheduled to start.
	ScheduleTime *int64 `json:"schedule_time,omitempty"`
}

// NewDesktopPoolTaskInfo instantiates a new DesktopPoolTaskInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesktopPoolTaskInfo() *DesktopPoolTaskInfo {
	this := DesktopPoolTaskInfo{}
	return &this
}

// NewDesktopPoolTaskInfoWithDefaults instantiates a new DesktopPoolTaskInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesktopPoolTaskInfoWithDefaults() *DesktopPoolTaskInfo {
	this := DesktopPoolTaskInfo{}
	return &this
}

// GetCancelledVmtaskCount returns the CancelledVmtaskCount field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetCancelledVmtaskCount() int32 {
	if o == nil || o.CancelledVmtaskCount == nil {
		var ret int32
		return ret
	}
	return *o.CancelledVmtaskCount
}

// GetCancelledVmtaskCountOk returns a tuple with the CancelledVmtaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetCancelledVmtaskCountOk() (*int32, bool) {
	if o == nil || o.CancelledVmtaskCount == nil {
		return nil, false
	}
	return o.CancelledVmtaskCount, true
}

// HasCancelledVmtaskCount returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasCancelledVmtaskCount() bool {
	if o != nil && o.CancelledVmtaskCount != nil {
		return true
	}

	return false
}

// SetCancelledVmtaskCount gets a reference to the given int32 and assigns it to the CancelledVmtaskCount field.
func (o *DesktopPoolTaskInfo) SetCancelledVmtaskCount(v int32) {
	o.CancelledVmtaskCount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DesktopPoolTaskInfo) SetDescription(v string) {
	o.Description = &v
}

// GetErrorVmtaskCount returns the ErrorVmtaskCount field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetErrorVmtaskCount() int32 {
	if o == nil || o.ErrorVmtaskCount == nil {
		var ret int32
		return ret
	}
	return *o.ErrorVmtaskCount
}

// GetErrorVmtaskCountOk returns a tuple with the ErrorVmtaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetErrorVmtaskCountOk() (*int32, bool) {
	if o == nil || o.ErrorVmtaskCount == nil {
		return nil, false
	}
	return o.ErrorVmtaskCount, true
}

// HasErrorVmtaskCount returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasErrorVmtaskCount() bool {
	if o != nil && o.ErrorVmtaskCount != nil {
		return true
	}

	return false
}

// SetErrorVmtaskCount gets a reference to the given int32 and assigns it to the ErrorVmtaskCount field.
func (o *DesktopPoolTaskInfo) SetErrorVmtaskCount(v int32) {
	o.ErrorVmtaskCount = &v
}

// GetHaltedVmtaskCount returns the HaltedVmtaskCount field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetHaltedVmtaskCount() int32 {
	if o == nil || o.HaltedVmtaskCount == nil {
		var ret int32
		return ret
	}
	return *o.HaltedVmtaskCount
}

// GetHaltedVmtaskCountOk returns a tuple with the HaltedVmtaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetHaltedVmtaskCountOk() (*int32, bool) {
	if o == nil || o.HaltedVmtaskCount == nil {
		return nil, false
	}
	return o.HaltedVmtaskCount, true
}

// HasHaltedVmtaskCount returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasHaltedVmtaskCount() bool {
	if o != nil && o.HaltedVmtaskCount != nil {
		return true
	}

	return false
}

// SetHaltedVmtaskCount gets a reference to the given int32 and assigns it to the HaltedVmtaskCount field.
func (o *DesktopPoolTaskInfo) SetHaltedVmtaskCount(v int32) {
	o.HaltedVmtaskCount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DesktopPoolTaskInfo) SetId(v string) {
	o.Id = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetOperation() string {
	if o == nil || o.Operation == nil {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetOperationOk() (*string, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *DesktopPoolTaskInfo) SetOperation(v string) {
	o.Operation = &v
}

// GetRemainingVmtaskCount returns the RemainingVmtaskCount field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetRemainingVmtaskCount() int32 {
	if o == nil || o.RemainingVmtaskCount == nil {
		var ret int32
		return ret
	}
	return *o.RemainingVmtaskCount
}

// GetRemainingVmtaskCountOk returns a tuple with the RemainingVmtaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetRemainingVmtaskCountOk() (*int32, bool) {
	if o == nil || o.RemainingVmtaskCount == nil {
		return nil, false
	}
	return o.RemainingVmtaskCount, true
}

// HasRemainingVmtaskCount returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasRemainingVmtaskCount() bool {
	if o != nil && o.RemainingVmtaskCount != nil {
		return true
	}

	return false
}

// SetRemainingVmtaskCount gets a reference to the given int32 and assigns it to the RemainingVmtaskCount field.
func (o *DesktopPoolTaskInfo) SetRemainingVmtaskCount(v int32) {
	o.RemainingVmtaskCount = &v
}

// GetScheduleTime returns the ScheduleTime field value if set, zero value otherwise.
func (o *DesktopPoolTaskInfo) GetScheduleTime() int64 {
	if o == nil || o.ScheduleTime == nil {
		var ret int64
		return ret
	}
	return *o.ScheduleTime
}

// GetScheduleTimeOk returns a tuple with the ScheduleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolTaskInfo) GetScheduleTimeOk() (*int64, bool) {
	if o == nil || o.ScheduleTime == nil {
		return nil, false
	}
	return o.ScheduleTime, true
}

// HasScheduleTime returns a boolean if a field has been set.
func (o *DesktopPoolTaskInfo) HasScheduleTime() bool {
	if o != nil && o.ScheduleTime != nil {
		return true
	}

	return false
}

// SetScheduleTime gets a reference to the given int64 and assigns it to the ScheduleTime field.
func (o *DesktopPoolTaskInfo) SetScheduleTime(v int64) {
	o.ScheduleTime = &v
}

func (o DesktopPoolTaskInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CancelledVmtaskCount != nil {
		toSerialize["cancelled_vmtask_count"] = o.CancelledVmtaskCount
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ErrorVmtaskCount != nil {
		toSerialize["error_vmtask_count"] = o.ErrorVmtaskCount
	}
	if o.HaltedVmtaskCount != nil {
		toSerialize["halted_vmtask_count"] = o.HaltedVmtaskCount
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Operation != nil {
		toSerialize["operation"] = o.Operation
	}
	if o.RemainingVmtaskCount != nil {
		toSerialize["remaining_vmtask_count"] = o.RemainingVmtaskCount
	}
	if o.ScheduleTime != nil {
		toSerialize["schedule_time"] = o.ScheduleTime
	}
	return json.Marshal(toSerialize)
}

type NullableDesktopPoolTaskInfo struct {
	value *DesktopPoolTaskInfo
	isSet bool
}

func (v NullableDesktopPoolTaskInfo) Get() *DesktopPoolTaskInfo {
	return v.value
}

func (v *NullableDesktopPoolTaskInfo) Set(val *DesktopPoolTaskInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDesktopPoolTaskInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDesktopPoolTaskInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesktopPoolTaskInfo(val *DesktopPoolTaskInfo) *NullableDesktopPoolTaskInfo {
	return &NullableDesktopPoolTaskInfo{value: val, isSet: true}
}

func (v NullableDesktopPoolTaskInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesktopPoolTaskInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
