/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the SAMLAuthenticatorMonitorConnectionServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SAMLAuthenticatorMonitorConnectionServer{}

// SAMLAuthenticatorMonitorConnectionServer Information about the SAML authenticator connection from a connection server.
type SAMLAuthenticatorMonitorConnectionServer struct {
	// Unique ID of the Connection Server.
	Id *string `json:"id,omitempty"`
	// Connection server host name or IP address.
	Name *string `json:"name,omitempty"`
	// Status of the SAML authenticator with respect to this Connection Server. * OK: The connection to SAML authenticator is working properly. * ERROR: Error occurred when connecting to SAML authenticator. * WARN: The connection to SAML authenticator has minor issues. * UNKNOWN: State of SAML authenticator is unknown.
	Status *string `json:"status,omitempty"`
	// Indicates if the thumbprint of the SAML authenticator was accepted.
	ThumbprintAccepted *bool `json:"thumbprint_accepted,omitempty"`
}

// NewSAMLAuthenticatorMonitorConnectionServer instantiates a new SAMLAuthenticatorMonitorConnectionServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSAMLAuthenticatorMonitorConnectionServer() *SAMLAuthenticatorMonitorConnectionServer {
	this := SAMLAuthenticatorMonitorConnectionServer{}
	return &this
}

// NewSAMLAuthenticatorMonitorConnectionServerWithDefaults instantiates a new SAMLAuthenticatorMonitorConnectionServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSAMLAuthenticatorMonitorConnectionServerWithDefaults() *SAMLAuthenticatorMonitorConnectionServer {
	this := SAMLAuthenticatorMonitorConnectionServer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SAMLAuthenticatorMonitorConnectionServer) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SAMLAuthenticatorMonitorConnectionServer) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SAMLAuthenticatorMonitorConnectionServer) SetStatus(v string) {
	o.Status = &v
}

// GetThumbprintAccepted returns the ThumbprintAccepted field value if set, zero value otherwise.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetThumbprintAccepted() bool {
	if o == nil || IsNil(o.ThumbprintAccepted) {
		var ret bool
		return ret
	}
	return *o.ThumbprintAccepted
}

// GetThumbprintAcceptedOk returns a tuple with the ThumbprintAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) GetThumbprintAcceptedOk() (*bool, bool) {
	if o == nil || IsNil(o.ThumbprintAccepted) {
		return nil, false
	}
	return o.ThumbprintAccepted, true
}

// HasThumbprintAccepted returns a boolean if a field has been set.
func (o *SAMLAuthenticatorMonitorConnectionServer) HasThumbprintAccepted() bool {
	if o != nil && !IsNil(o.ThumbprintAccepted) {
		return true
	}

	return false
}

// SetThumbprintAccepted gets a reference to the given bool and assigns it to the ThumbprintAccepted field.
func (o *SAMLAuthenticatorMonitorConnectionServer) SetThumbprintAccepted(v bool) {
	o.ThumbprintAccepted = &v
}

func (o SAMLAuthenticatorMonitorConnectionServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SAMLAuthenticatorMonitorConnectionServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ThumbprintAccepted) {
		toSerialize["thumbprint_accepted"] = o.ThumbprintAccepted
	}
	return toSerialize, nil
}

type NullableSAMLAuthenticatorMonitorConnectionServer struct {
	value *SAMLAuthenticatorMonitorConnectionServer
	isSet bool
}

func (v NullableSAMLAuthenticatorMonitorConnectionServer) Get() *SAMLAuthenticatorMonitorConnectionServer {
	return v.value
}

func (v *NullableSAMLAuthenticatorMonitorConnectionServer) Set(val *SAMLAuthenticatorMonitorConnectionServer) {
	v.value = val
	v.isSet = true
}

func (v NullableSAMLAuthenticatorMonitorConnectionServer) IsSet() bool {
	return v.isSet
}

func (v *NullableSAMLAuthenticatorMonitorConnectionServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSAMLAuthenticatorMonitorConnectionServer(val *SAMLAuthenticatorMonitorConnectionServer) *NullableSAMLAuthenticatorMonitorConnectionServer {
	return &NullableSAMLAuthenticatorMonitorConnectionServer{value: val, isSet: true}
}

func (v NullableSAMLAuthenticatorMonitorConnectionServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSAMLAuthenticatorMonitorConnectionServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


