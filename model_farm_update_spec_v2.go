/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FarmUpdateSpecV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FarmUpdateSpecV2{}

// FarmUpdateSpecV2 Information required to update a farm.
type FarmUpdateSpecV2 struct {
	// Access groups can organize the entities such as farms in the organization. They can also be used for delegated administration.
	AccessGroupId string `json:"access_group_id"`
	AutomatedFarmSettings *FarmAutomatedSettingsUpdateSpecV2 `json:"automated_farm_settings,omitempty"`
	// Description of the farm.
	Description *string `json:"description,omitempty"`
	// Display name of the farm.
	DisplayName string `json:"display_name"`
	DisplayProtocolSettings FarmDisplayProtocolSettingsUpdateSpec `json:"display_protocol_settings"`
	// Indicates whether the farm is enabled for brokering.
	Enabled bool `json:"enabled"`
	LoadBalancerSettings *RDSHLoadBalancerSettingsUpdateSpec `json:"load_balancer_settings,omitempty"`
	// The minimum number of machines that must be fully operational in order to avoid showing the farm in an error state. 
	ServerErrorThreshold int32 `json:"server_error_threshold"`
	SessionSettings FarmSessionSettingsUpdateSpec `json:"session_settings"`
	// Indicates whether to use custom scripts for load balancing or not. 
	UseCustomScriptForLoadBalancing bool `json:"use_custom_script_for_load_balancing"`
}

type _FarmUpdateSpecV2 FarmUpdateSpecV2

// NewFarmUpdateSpecV2 instantiates a new FarmUpdateSpecV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFarmUpdateSpecV2(accessGroupId string, displayName string, displayProtocolSettings FarmDisplayProtocolSettingsUpdateSpec, enabled bool, serverErrorThreshold int32, sessionSettings FarmSessionSettingsUpdateSpec, useCustomScriptForLoadBalancing bool) *FarmUpdateSpecV2 {
	this := FarmUpdateSpecV2{}
	this.AccessGroupId = accessGroupId
	this.DisplayName = displayName
	this.DisplayProtocolSettings = displayProtocolSettings
	this.Enabled = enabled
	this.ServerErrorThreshold = serverErrorThreshold
	this.SessionSettings = sessionSettings
	this.UseCustomScriptForLoadBalancing = useCustomScriptForLoadBalancing
	return &this
}

// NewFarmUpdateSpecV2WithDefaults instantiates a new FarmUpdateSpecV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFarmUpdateSpecV2WithDefaults() *FarmUpdateSpecV2 {
	this := FarmUpdateSpecV2{}
	return &this
}

// GetAccessGroupId returns the AccessGroupId field value
func (o *FarmUpdateSpecV2) GetAccessGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessGroupId
}

// GetAccessGroupIdOk returns a tuple with the AccessGroupId field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetAccessGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessGroupId, true
}

// SetAccessGroupId sets field value
func (o *FarmUpdateSpecV2) SetAccessGroupId(v string) {
	o.AccessGroupId = v
}

// GetAutomatedFarmSettings returns the AutomatedFarmSettings field value if set, zero value otherwise.
func (o *FarmUpdateSpecV2) GetAutomatedFarmSettings() FarmAutomatedSettingsUpdateSpecV2 {
	if o == nil || IsNil(o.AutomatedFarmSettings) {
		var ret FarmAutomatedSettingsUpdateSpecV2
		return ret
	}
	return *o.AutomatedFarmSettings
}

// GetAutomatedFarmSettingsOk returns a tuple with the AutomatedFarmSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetAutomatedFarmSettingsOk() (*FarmAutomatedSettingsUpdateSpecV2, bool) {
	if o == nil || IsNil(o.AutomatedFarmSettings) {
		return nil, false
	}
	return o.AutomatedFarmSettings, true
}

// HasAutomatedFarmSettings returns a boolean if a field has been set.
func (o *FarmUpdateSpecV2) HasAutomatedFarmSettings() bool {
	if o != nil && !IsNil(o.AutomatedFarmSettings) {
		return true
	}

	return false
}

// SetAutomatedFarmSettings gets a reference to the given FarmAutomatedSettingsUpdateSpecV2 and assigns it to the AutomatedFarmSettings field.
func (o *FarmUpdateSpecV2) SetAutomatedFarmSettings(v FarmAutomatedSettingsUpdateSpecV2) {
	o.AutomatedFarmSettings = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FarmUpdateSpecV2) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FarmUpdateSpecV2) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FarmUpdateSpecV2) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value
func (o *FarmUpdateSpecV2) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *FarmUpdateSpecV2) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDisplayProtocolSettings returns the DisplayProtocolSettings field value
func (o *FarmUpdateSpecV2) GetDisplayProtocolSettings() FarmDisplayProtocolSettingsUpdateSpec {
	if o == nil {
		var ret FarmDisplayProtocolSettingsUpdateSpec
		return ret
	}

	return o.DisplayProtocolSettings
}

// GetDisplayProtocolSettingsOk returns a tuple with the DisplayProtocolSettings field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetDisplayProtocolSettingsOk() (*FarmDisplayProtocolSettingsUpdateSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayProtocolSettings, true
}

// SetDisplayProtocolSettings sets field value
func (o *FarmUpdateSpecV2) SetDisplayProtocolSettings(v FarmDisplayProtocolSettingsUpdateSpec) {
	o.DisplayProtocolSettings = v
}

// GetEnabled returns the Enabled field value
func (o *FarmUpdateSpecV2) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *FarmUpdateSpecV2) SetEnabled(v bool) {
	o.Enabled = v
}

// GetLoadBalancerSettings returns the LoadBalancerSettings field value if set, zero value otherwise.
func (o *FarmUpdateSpecV2) GetLoadBalancerSettings() RDSHLoadBalancerSettingsUpdateSpec {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		var ret RDSHLoadBalancerSettingsUpdateSpec
		return ret
	}
	return *o.LoadBalancerSettings
}

// GetLoadBalancerSettingsOk returns a tuple with the LoadBalancerSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetLoadBalancerSettingsOk() (*RDSHLoadBalancerSettingsUpdateSpec, bool) {
	if o == nil || IsNil(o.LoadBalancerSettings) {
		return nil, false
	}
	return o.LoadBalancerSettings, true
}

// HasLoadBalancerSettings returns a boolean if a field has been set.
func (o *FarmUpdateSpecV2) HasLoadBalancerSettings() bool {
	if o != nil && !IsNil(o.LoadBalancerSettings) {
		return true
	}

	return false
}

// SetLoadBalancerSettings gets a reference to the given RDSHLoadBalancerSettingsUpdateSpec and assigns it to the LoadBalancerSettings field.
func (o *FarmUpdateSpecV2) SetLoadBalancerSettings(v RDSHLoadBalancerSettingsUpdateSpec) {
	o.LoadBalancerSettings = &v
}

// GetServerErrorThreshold returns the ServerErrorThreshold field value
func (o *FarmUpdateSpecV2) GetServerErrorThreshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServerErrorThreshold
}

// GetServerErrorThresholdOk returns a tuple with the ServerErrorThreshold field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetServerErrorThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerErrorThreshold, true
}

// SetServerErrorThreshold sets field value
func (o *FarmUpdateSpecV2) SetServerErrorThreshold(v int32) {
	o.ServerErrorThreshold = v
}

// GetSessionSettings returns the SessionSettings field value
func (o *FarmUpdateSpecV2) GetSessionSettings() FarmSessionSettingsUpdateSpec {
	if o == nil {
		var ret FarmSessionSettingsUpdateSpec
		return ret
	}

	return o.SessionSettings
}

// GetSessionSettingsOk returns a tuple with the SessionSettings field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetSessionSettingsOk() (*FarmSessionSettingsUpdateSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionSettings, true
}

// SetSessionSettings sets field value
func (o *FarmUpdateSpecV2) SetSessionSettings(v FarmSessionSettingsUpdateSpec) {
	o.SessionSettings = v
}

// GetUseCustomScriptForLoadBalancing returns the UseCustomScriptForLoadBalancing field value
func (o *FarmUpdateSpecV2) GetUseCustomScriptForLoadBalancing() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseCustomScriptForLoadBalancing
}

// GetUseCustomScriptForLoadBalancingOk returns a tuple with the UseCustomScriptForLoadBalancing field value
// and a boolean to check if the value has been set.
func (o *FarmUpdateSpecV2) GetUseCustomScriptForLoadBalancingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseCustomScriptForLoadBalancing, true
}

// SetUseCustomScriptForLoadBalancing sets field value
func (o *FarmUpdateSpecV2) SetUseCustomScriptForLoadBalancing(v bool) {
	o.UseCustomScriptForLoadBalancing = v
}

func (o FarmUpdateSpecV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FarmUpdateSpecV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_group_id"] = o.AccessGroupId
	if !IsNil(o.AutomatedFarmSettings) {
		toSerialize["automated_farm_settings"] = o.AutomatedFarmSettings
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["display_name"] = o.DisplayName
	toSerialize["display_protocol_settings"] = o.DisplayProtocolSettings
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.LoadBalancerSettings) {
		toSerialize["load_balancer_settings"] = o.LoadBalancerSettings
	}
	toSerialize["server_error_threshold"] = o.ServerErrorThreshold
	toSerialize["session_settings"] = o.SessionSettings
	toSerialize["use_custom_script_for_load_balancing"] = o.UseCustomScriptForLoadBalancing
	return toSerialize, nil
}

func (o *FarmUpdateSpecV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_group_id",
		"display_name",
		"display_protocol_settings",
		"enabled",
		"server_error_threshold",
		"session_settings",
		"use_custom_script_for_load_balancing",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFarmUpdateSpecV2 := _FarmUpdateSpecV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFarmUpdateSpecV2)

	if err != nil {
		return err
	}

	*o = FarmUpdateSpecV2(varFarmUpdateSpecV2)

	return err
}

type NullableFarmUpdateSpecV2 struct {
	value *FarmUpdateSpecV2
	isSet bool
}

func (v NullableFarmUpdateSpecV2) Get() *FarmUpdateSpecV2 {
	return v.value
}

func (v *NullableFarmUpdateSpecV2) Set(val *FarmUpdateSpecV2) {
	v.value = val
	v.isSet = true
}

func (v NullableFarmUpdateSpecV2) IsSet() bool {
	return v.isSet
}

func (v *NullableFarmUpdateSpecV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFarmUpdateSpecV2(val *FarmUpdateSpecV2) *NullableFarmUpdateSpecV2 {
	return &NullableFarmUpdateSpecV2{value: val, isSet: true}
}

func (v NullableFarmUpdateSpecV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFarmUpdateSpecV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


