/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the DesktopPoolProvisioningSettingsV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DesktopPoolProvisioningSettingsV2{}

// DesktopPoolProvisioningSettingsV2 Virtual Center provisioning settings for the automated desktop pool.
type DesktopPoolProvisioningSettingsV2 struct {
	// Whether to add Virtual TPM device.
	AddVirtualTpm *bool `json:"add_virtual_tpm,omitempty"`
	// Applicable To: Linked/instant clone automated desktop pools.<br>Base image snapshot for linked clone desktop pool and current image snapshot for instant clone desktop pool.
	BaseSnapshotId *string `json:"base_snapshot_id,omitempty"`
	// Indicates the number of cores per socket for the CPU in the compute profile configured on clones.
	ComputeProfileNumCoresPerSocket *int32 `json:"compute_profile_num_cores_per_socket,omitempty"`
	// Indicates the number of CPUs in the compute profile configured on clones.
	ComputeProfileNumCpus *int32 `json:"compute_profile_num_cpus,omitempty"`
	// Indicates the RAM in MB in the compute profile configured on clones.
	ComputeProfileRamMb *int32 `json:"compute_profile_ram_mb,omitempty"`
	// Datacenter within which the desktop pool is configured.
	DatacenterId *string `json:"datacenter_id,omitempty"`
	// Host or cluster where the machines are deployed in.
	HostOrClusterId *string `json:"host_or_cluster_id,omitempty"`
	// Applicable To: Full/instant clone automated desktop pools.<br>Image management stream used in desktop pool when Image Management feature is enabled.<br>Supported Filters: 'Equals'.
	ImStreamId *string `json:"im_stream_id,omitempty"`
	// Applicable To: Full/instant clone automated desktop pools.<br>Image management tag associated with the selected image management stream which is used in desktop pool when Image Management feature is enabled.<br>Supported Filters: 'Equals'.
	ImTagId *string `json:"im_tag_id,omitempty"`
	// Applicable To: Linked clone automated desktop pools.<br>Minimum number of ready (provisioned) machines during View Composer maintenance operations.
	MinReadyVmsOnVcomposerMaintenance *int32 `json:"min_ready_vms_on_vcomposer_maintenance,omitempty"`
	// Applicable To: Linked/instant clone automated desktop pools.<br>Base image VM for linked clone desktop pool and current image for instant clone desktop pool.
	ParentVmId *string `json:"parent_vm_id,omitempty"`
	// Resource pool to deploy the machines.
	ResourcePoolId *string `json:"resource_pool_id,omitempty"`
	// VM folder where the machines are deployed to.
	VmFolderId *string `json:"vm_folder_id,omitempty"`
	// Applicable To: Full clone automated desktop pools.<br>Template from which full clone machines are deployed.
	VmTemplateId *string `json:"vm_template_id,omitempty"`
}

// NewDesktopPoolProvisioningSettingsV2 instantiates a new DesktopPoolProvisioningSettingsV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesktopPoolProvisioningSettingsV2() *DesktopPoolProvisioningSettingsV2 {
	this := DesktopPoolProvisioningSettingsV2{}
	return &this
}

// NewDesktopPoolProvisioningSettingsV2WithDefaults instantiates a new DesktopPoolProvisioningSettingsV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesktopPoolProvisioningSettingsV2WithDefaults() *DesktopPoolProvisioningSettingsV2 {
	this := DesktopPoolProvisioningSettingsV2{}
	return &this
}

// GetAddVirtualTpm returns the AddVirtualTpm field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetAddVirtualTpm() bool {
	if o == nil || IsNil(o.AddVirtualTpm) {
		var ret bool
		return ret
	}
	return *o.AddVirtualTpm
}

// GetAddVirtualTpmOk returns a tuple with the AddVirtualTpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetAddVirtualTpmOk() (*bool, bool) {
	if o == nil || IsNil(o.AddVirtualTpm) {
		return nil, false
	}
	return o.AddVirtualTpm, true
}

// HasAddVirtualTpm returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasAddVirtualTpm() bool {
	if o != nil && !IsNil(o.AddVirtualTpm) {
		return true
	}

	return false
}

// SetAddVirtualTpm gets a reference to the given bool and assigns it to the AddVirtualTpm field.
func (o *DesktopPoolProvisioningSettingsV2) SetAddVirtualTpm(v bool) {
	o.AddVirtualTpm = &v
}

// GetBaseSnapshotId returns the BaseSnapshotId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetBaseSnapshotId() string {
	if o == nil || IsNil(o.BaseSnapshotId) {
		var ret string
		return ret
	}
	return *o.BaseSnapshotId
}

// GetBaseSnapshotIdOk returns a tuple with the BaseSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetBaseSnapshotIdOk() (*string, bool) {
	if o == nil || IsNil(o.BaseSnapshotId) {
		return nil, false
	}
	return o.BaseSnapshotId, true
}

// HasBaseSnapshotId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasBaseSnapshotId() bool {
	if o != nil && !IsNil(o.BaseSnapshotId) {
		return true
	}

	return false
}

// SetBaseSnapshotId gets a reference to the given string and assigns it to the BaseSnapshotId field.
func (o *DesktopPoolProvisioningSettingsV2) SetBaseSnapshotId(v string) {
	o.BaseSnapshotId = &v
}

// GetComputeProfileNumCoresPerSocket returns the ComputeProfileNumCoresPerSocket field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetComputeProfileNumCoresPerSocket() int32 {
	if o == nil || IsNil(o.ComputeProfileNumCoresPerSocket) {
		var ret int32
		return ret
	}
	return *o.ComputeProfileNumCoresPerSocket
}

// GetComputeProfileNumCoresPerSocketOk returns a tuple with the ComputeProfileNumCoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetComputeProfileNumCoresPerSocketOk() (*int32, bool) {
	if o == nil || IsNil(o.ComputeProfileNumCoresPerSocket) {
		return nil, false
	}
	return o.ComputeProfileNumCoresPerSocket, true
}

// HasComputeProfileNumCoresPerSocket returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasComputeProfileNumCoresPerSocket() bool {
	if o != nil && !IsNil(o.ComputeProfileNumCoresPerSocket) {
		return true
	}

	return false
}

// SetComputeProfileNumCoresPerSocket gets a reference to the given int32 and assigns it to the ComputeProfileNumCoresPerSocket field.
func (o *DesktopPoolProvisioningSettingsV2) SetComputeProfileNumCoresPerSocket(v int32) {
	o.ComputeProfileNumCoresPerSocket = &v
}

// GetComputeProfileNumCpus returns the ComputeProfileNumCpus field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetComputeProfileNumCpus() int32 {
	if o == nil || IsNil(o.ComputeProfileNumCpus) {
		var ret int32
		return ret
	}
	return *o.ComputeProfileNumCpus
}

// GetComputeProfileNumCpusOk returns a tuple with the ComputeProfileNumCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetComputeProfileNumCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.ComputeProfileNumCpus) {
		return nil, false
	}
	return o.ComputeProfileNumCpus, true
}

// HasComputeProfileNumCpus returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasComputeProfileNumCpus() bool {
	if o != nil && !IsNil(o.ComputeProfileNumCpus) {
		return true
	}

	return false
}

// SetComputeProfileNumCpus gets a reference to the given int32 and assigns it to the ComputeProfileNumCpus field.
func (o *DesktopPoolProvisioningSettingsV2) SetComputeProfileNumCpus(v int32) {
	o.ComputeProfileNumCpus = &v
}

// GetComputeProfileRamMb returns the ComputeProfileRamMb field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetComputeProfileRamMb() int32 {
	if o == nil || IsNil(o.ComputeProfileRamMb) {
		var ret int32
		return ret
	}
	return *o.ComputeProfileRamMb
}

// GetComputeProfileRamMbOk returns a tuple with the ComputeProfileRamMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetComputeProfileRamMbOk() (*int32, bool) {
	if o == nil || IsNil(o.ComputeProfileRamMb) {
		return nil, false
	}
	return o.ComputeProfileRamMb, true
}

// HasComputeProfileRamMb returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasComputeProfileRamMb() bool {
	if o != nil && !IsNil(o.ComputeProfileRamMb) {
		return true
	}

	return false
}

// SetComputeProfileRamMb gets a reference to the given int32 and assigns it to the ComputeProfileRamMb field.
func (o *DesktopPoolProvisioningSettingsV2) SetComputeProfileRamMb(v int32) {
	o.ComputeProfileRamMb = &v
}

// GetDatacenterId returns the DatacenterId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetDatacenterId() string {
	if o == nil || IsNil(o.DatacenterId) {
		var ret string
		return ret
	}
	return *o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetDatacenterIdOk() (*string, bool) {
	if o == nil || IsNil(o.DatacenterId) {
		return nil, false
	}
	return o.DatacenterId, true
}

// HasDatacenterId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasDatacenterId() bool {
	if o != nil && !IsNil(o.DatacenterId) {
		return true
	}

	return false
}

// SetDatacenterId gets a reference to the given string and assigns it to the DatacenterId field.
func (o *DesktopPoolProvisioningSettingsV2) SetDatacenterId(v string) {
	o.DatacenterId = &v
}

// GetHostOrClusterId returns the HostOrClusterId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetHostOrClusterId() string {
	if o == nil || IsNil(o.HostOrClusterId) {
		var ret string
		return ret
	}
	return *o.HostOrClusterId
}

// GetHostOrClusterIdOk returns a tuple with the HostOrClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetHostOrClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostOrClusterId) {
		return nil, false
	}
	return o.HostOrClusterId, true
}

// HasHostOrClusterId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasHostOrClusterId() bool {
	if o != nil && !IsNil(o.HostOrClusterId) {
		return true
	}

	return false
}

// SetHostOrClusterId gets a reference to the given string and assigns it to the HostOrClusterId field.
func (o *DesktopPoolProvisioningSettingsV2) SetHostOrClusterId(v string) {
	o.HostOrClusterId = &v
}

// GetImStreamId returns the ImStreamId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetImStreamId() string {
	if o == nil || IsNil(o.ImStreamId) {
		var ret string
		return ret
	}
	return *o.ImStreamId
}

// GetImStreamIdOk returns a tuple with the ImStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetImStreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImStreamId) {
		return nil, false
	}
	return o.ImStreamId, true
}

// HasImStreamId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasImStreamId() bool {
	if o != nil && !IsNil(o.ImStreamId) {
		return true
	}

	return false
}

// SetImStreamId gets a reference to the given string and assigns it to the ImStreamId field.
func (o *DesktopPoolProvisioningSettingsV2) SetImStreamId(v string) {
	o.ImStreamId = &v
}

// GetImTagId returns the ImTagId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetImTagId() string {
	if o == nil || IsNil(o.ImTagId) {
		var ret string
		return ret
	}
	return *o.ImTagId
}

// GetImTagIdOk returns a tuple with the ImTagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetImTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImTagId) {
		return nil, false
	}
	return o.ImTagId, true
}

// HasImTagId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasImTagId() bool {
	if o != nil && !IsNil(o.ImTagId) {
		return true
	}

	return false
}

// SetImTagId gets a reference to the given string and assigns it to the ImTagId field.
func (o *DesktopPoolProvisioningSettingsV2) SetImTagId(v string) {
	o.ImTagId = &v
}

// GetMinReadyVmsOnVcomposerMaintenance returns the MinReadyVmsOnVcomposerMaintenance field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetMinReadyVmsOnVcomposerMaintenance() int32 {
	if o == nil || IsNil(o.MinReadyVmsOnVcomposerMaintenance) {
		var ret int32
		return ret
	}
	return *o.MinReadyVmsOnVcomposerMaintenance
}

// GetMinReadyVmsOnVcomposerMaintenanceOk returns a tuple with the MinReadyVmsOnVcomposerMaintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetMinReadyVmsOnVcomposerMaintenanceOk() (*int32, bool) {
	if o == nil || IsNil(o.MinReadyVmsOnVcomposerMaintenance) {
		return nil, false
	}
	return o.MinReadyVmsOnVcomposerMaintenance, true
}

// HasMinReadyVmsOnVcomposerMaintenance returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasMinReadyVmsOnVcomposerMaintenance() bool {
	if o != nil && !IsNil(o.MinReadyVmsOnVcomposerMaintenance) {
		return true
	}

	return false
}

// SetMinReadyVmsOnVcomposerMaintenance gets a reference to the given int32 and assigns it to the MinReadyVmsOnVcomposerMaintenance field.
func (o *DesktopPoolProvisioningSettingsV2) SetMinReadyVmsOnVcomposerMaintenance(v int32) {
	o.MinReadyVmsOnVcomposerMaintenance = &v
}

// GetParentVmId returns the ParentVmId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetParentVmId() string {
	if o == nil || IsNil(o.ParentVmId) {
		var ret string
		return ret
	}
	return *o.ParentVmId
}

// GetParentVmIdOk returns a tuple with the ParentVmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetParentVmIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentVmId) {
		return nil, false
	}
	return o.ParentVmId, true
}

// HasParentVmId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasParentVmId() bool {
	if o != nil && !IsNil(o.ParentVmId) {
		return true
	}

	return false
}

// SetParentVmId gets a reference to the given string and assigns it to the ParentVmId field.
func (o *DesktopPoolProvisioningSettingsV2) SetParentVmId(v string) {
	o.ParentVmId = &v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetResourcePoolId() string {
	if o == nil || IsNil(o.ResourcePoolId) {
		var ret string
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetResourcePoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourcePoolId) {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// HasResourcePoolId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasResourcePoolId() bool {
	if o != nil && !IsNil(o.ResourcePoolId) {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given string and assigns it to the ResourcePoolId field.
func (o *DesktopPoolProvisioningSettingsV2) SetResourcePoolId(v string) {
	o.ResourcePoolId = &v
}

// GetVmFolderId returns the VmFolderId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetVmFolderId() string {
	if o == nil || IsNil(o.VmFolderId) {
		var ret string
		return ret
	}
	return *o.VmFolderId
}

// GetVmFolderIdOk returns a tuple with the VmFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetVmFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.VmFolderId) {
		return nil, false
	}
	return o.VmFolderId, true
}

// HasVmFolderId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasVmFolderId() bool {
	if o != nil && !IsNil(o.VmFolderId) {
		return true
	}

	return false
}

// SetVmFolderId gets a reference to the given string and assigns it to the VmFolderId field.
func (o *DesktopPoolProvisioningSettingsV2) SetVmFolderId(v string) {
	o.VmFolderId = &v
}

// GetVmTemplateId returns the VmTemplateId field value if set, zero value otherwise.
func (o *DesktopPoolProvisioningSettingsV2) GetVmTemplateId() string {
	if o == nil || IsNil(o.VmTemplateId) {
		var ret string
		return ret
	}
	return *o.VmTemplateId
}

// GetVmTemplateIdOk returns a tuple with the VmTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesktopPoolProvisioningSettingsV2) GetVmTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.VmTemplateId) {
		return nil, false
	}
	return o.VmTemplateId, true
}

// HasVmTemplateId returns a boolean if a field has been set.
func (o *DesktopPoolProvisioningSettingsV2) HasVmTemplateId() bool {
	if o != nil && !IsNil(o.VmTemplateId) {
		return true
	}

	return false
}

// SetVmTemplateId gets a reference to the given string and assigns it to the VmTemplateId field.
func (o *DesktopPoolProvisioningSettingsV2) SetVmTemplateId(v string) {
	o.VmTemplateId = &v
}

func (o DesktopPoolProvisioningSettingsV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DesktopPoolProvisioningSettingsV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddVirtualTpm) {
		toSerialize["add_virtual_tpm"] = o.AddVirtualTpm
	}
	if !IsNil(o.BaseSnapshotId) {
		toSerialize["base_snapshot_id"] = o.BaseSnapshotId
	}
	if !IsNil(o.ComputeProfileNumCoresPerSocket) {
		toSerialize["compute_profile_num_cores_per_socket"] = o.ComputeProfileNumCoresPerSocket
	}
	if !IsNil(o.ComputeProfileNumCpus) {
		toSerialize["compute_profile_num_cpus"] = o.ComputeProfileNumCpus
	}
	if !IsNil(o.ComputeProfileRamMb) {
		toSerialize["compute_profile_ram_mb"] = o.ComputeProfileRamMb
	}
	if !IsNil(o.DatacenterId) {
		toSerialize["datacenter_id"] = o.DatacenterId
	}
	if !IsNil(o.HostOrClusterId) {
		toSerialize["host_or_cluster_id"] = o.HostOrClusterId
	}
	if !IsNil(o.ImStreamId) {
		toSerialize["im_stream_id"] = o.ImStreamId
	}
	if !IsNil(o.ImTagId) {
		toSerialize["im_tag_id"] = o.ImTagId
	}
	if !IsNil(o.MinReadyVmsOnVcomposerMaintenance) {
		toSerialize["min_ready_vms_on_vcomposer_maintenance"] = o.MinReadyVmsOnVcomposerMaintenance
	}
	if !IsNil(o.ParentVmId) {
		toSerialize["parent_vm_id"] = o.ParentVmId
	}
	if !IsNil(o.ResourcePoolId) {
		toSerialize["resource_pool_id"] = o.ResourcePoolId
	}
	if !IsNil(o.VmFolderId) {
		toSerialize["vm_folder_id"] = o.VmFolderId
	}
	if !IsNil(o.VmTemplateId) {
		toSerialize["vm_template_id"] = o.VmTemplateId
	}
	return toSerialize, nil
}

type NullableDesktopPoolProvisioningSettingsV2 struct {
	value *DesktopPoolProvisioningSettingsV2
	isSet bool
}

func (v NullableDesktopPoolProvisioningSettingsV2) Get() *DesktopPoolProvisioningSettingsV2 {
	return v.value
}

func (v *NullableDesktopPoolProvisioningSettingsV2) Set(val *DesktopPoolProvisioningSettingsV2) {
	v.value = val
	v.isSet = true
}

func (v NullableDesktopPoolProvisioningSettingsV2) IsSet() bool {
	return v.isSet
}

func (v *NullableDesktopPoolProvisioningSettingsV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesktopPoolProvisioningSettingsV2(val *DesktopPoolProvisioningSettingsV2) *NullableDesktopPoolProvisioningSettingsV2 {
	return &NullableDesktopPoolProvisioningSettingsV2{value: val, isSet: true}
}

func (v NullableDesktopPoolProvisioningSettingsV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesktopPoolProvisioningSettingsV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


