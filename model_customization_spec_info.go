/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// CustomizationSpecInfo Information related to customization specification created in vCenter.
type CustomizationSpecInfo struct {
	// Customization specification description.
	Description *string `json:"description,omitempty"`
	// Guest Operating system. * UNKNOWN: Unknown * WINDOWS: Windows * LINUX: Linux
	GuestOs *string `json:"guest_os,omitempty"`
	// Unique ID representing the customization specification.
	Id *string `json:"id,omitempty"`
	// Reasons that may preclude this customization specification from being used in desktop pool creation.
	IncompatibleReasons *[]string `json:"incompatible_reasons,omitempty"`
	// Name of the customization specification.
	Name *string `json:"name,omitempty"`
}

// NewCustomizationSpecInfo instantiates a new CustomizationSpecInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomizationSpecInfo() *CustomizationSpecInfo {
	this := CustomizationSpecInfo{}
	return &this
}

// NewCustomizationSpecInfoWithDefaults instantiates a new CustomizationSpecInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomizationSpecInfoWithDefaults() *CustomizationSpecInfo {
	this := CustomizationSpecInfo{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomizationSpecInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationSpecInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomizationSpecInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomizationSpecInfo) SetDescription(v string) {
	o.Description = &v
}

// GetGuestOs returns the GuestOs field value if set, zero value otherwise.
func (o *CustomizationSpecInfo) GetGuestOs() string {
	if o == nil || o.GuestOs == nil {
		var ret string
		return ret
	}
	return *o.GuestOs
}

// GetGuestOsOk returns a tuple with the GuestOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationSpecInfo) GetGuestOsOk() (*string, bool) {
	if o == nil || o.GuestOs == nil {
		return nil, false
	}
	return o.GuestOs, true
}

// HasGuestOs returns a boolean if a field has been set.
func (o *CustomizationSpecInfo) HasGuestOs() bool {
	if o != nil && o.GuestOs != nil {
		return true
	}

	return false
}

// SetGuestOs gets a reference to the given string and assigns it to the GuestOs field.
func (o *CustomizationSpecInfo) SetGuestOs(v string) {
	o.GuestOs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomizationSpecInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationSpecInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomizationSpecInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomizationSpecInfo) SetId(v string) {
	o.Id = &v
}

// GetIncompatibleReasons returns the IncompatibleReasons field value if set, zero value otherwise.
func (o *CustomizationSpecInfo) GetIncompatibleReasons() []string {
	if o == nil || o.IncompatibleReasons == nil {
		var ret []string
		return ret
	}
	return *o.IncompatibleReasons
}

// GetIncompatibleReasonsOk returns a tuple with the IncompatibleReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationSpecInfo) GetIncompatibleReasonsOk() (*[]string, bool) {
	if o == nil || o.IncompatibleReasons == nil {
		return nil, false
	}
	return o.IncompatibleReasons, true
}

// HasIncompatibleReasons returns a boolean if a field has been set.
func (o *CustomizationSpecInfo) HasIncompatibleReasons() bool {
	if o != nil && o.IncompatibleReasons != nil {
		return true
	}

	return false
}

// SetIncompatibleReasons gets a reference to the given []string and assigns it to the IncompatibleReasons field.
func (o *CustomizationSpecInfo) SetIncompatibleReasons(v []string) {
	o.IncompatibleReasons = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomizationSpecInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationSpecInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomizationSpecInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomizationSpecInfo) SetName(v string) {
	o.Name = &v
}

func (o CustomizationSpecInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.GuestOs != nil {
		toSerialize["guest_os"] = o.GuestOs
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IncompatibleReasons != nil {
		toSerialize["incompatible_reasons"] = o.IncompatibleReasons
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCustomizationSpecInfo struct {
	value *CustomizationSpecInfo
	isSet bool
}

func (v NullableCustomizationSpecInfo) Get() *CustomizationSpecInfo {
	return v.value
}

func (v *NullableCustomizationSpecInfo) Set(val *CustomizationSpecInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomizationSpecInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomizationSpecInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomizationSpecInfo(val *CustomizationSpecInfo) *NullableCustomizationSpecInfo {
	return &NullableCustomizationSpecInfo{value: val, isSet: true}
}

func (v NullableCustomizationSpecInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomizationSpecInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
