/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// VirtualCenterMonitorInfoV2 Monitoring information related to a Virtual Center
type VirtualCenterMonitorInfoV2 struct {
	// Information about the Virtual Center connections from each of the connection servers.
	ConnectionServers []VCMonitorConnectionServerV2 `json:"connection_servers"`
	// Information about the datastores of the Virtual Center.
	Datastores []VCMonitorDatastore `json:"datastores"`
	// Number of Desktop Pools And Farms managed by the virtual center
	DesktopPoolsAndFarmsCount int32            `json:"desktop_pools_and_farms_count"`
	Details                   VCMonitorDetails `json:"details"`
	// Information about the ESX hosts added in the Virtual Center.
	Hosts []VCMonitorHost `json:"hosts"`
	// Unique ID of the Virtual Center.
	Id string `json:"id"`
	// Virtual Center server name or IP address.
	Name string `json:"name"`
}

// NewVirtualCenterMonitorInfoV2 instantiates a new VirtualCenterMonitorInfoV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualCenterMonitorInfoV2(connectionServers []VCMonitorConnectionServerV2, datastores []VCMonitorDatastore, desktopPoolsAndFarmsCount int32, details VCMonitorDetails, hosts []VCMonitorHost, id string, name string) *VirtualCenterMonitorInfoV2 {
	this := VirtualCenterMonitorInfoV2{}
	this.ConnectionServers = connectionServers
	this.Datastores = datastores
	this.DesktopPoolsAndFarmsCount = desktopPoolsAndFarmsCount
	this.Details = details
	this.Hosts = hosts
	this.Id = id
	this.Name = name
	return &this
}

// NewVirtualCenterMonitorInfoV2WithDefaults instantiates a new VirtualCenterMonitorInfoV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualCenterMonitorInfoV2WithDefaults() *VirtualCenterMonitorInfoV2 {
	this := VirtualCenterMonitorInfoV2{}
	return &this
}

// GetConnectionServers returns the ConnectionServers field value
func (o *VirtualCenterMonitorInfoV2) GetConnectionServers() []VCMonitorConnectionServerV2 {
	if o == nil {
		var ret []VCMonitorConnectionServerV2
		return ret
	}

	return o.ConnectionServers
}

// GetConnectionServersOk returns a tuple with the ConnectionServers field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetConnectionServersOk() (*[]VCMonitorConnectionServerV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionServers, true
}

// SetConnectionServers sets field value
func (o *VirtualCenterMonitorInfoV2) SetConnectionServers(v []VCMonitorConnectionServerV2) {
	o.ConnectionServers = v
}

// GetDatastores returns the Datastores field value
func (o *VirtualCenterMonitorInfoV2) GetDatastores() []VCMonitorDatastore {
	if o == nil {
		var ret []VCMonitorDatastore
		return ret
	}

	return o.Datastores
}

// GetDatastoresOk returns a tuple with the Datastores field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetDatastoresOk() (*[]VCMonitorDatastore, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Datastores, true
}

// SetDatastores sets field value
func (o *VirtualCenterMonitorInfoV2) SetDatastores(v []VCMonitorDatastore) {
	o.Datastores = v
}

// GetDesktopPoolsAndFarmsCount returns the DesktopPoolsAndFarmsCount field value
func (o *VirtualCenterMonitorInfoV2) GetDesktopPoolsAndFarmsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DesktopPoolsAndFarmsCount
}

// GetDesktopPoolsAndFarmsCountOk returns a tuple with the DesktopPoolsAndFarmsCount field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetDesktopPoolsAndFarmsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesktopPoolsAndFarmsCount, true
}

// SetDesktopPoolsAndFarmsCount sets field value
func (o *VirtualCenterMonitorInfoV2) SetDesktopPoolsAndFarmsCount(v int32) {
	o.DesktopPoolsAndFarmsCount = v
}

// GetDetails returns the Details field value
func (o *VirtualCenterMonitorInfoV2) GetDetails() VCMonitorDetails {
	if o == nil {
		var ret VCMonitorDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetDetailsOk() (*VCMonitorDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *VirtualCenterMonitorInfoV2) SetDetails(v VCMonitorDetails) {
	o.Details = v
}

// GetHosts returns the Hosts field value
func (o *VirtualCenterMonitorInfoV2) GetHosts() []VCMonitorHost {
	if o == nil {
		var ret []VCMonitorHost
		return ret
	}

	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetHostsOk() (*[]VCMonitorHost, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hosts, true
}

// SetHosts sets field value
func (o *VirtualCenterMonitorInfoV2) SetHosts(v []VCMonitorHost) {
	o.Hosts = v
}

// GetId returns the Id field value
func (o *VirtualCenterMonitorInfoV2) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VirtualCenterMonitorInfoV2) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *VirtualCenterMonitorInfoV2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VirtualCenterMonitorInfoV2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VirtualCenterMonitorInfoV2) SetName(v string) {
	o.Name = v
}

func (o VirtualCenterMonitorInfoV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connection_servers"] = o.ConnectionServers
	}
	if true {
		toSerialize["datastores"] = o.Datastores
	}
	if true {
		toSerialize["desktop_pools_and_farms_count"] = o.DesktopPoolsAndFarmsCount
	}
	if true {
		toSerialize["details"] = o.Details
	}
	if true {
		toSerialize["hosts"] = o.Hosts
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualCenterMonitorInfoV2 struct {
	value *VirtualCenterMonitorInfoV2
	isSet bool
}

func (v NullableVirtualCenterMonitorInfoV2) Get() *VirtualCenterMonitorInfoV2 {
	return v.value
}

func (v *NullableVirtualCenterMonitorInfoV2) Set(val *VirtualCenterMonitorInfoV2) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualCenterMonitorInfoV2) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualCenterMonitorInfoV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualCenterMonitorInfoV2(val *VirtualCenterMonitorInfoV2) *NullableVirtualCenterMonitorInfoV2 {
	return &NullableVirtualCenterMonitorInfoV2{value: val, isSet: true}
}

func (v NullableVirtualCenterMonitorInfoV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualCenterMonitorInfoV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
