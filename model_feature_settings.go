/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the FeatureSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeatureSettings{}

// FeatureSettings Information related to Feature Settings.
type FeatureSettings struct {
	// Indicates whether this cluster/pod is managed by Horizon Cloud Services. This will be false only when there are no cloud managed machines.
	CloudManaged *bool `json:"cloud_managed,omitempty"`
	// Determines whether Helpdesk feature is enabled or not. By default Helpdesk is enabled.
	EnableHelpdesk *bool `json:"enable_helpdesk,omitempty"`
	// Determines whether Image Management feature is enabled or not. By default Image Management is disabled.
	EnableImageManagement *bool `json:"enable_image_management,omitempty"`
}

// NewFeatureSettings instantiates a new FeatureSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureSettings() *FeatureSettings {
	this := FeatureSettings{}
	return &this
}

// NewFeatureSettingsWithDefaults instantiates a new FeatureSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureSettingsWithDefaults() *FeatureSettings {
	this := FeatureSettings{}
	return &this
}

// GetCloudManaged returns the CloudManaged field value if set, zero value otherwise.
func (o *FeatureSettings) GetCloudManaged() bool {
	if o == nil || IsNil(o.CloudManaged) {
		var ret bool
		return ret
	}
	return *o.CloudManaged
}

// GetCloudManagedOk returns a tuple with the CloudManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureSettings) GetCloudManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CloudManaged) {
		return nil, false
	}
	return o.CloudManaged, true
}

// HasCloudManaged returns a boolean if a field has been set.
func (o *FeatureSettings) HasCloudManaged() bool {
	if o != nil && !IsNil(o.CloudManaged) {
		return true
	}

	return false
}

// SetCloudManaged gets a reference to the given bool and assigns it to the CloudManaged field.
func (o *FeatureSettings) SetCloudManaged(v bool) {
	o.CloudManaged = &v
}

// GetEnableHelpdesk returns the EnableHelpdesk field value if set, zero value otherwise.
func (o *FeatureSettings) GetEnableHelpdesk() bool {
	if o == nil || IsNil(o.EnableHelpdesk) {
		var ret bool
		return ret
	}
	return *o.EnableHelpdesk
}

// GetEnableHelpdeskOk returns a tuple with the EnableHelpdesk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureSettings) GetEnableHelpdeskOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableHelpdesk) {
		return nil, false
	}
	return o.EnableHelpdesk, true
}

// HasEnableHelpdesk returns a boolean if a field has been set.
func (o *FeatureSettings) HasEnableHelpdesk() bool {
	if o != nil && !IsNil(o.EnableHelpdesk) {
		return true
	}

	return false
}

// SetEnableHelpdesk gets a reference to the given bool and assigns it to the EnableHelpdesk field.
func (o *FeatureSettings) SetEnableHelpdesk(v bool) {
	o.EnableHelpdesk = &v
}

// GetEnableImageManagement returns the EnableImageManagement field value if set, zero value otherwise.
func (o *FeatureSettings) GetEnableImageManagement() bool {
	if o == nil || IsNil(o.EnableImageManagement) {
		var ret bool
		return ret
	}
	return *o.EnableImageManagement
}

// GetEnableImageManagementOk returns a tuple with the EnableImageManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeatureSettings) GetEnableImageManagementOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableImageManagement) {
		return nil, false
	}
	return o.EnableImageManagement, true
}

// HasEnableImageManagement returns a boolean if a field has been set.
func (o *FeatureSettings) HasEnableImageManagement() bool {
	if o != nil && !IsNil(o.EnableImageManagement) {
		return true
	}

	return false
}

// SetEnableImageManagement gets a reference to the given bool and assigns it to the EnableImageManagement field.
func (o *FeatureSettings) SetEnableImageManagement(v bool) {
	o.EnableImageManagement = &v
}

func (o FeatureSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeatureSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudManaged) {
		toSerialize["cloud_managed"] = o.CloudManaged
	}
	if !IsNil(o.EnableHelpdesk) {
		toSerialize["enable_helpdesk"] = o.EnableHelpdesk
	}
	if !IsNil(o.EnableImageManagement) {
		toSerialize["enable_image_management"] = o.EnableImageManagement
	}
	return toSerialize, nil
}

type NullableFeatureSettings struct {
	value *FeatureSettings
	isSet bool
}

func (v NullableFeatureSettings) Get() *FeatureSettings {
	return v.value
}

func (v *NullableFeatureSettings) Set(val *FeatureSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureSettings(val *FeatureSettings) *NullableFeatureSettings {
	return &NullableFeatureSettings{value: val, isSet: true}
}

func (v NullableFeatureSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


