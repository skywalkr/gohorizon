/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApplicationIconCreateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationIconCreateSpec{}

// ApplicationIconCreateSpec Information required to create an Application icon.
type ApplicationIconCreateSpec struct {
	// Icon image data in PNG format. This is the Base64 encoded binary data of the image.
	Data string `json:"data" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	// Icon height.
	Height int64 `json:"height"`
	// Icon width.
	Width int64 `json:"width"`
}

type _ApplicationIconCreateSpec ApplicationIconCreateSpec

// NewApplicationIconCreateSpec instantiates a new ApplicationIconCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationIconCreateSpec(data string, height int64, width int64) *ApplicationIconCreateSpec {
	this := ApplicationIconCreateSpec{}
	this.Data = data
	this.Height = height
	this.Width = width
	return &this
}

// NewApplicationIconCreateSpecWithDefaults instantiates a new ApplicationIconCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationIconCreateSpecWithDefaults() *ApplicationIconCreateSpec {
	this := ApplicationIconCreateSpec{}
	return &this
}

// GetData returns the Data field value
func (o *ApplicationIconCreateSpec) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ApplicationIconCreateSpec) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ApplicationIconCreateSpec) SetData(v string) {
	o.Data = v
}

// GetHeight returns the Height field value
func (o *ApplicationIconCreateSpec) GetHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *ApplicationIconCreateSpec) GetHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *ApplicationIconCreateSpec) SetHeight(v int64) {
	o.Height = v
}

// GetWidth returns the Width field value
func (o *ApplicationIconCreateSpec) GetWidth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *ApplicationIconCreateSpec) GetWidthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *ApplicationIconCreateSpec) SetWidth(v int64) {
	o.Width = v
}

func (o ApplicationIconCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationIconCreateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["height"] = o.Height
	toSerialize["width"] = o.Width
	return toSerialize, nil
}

func (o *ApplicationIconCreateSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"height",
		"width",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplicationIconCreateSpec := _ApplicationIconCreateSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApplicationIconCreateSpec)

	if err != nil {
		return err
	}

	*o = ApplicationIconCreateSpec(varApplicationIconCreateSpec)

	return err
}

type NullableApplicationIconCreateSpec struct {
	value *ApplicationIconCreateSpec
	isSet bool
}

func (v NullableApplicationIconCreateSpec) Get() *ApplicationIconCreateSpec {
	return v.value
}

func (v *NullableApplicationIconCreateSpec) Set(val *ApplicationIconCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationIconCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationIconCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationIconCreateSpec(val *ApplicationIconCreateSpec) *NullableApplicationIconCreateSpec {
	return &NullableApplicationIconCreateSpec{value: val, isSet: true}
}

func (v NullableApplicationIconCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationIconCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


