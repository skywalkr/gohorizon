/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// ApplicationIconCreateSpec Information required to create an Application icon.
type ApplicationIconCreateSpec struct {
	// Icon image data in PNG format. This is the Base64 encoded binary data of the image.
	Data string `json:"data"`
	// Icon height.
	Height int64 `json:"height"`
	// Icon width.
	Width int64 `json:"width"`
}

// NewApplicationIconCreateSpec instantiates a new ApplicationIconCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationIconCreateSpec(data string, height int64, width int64) *ApplicationIconCreateSpec {
	this := ApplicationIconCreateSpec{}
	this.Data = data
	this.Height = height
	this.Width = width
	return &this
}

// NewApplicationIconCreateSpecWithDefaults instantiates a new ApplicationIconCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationIconCreateSpecWithDefaults() *ApplicationIconCreateSpec {
	this := ApplicationIconCreateSpec{}
	return &this
}

// GetData returns the Data field value
func (o *ApplicationIconCreateSpec) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ApplicationIconCreateSpec) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ApplicationIconCreateSpec) SetData(v string) {
	o.Data = v
}

// GetHeight returns the Height field value
func (o *ApplicationIconCreateSpec) GetHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *ApplicationIconCreateSpec) GetHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *ApplicationIconCreateSpec) SetHeight(v int64) {
	o.Height = v
}

// GetWidth returns the Width field value
func (o *ApplicationIconCreateSpec) GetWidth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *ApplicationIconCreateSpec) GetWidthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *ApplicationIconCreateSpec) SetWidth(v int64) {
	o.Width = v
}

func (o ApplicationIconCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["height"] = o.Height
	}
	if true {
		toSerialize["width"] = o.Width
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationIconCreateSpec struct {
	value *ApplicationIconCreateSpec
	isSet bool
}

func (v NullableApplicationIconCreateSpec) Get() *ApplicationIconCreateSpec {
	return v.value
}

func (v *NullableApplicationIconCreateSpec) Set(val *ApplicationIconCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationIconCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationIconCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationIconCreateSpec(val *ApplicationIconCreateSpec) *NullableApplicationIconCreateSpec {
	return &NullableApplicationIconCreateSpec{value: val, isSet: true}
}

func (v NullableApplicationIconCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationIconCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
