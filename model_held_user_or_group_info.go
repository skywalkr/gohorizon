/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the HeldUserOrGroupInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeldUserOrGroupInfo{}

// HeldUserOrGroupInfo Information related to Held User or Group.
type HeldUserOrGroupInfo struct {
	// Unique SID representing held user or group.
	AdUserOrGroupId *string `json:"ad_user_or_group_id,omitempty"`
}

// NewHeldUserOrGroupInfo instantiates a new HeldUserOrGroupInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeldUserOrGroupInfo() *HeldUserOrGroupInfo {
	this := HeldUserOrGroupInfo{}
	return &this
}

// NewHeldUserOrGroupInfoWithDefaults instantiates a new HeldUserOrGroupInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeldUserOrGroupInfoWithDefaults() *HeldUserOrGroupInfo {
	this := HeldUserOrGroupInfo{}
	return &this
}

// GetAdUserOrGroupId returns the AdUserOrGroupId field value if set, zero value otherwise.
func (o *HeldUserOrGroupInfo) GetAdUserOrGroupId() string {
	if o == nil || IsNil(o.AdUserOrGroupId) {
		var ret string
		return ret
	}
	return *o.AdUserOrGroupId
}

// GetAdUserOrGroupIdOk returns a tuple with the AdUserOrGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeldUserOrGroupInfo) GetAdUserOrGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdUserOrGroupId) {
		return nil, false
	}
	return o.AdUserOrGroupId, true
}

// HasAdUserOrGroupId returns a boolean if a field has been set.
func (o *HeldUserOrGroupInfo) HasAdUserOrGroupId() bool {
	if o != nil && !IsNil(o.AdUserOrGroupId) {
		return true
	}

	return false
}

// SetAdUserOrGroupId gets a reference to the given string and assigns it to the AdUserOrGroupId field.
func (o *HeldUserOrGroupInfo) SetAdUserOrGroupId(v string) {
	o.AdUserOrGroupId = &v
}

func (o HeldUserOrGroupInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeldUserOrGroupInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdUserOrGroupId) {
		toSerialize["ad_user_or_group_id"] = o.AdUserOrGroupId
	}
	return toSerialize, nil
}

type NullableHeldUserOrGroupInfo struct {
	value *HeldUserOrGroupInfo
	isSet bool
}

func (v NullableHeldUserOrGroupInfo) Get() *HeldUserOrGroupInfo {
	return v.value
}

func (v *NullableHeldUserOrGroupInfo) Set(val *HeldUserOrGroupInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHeldUserOrGroupInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHeldUserOrGroupInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeldUserOrGroupInfo(val *HeldUserOrGroupInfo) *NullableHeldUserOrGroupInfo {
	return &NullableHeldUserOrGroupInfo{value: val, isSet: true}
}

func (v NullableHeldUserOrGroupInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeldUserOrGroupInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


