/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// VCMonitorHostDetails Details of the ESX host of the Virtual Center.
type VCMonitorHostDetails struct {
	// API Version of the ESX Host.
	ApiVersion *string `json:"api_version,omitempty"`
	// Name of the cluster of the ESX Host in the Virtual Center.
	ClusterName *string `json:"cluster_name,omitempty"`
	// ESX Host name or IP address.
	Name *string `json:"name,omitempty"`
	// ESX Host version.
	Version *string `json:"version,omitempty"`
	// Types of vGPUs supported by this host.
	VgpuTypes *[]string `json:"vgpu_types,omitempty"`
}

// NewVCMonitorHostDetails instantiates a new VCMonitorHostDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVCMonitorHostDetails() *VCMonitorHostDetails {
	this := VCMonitorHostDetails{}
	return &this
}

// NewVCMonitorHostDetailsWithDefaults instantiates a new VCMonitorHostDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVCMonitorHostDetailsWithDefaults() *VCMonitorHostDetails {
	this := VCMonitorHostDetails{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *VCMonitorHostDetails) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCMonitorHostDetails) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *VCMonitorHostDetails) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *VCMonitorHostDetails) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *VCMonitorHostDetails) GetClusterName() string {
	if o == nil || o.ClusterName == nil {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCMonitorHostDetails) GetClusterNameOk() (*string, bool) {
	if o == nil || o.ClusterName == nil {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *VCMonitorHostDetails) HasClusterName() bool {
	if o != nil && o.ClusterName != nil {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *VCMonitorHostDetails) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VCMonitorHostDetails) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCMonitorHostDetails) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VCMonitorHostDetails) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VCMonitorHostDetails) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VCMonitorHostDetails) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCMonitorHostDetails) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VCMonitorHostDetails) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *VCMonitorHostDetails) SetVersion(v string) {
	o.Version = &v
}

// GetVgpuTypes returns the VgpuTypes field value if set, zero value otherwise.
func (o *VCMonitorHostDetails) GetVgpuTypes() []string {
	if o == nil || o.VgpuTypes == nil {
		var ret []string
		return ret
	}
	return *o.VgpuTypes
}

// GetVgpuTypesOk returns a tuple with the VgpuTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCMonitorHostDetails) GetVgpuTypesOk() (*[]string, bool) {
	if o == nil || o.VgpuTypes == nil {
		return nil, false
	}
	return o.VgpuTypes, true
}

// HasVgpuTypes returns a boolean if a field has been set.
func (o *VCMonitorHostDetails) HasVgpuTypes() bool {
	if o != nil && o.VgpuTypes != nil {
		return true
	}

	return false
}

// SetVgpuTypes gets a reference to the given []string and assigns it to the VgpuTypes field.
func (o *VCMonitorHostDetails) SetVgpuTypes(v []string) {
	o.VgpuTypes = &v
}

func (o VCMonitorHostDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.ClusterName != nil {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.VgpuTypes != nil {
		toSerialize["vgpu_types"] = o.VgpuTypes
	}
	return json.Marshal(toSerialize)
}

type NullableVCMonitorHostDetails struct {
	value *VCMonitorHostDetails
	isSet bool
}

func (v NullableVCMonitorHostDetails) Get() *VCMonitorHostDetails {
	return v.value
}

func (v *NullableVCMonitorHostDetails) Set(val *VCMonitorHostDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVCMonitorHostDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVCMonitorHostDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVCMonitorHostDetails(val *VCMonitorHostDetails) *NullableVCMonitorHostDetails {
	return &NullableVCMonitorHostDetails{value: val, isSet: true}
}

func (v NullableVCMonitorHostDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVCMonitorHostDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
