/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the GlobalSessionSecurityGatewayData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalSessionSecurityGatewayData{}

// GlobalSessionSecurityGatewayData Security gateway data for the session.
type GlobalSessionSecurityGatewayData struct {
	// IP Address of the security gateway for the session.
	Address *string `json:"address,omitempty"`
	// Computer machine name or DNS name of the security gateway for the session.
	DomainName *string `json:"domain_name,omitempty"`
	// IP Address of the security gateway for the session. * EXTERNAL: Gateway location is external. * INTERNAL: Gateway location is internal. * UNKNOWN: Gateway location is unknown.
	Location *string `json:"location,omitempty"`
}

// NewGlobalSessionSecurityGatewayData instantiates a new GlobalSessionSecurityGatewayData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalSessionSecurityGatewayData() *GlobalSessionSecurityGatewayData {
	this := GlobalSessionSecurityGatewayData{}
	return &this
}

// NewGlobalSessionSecurityGatewayDataWithDefaults instantiates a new GlobalSessionSecurityGatewayData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalSessionSecurityGatewayDataWithDefaults() *GlobalSessionSecurityGatewayData {
	this := GlobalSessionSecurityGatewayData{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GlobalSessionSecurityGatewayData) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionSecurityGatewayData) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GlobalSessionSecurityGatewayData) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GlobalSessionSecurityGatewayData) SetAddress(v string) {
	o.Address = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *GlobalSessionSecurityGatewayData) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionSecurityGatewayData) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *GlobalSessionSecurityGatewayData) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *GlobalSessionSecurityGatewayData) SetDomainName(v string) {
	o.DomainName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GlobalSessionSecurityGatewayData) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionSecurityGatewayData) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GlobalSessionSecurityGatewayData) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *GlobalSessionSecurityGatewayData) SetLocation(v string) {
	o.Location = &v
}

func (o GlobalSessionSecurityGatewayData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalSessionSecurityGatewayData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.DomainName) {
		toSerialize["domain_name"] = o.DomainName
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullableGlobalSessionSecurityGatewayData struct {
	value *GlobalSessionSecurityGatewayData
	isSet bool
}

func (v NullableGlobalSessionSecurityGatewayData) Get() *GlobalSessionSecurityGatewayData {
	return v.value
}

func (v *NullableGlobalSessionSecurityGatewayData) Set(val *GlobalSessionSecurityGatewayData) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalSessionSecurityGatewayData) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalSessionSecurityGatewayData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalSessionSecurityGatewayData(val *GlobalSessionSecurityGatewayData) *NullableGlobalSessionSecurityGatewayData {
	return &NullableGlobalSessionSecurityGatewayData{value: val, isSet: true}
}

func (v NullableGlobalSessionSecurityGatewayData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalSessionSecurityGatewayData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


