/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the AppVolumesManagerMonitorInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppVolumesManagerMonitorInfo{}

// AppVolumesManagerMonitorInfo Monitoring information related to App volumes Manager registered in the environment.
type AppVolumesManagerMonitorInfo struct {
	// Information about the App volumes Manager connections from each of the connection servers.
	ConnectionServers []AppVolumesManagerMonitorConnectionServer `json:"connection_servers,omitempty"`
	// App volumes Manager Connection description. * SUCCESS: No problem detected. * PROBLEM: Problem detected in connecting to App Volumes Manager.
	Description *string `json:"description,omitempty"`
	// Unique ID of the App volumes Manager.
	Id *string `json:"id,omitempty"`
	// Combined status of the App volumes Manager with respect to all the CS. Set to OK if App volumes Manager is connected with all CS. * ERROR: There has been no contact from the App Volumes Manager. * OK: The App Volumes Manager is working as expected.
	Status *string `json:"status,omitempty"`
	// App volumes Manager url.
	Url *string `json:"url,omitempty"`
	// App volumes Manager version.
	Version *string `json:"version,omitempty"`
}

// NewAppVolumesManagerMonitorInfo instantiates a new AppVolumesManagerMonitorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppVolumesManagerMonitorInfo() *AppVolumesManagerMonitorInfo {
	this := AppVolumesManagerMonitorInfo{}
	return &this
}

// NewAppVolumesManagerMonitorInfoWithDefaults instantiates a new AppVolumesManagerMonitorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppVolumesManagerMonitorInfoWithDefaults() *AppVolumesManagerMonitorInfo {
	this := AppVolumesManagerMonitorInfo{}
	return &this
}

// GetConnectionServers returns the ConnectionServers field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorInfo) GetConnectionServers() []AppVolumesManagerMonitorConnectionServer {
	if o == nil || IsNil(o.ConnectionServers) {
		var ret []AppVolumesManagerMonitorConnectionServer
		return ret
	}
	return o.ConnectionServers
}

// GetConnectionServersOk returns a tuple with the ConnectionServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorInfo) GetConnectionServersOk() ([]AppVolumesManagerMonitorConnectionServer, bool) {
	if o == nil || IsNil(o.ConnectionServers) {
		return nil, false
	}
	return o.ConnectionServers, true
}

// HasConnectionServers returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorInfo) HasConnectionServers() bool {
	if o != nil && !IsNil(o.ConnectionServers) {
		return true
	}

	return false
}

// SetConnectionServers gets a reference to the given []AppVolumesManagerMonitorConnectionServer and assigns it to the ConnectionServers field.
func (o *AppVolumesManagerMonitorInfo) SetConnectionServers(v []AppVolumesManagerMonitorConnectionServer) {
	o.ConnectionServers = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AppVolumesManagerMonitorInfo) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppVolumesManagerMonitorInfo) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AppVolumesManagerMonitorInfo) SetStatus(v string) {
	o.Status = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorInfo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorInfo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorInfo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AppVolumesManagerMonitorInfo) SetUrl(v string) {
	o.Url = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AppVolumesManagerMonitorInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVolumesManagerMonitorInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AppVolumesManagerMonitorInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AppVolumesManagerMonitorInfo) SetVersion(v string) {
	o.Version = &v
}

func (o AppVolumesManagerMonitorInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppVolumesManagerMonitorInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionServers) {
		toSerialize["connection_servers"] = o.ConnectionServers
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAppVolumesManagerMonitorInfo struct {
	value *AppVolumesManagerMonitorInfo
	isSet bool
}

func (v NullableAppVolumesManagerMonitorInfo) Get() *AppVolumesManagerMonitorInfo {
	return v.value
}

func (v *NullableAppVolumesManagerMonitorInfo) Set(val *AppVolumesManagerMonitorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAppVolumesManagerMonitorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAppVolumesManagerMonitorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppVolumesManagerMonitorInfo(val *AppVolumesManagerMonitorInfo) *NullableAppVolumesManagerMonitorInfo {
	return &NullableAppVolumesManagerMonitorInfo{value: val, isSet: true}
}

func (v NullableAppVolumesManagerMonitorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppVolumesManagerMonitorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


