/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// GlobalSessionInfo Information related to Global Session.
type GlobalSessionInfo struct {
	// Version of the agent for the session.
	AgentVersion *string `json:"agent_version,omitempty"`
	// Names of the applications launched in the session. <br>It will only be set when session_type is APPLICATION.
	ApplicationNames *[]string `json:"application_names,omitempty"`
	// SID for the broker user associated with the session.  It will be unset for non-broker sessions.
	BrokerUserId *string `json:"broker_user_id,omitempty"`
	// Indicates whether the session is brokered from a remote pod. <br>This will be set only if the Horizon View agent where the session resides is version 6.0 or later.
	BrokeredRemotely *bool `json:"brokered_remotely,omitempty"`
	// ID of the pod that brokered the session.
	BrokeringPodId *string                  `json:"brokering_pod_id,omitempty"`
	ClientData     *GlobalSessionClientData `json:"client_data,omitempty"`
	// ID of the desktop pool for the desktop session.  This will be unset if the session is not brokered through a desktop pool, such as for direct console access.  This will be unset if the session is hosted by remote pod.
	DesktopPoolId *string `json:"desktop_pool_id,omitempty"`
	// Display name of the desktop pool or name of the farm for the session.  This will be unset if session is not brokered through a desktop pool or a farm, such as for direct console access.
	DesktopPoolOrFarmName *string `json:"desktop_pool_or_farm_name,omitempty"`
	// Source of the desktop pool or farm for the session.  This will be unset if session is not brokered through a desktop pool or a farm, such as for direct console access. * INSTANT_CLONE: The Desktop Pool uses instant clone technology for provisioning the machines. Applicable for AUTOMATED type desktop pools. * LINKED_CLONE: The Desktop Pool uses linked clone technology for provisioning the machines. Applicable for AUTOMATED type desktop pools. * VIRTUAL_CENTER: The Desktop Pool uses Virtual Center as source for provisioning the machines. Applicable for AUTOMATED and MANUAL type desktop pools. * RDS: The Desktop Pool is backed by Farm. The Farm used in this Desktop Pool can be of any Source. * UNMANAGED: The Desktop Pool holds the non-vCenter source machines that includes physical computers, blade PCs and non-vCenter servers. Applicable for MANUAL type desktop pools.
	DesktopPoolOrFarmSource *string `json:"desktop_pool_or_farm_source,omitempty"`
	// Type of the desktop pool or farm for the session.  This will be unset if session is not brokered through a desktop pool or a farm, such as for direct console access. * AUTOMATED: Automated Desktop Pool. * MANUAL: Manual Desktop Pool. * RDS: RDS Desktop Pool.
	DesktopPoolOrFarmType *string `json:"desktop_pool_or_farm_type,omitempty"`
	// Epoch time in milliseconds, when the session was last disconnected.  This will be unset if the machine on which the session resides has an error state, or if the session has never been disconnected.
	DisconnectedTime *int64 `json:"disconnected_time,omitempty"`
	// ID of the farm for the RDS desktop or application session.  This will be unset if the session is not brokered through a farm, such as for direct console access.  This will be unset if the session is hosted by remote pod.
	FarmId *string `json:"farm_id,omitempty"`
	// IDs of the federated access groups associated with the session. <br>This represents the federated access groups associated with the global desktop entitlement or global application entitlements used to launch the session.
	FederatedAccessGroupIds *[]string `json:"federated_access_group_ids,omitempty"`
	// Indicates whether the application session will continue to run indefinitely on reaching global idle timeout or max session timeout.
	ForeverSession *bool `json:"forever_session,omitempty"`
	// IDs of the global application entitlements used to launch applications in the session.  Either this or global_desktop_entitlement_id may be set, but not both.
	GlobalApplicationEntitlementIds *[]string `json:"global_application_entitlement_ids,omitempty"`
	// ID of the global desktop entitlement used to launch the session.  Either this or global_application_entitlement_ids may be set, but not both.
	GlobalDesktopEntitlementId *string `json:"global_desktop_entitlement_id,omitempty"`
	// Unique ID representing a session.
	Id *string `json:"id,omitempty"`
	// Idle time duration in minutes, indicating how long the end user of the session has been idle for.
	IdleDuration *int64 `json:"idle_duration,omitempty"`
	// Duration of the last connection period of the session in milliseconds.  If the session is currently connected, this is the duration that the session has been in connected state.  If the session is currently disconnected, this is the duration of its previous connection period. This will be unset on error.
	LastSessionDurationMs *int64 `json:"last_session_duration_ms,omitempty"`
	// ID of the local access group associated with the session.  For a non-RDS desktop session, this is the access group ID of the desktop pool.  For an RDS desktop session, this is access group ID of the farm of the RDS desktop pool.  For an application session, this is the access group ID of the farm of the application pool.  This will be unset if the session is hosted by remote pod.
	LocalAccessGroupId *string `json:"local_access_group_id,omitempty"`
	// ID of the machine for the session.  This will be unset for RDS desktop or application sessions.  If desktop_pool_id is unset, it is the id of registered unmanaged physical machine.  This will be unset if the session is hosted by remote pod.
	MachineId *string `json:"machine_id,omitempty"`
	// DNS name of the machine or RDS server for the session.
	MachineOrRdsServerDnsName *string `json:"machine_or_rds_server_dns_name,omitempty"`
	// ID of the pod that provided the resource for the session.
	PodId *string `json:"pod_id,omitempty"`
	// ID of the RDS server for the RDS desktop or application session. <br>This will be unset if the session is hosted by remote pod.
	RdsServerId *string `json:"rds_server_id,omitempty"`
	// Indicates whether the session is running on a remote pod resource.
	ResourcedRemotely   *bool                             `json:"resourced_remotely,omitempty"`
	SecurityGatewayData *GlobalSessionSecurityGatewayData `json:"security_gateway_data,omitempty"`
	// Protocol for session. This will be unset for disconnected sessions. * PCOIP: Display protocol is PCoIP. * RDP: Display protocol is RDP. * BLAST: Display protocol is BLAST. * CONSOLE: Display protocol is console. * UNKNOWN: Display protocol is unknown.
	SessionProtocol *string `json:"session_protocol,omitempty"`
	// State of session. * CONNECTED: Session is connected * DISCONNECTED: Session is disconnected * PENDING: Session is pending
	SessionState *string `json:"session_state,omitempty"`
	// Type of session. * DESKTOP: Desktop or RDS desktop session. * APPLICATION: Application session.
	SessionType *string `json:"session_type,omitempty"`
	// ID of the site where the pod that resourced the session belongs.
	SiteId *string `json:"site_id,omitempty"`
	// Epoch time in milliseconds when this session was originally logged in.  The lifecycle of a session begins at login and ends at logout, with any number of connect and disconnect occurrences between.  The first connection time will be shortly after this time.
	StartTime *int64 `json:"start_time,omitempty"`
	// Indicates whether the session belongs to unauthenticated access user.
	Unauthenticated *bool `json:"unauthenticated,omitempty"`
	//  SID of the user logged into the session.  It may not match the broker user id for non-SSO scenarios.
	UserId *string `json:"user_id,omitempty"`
}

// NewGlobalSessionInfo instantiates a new GlobalSessionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalSessionInfo() *GlobalSessionInfo {
	this := GlobalSessionInfo{}
	return &this
}

// NewGlobalSessionInfoWithDefaults instantiates a new GlobalSessionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalSessionInfoWithDefaults() *GlobalSessionInfo {
	this := GlobalSessionInfo{}
	return &this
}

// GetAgentVersion returns the AgentVersion field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetAgentVersion() string {
	if o == nil || o.AgentVersion == nil {
		var ret string
		return ret
	}
	return *o.AgentVersion
}

// GetAgentVersionOk returns a tuple with the AgentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetAgentVersionOk() (*string, bool) {
	if o == nil || o.AgentVersion == nil {
		return nil, false
	}
	return o.AgentVersion, true
}

// HasAgentVersion returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasAgentVersion() bool {
	if o != nil && o.AgentVersion != nil {
		return true
	}

	return false
}

// SetAgentVersion gets a reference to the given string and assigns it to the AgentVersion field.
func (o *GlobalSessionInfo) SetAgentVersion(v string) {
	o.AgentVersion = &v
}

// GetApplicationNames returns the ApplicationNames field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetApplicationNames() []string {
	if o == nil || o.ApplicationNames == nil {
		var ret []string
		return ret
	}
	return *o.ApplicationNames
}

// GetApplicationNamesOk returns a tuple with the ApplicationNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetApplicationNamesOk() (*[]string, bool) {
	if o == nil || o.ApplicationNames == nil {
		return nil, false
	}
	return o.ApplicationNames, true
}

// HasApplicationNames returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasApplicationNames() bool {
	if o != nil && o.ApplicationNames != nil {
		return true
	}

	return false
}

// SetApplicationNames gets a reference to the given []string and assigns it to the ApplicationNames field.
func (o *GlobalSessionInfo) SetApplicationNames(v []string) {
	o.ApplicationNames = &v
}

// GetBrokerUserId returns the BrokerUserId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetBrokerUserId() string {
	if o == nil || o.BrokerUserId == nil {
		var ret string
		return ret
	}
	return *o.BrokerUserId
}

// GetBrokerUserIdOk returns a tuple with the BrokerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetBrokerUserIdOk() (*string, bool) {
	if o == nil || o.BrokerUserId == nil {
		return nil, false
	}
	return o.BrokerUserId, true
}

// HasBrokerUserId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasBrokerUserId() bool {
	if o != nil && o.BrokerUserId != nil {
		return true
	}

	return false
}

// SetBrokerUserId gets a reference to the given string and assigns it to the BrokerUserId field.
func (o *GlobalSessionInfo) SetBrokerUserId(v string) {
	o.BrokerUserId = &v
}

// GetBrokeredRemotely returns the BrokeredRemotely field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetBrokeredRemotely() bool {
	if o == nil || o.BrokeredRemotely == nil {
		var ret bool
		return ret
	}
	return *o.BrokeredRemotely
}

// GetBrokeredRemotelyOk returns a tuple with the BrokeredRemotely field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetBrokeredRemotelyOk() (*bool, bool) {
	if o == nil || o.BrokeredRemotely == nil {
		return nil, false
	}
	return o.BrokeredRemotely, true
}

// HasBrokeredRemotely returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasBrokeredRemotely() bool {
	if o != nil && o.BrokeredRemotely != nil {
		return true
	}

	return false
}

// SetBrokeredRemotely gets a reference to the given bool and assigns it to the BrokeredRemotely field.
func (o *GlobalSessionInfo) SetBrokeredRemotely(v bool) {
	o.BrokeredRemotely = &v
}

// GetBrokeringPodId returns the BrokeringPodId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetBrokeringPodId() string {
	if o == nil || o.BrokeringPodId == nil {
		var ret string
		return ret
	}
	return *o.BrokeringPodId
}

// GetBrokeringPodIdOk returns a tuple with the BrokeringPodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetBrokeringPodIdOk() (*string, bool) {
	if o == nil || o.BrokeringPodId == nil {
		return nil, false
	}
	return o.BrokeringPodId, true
}

// HasBrokeringPodId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasBrokeringPodId() bool {
	if o != nil && o.BrokeringPodId != nil {
		return true
	}

	return false
}

// SetBrokeringPodId gets a reference to the given string and assigns it to the BrokeringPodId field.
func (o *GlobalSessionInfo) SetBrokeringPodId(v string) {
	o.BrokeringPodId = &v
}

// GetClientData returns the ClientData field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetClientData() GlobalSessionClientData {
	if o == nil || o.ClientData == nil {
		var ret GlobalSessionClientData
		return ret
	}
	return *o.ClientData
}

// GetClientDataOk returns a tuple with the ClientData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetClientDataOk() (*GlobalSessionClientData, bool) {
	if o == nil || o.ClientData == nil {
		return nil, false
	}
	return o.ClientData, true
}

// HasClientData returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasClientData() bool {
	if o != nil && o.ClientData != nil {
		return true
	}

	return false
}

// SetClientData gets a reference to the given GlobalSessionClientData and assigns it to the ClientData field.
func (o *GlobalSessionInfo) SetClientData(v GlobalSessionClientData) {
	o.ClientData = &v
}

// GetDesktopPoolId returns the DesktopPoolId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetDesktopPoolId() string {
	if o == nil || o.DesktopPoolId == nil {
		var ret string
		return ret
	}
	return *o.DesktopPoolId
}

// GetDesktopPoolIdOk returns a tuple with the DesktopPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetDesktopPoolIdOk() (*string, bool) {
	if o == nil || o.DesktopPoolId == nil {
		return nil, false
	}
	return o.DesktopPoolId, true
}

// HasDesktopPoolId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasDesktopPoolId() bool {
	if o != nil && o.DesktopPoolId != nil {
		return true
	}

	return false
}

// SetDesktopPoolId gets a reference to the given string and assigns it to the DesktopPoolId field.
func (o *GlobalSessionInfo) SetDesktopPoolId(v string) {
	o.DesktopPoolId = &v
}

// GetDesktopPoolOrFarmName returns the DesktopPoolOrFarmName field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetDesktopPoolOrFarmName() string {
	if o == nil || o.DesktopPoolOrFarmName == nil {
		var ret string
		return ret
	}
	return *o.DesktopPoolOrFarmName
}

// GetDesktopPoolOrFarmNameOk returns a tuple with the DesktopPoolOrFarmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetDesktopPoolOrFarmNameOk() (*string, bool) {
	if o == nil || o.DesktopPoolOrFarmName == nil {
		return nil, false
	}
	return o.DesktopPoolOrFarmName, true
}

// HasDesktopPoolOrFarmName returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasDesktopPoolOrFarmName() bool {
	if o != nil && o.DesktopPoolOrFarmName != nil {
		return true
	}

	return false
}

// SetDesktopPoolOrFarmName gets a reference to the given string and assigns it to the DesktopPoolOrFarmName field.
func (o *GlobalSessionInfo) SetDesktopPoolOrFarmName(v string) {
	o.DesktopPoolOrFarmName = &v
}

// GetDesktopPoolOrFarmSource returns the DesktopPoolOrFarmSource field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetDesktopPoolOrFarmSource() string {
	if o == nil || o.DesktopPoolOrFarmSource == nil {
		var ret string
		return ret
	}
	return *o.DesktopPoolOrFarmSource
}

// GetDesktopPoolOrFarmSourceOk returns a tuple with the DesktopPoolOrFarmSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetDesktopPoolOrFarmSourceOk() (*string, bool) {
	if o == nil || o.DesktopPoolOrFarmSource == nil {
		return nil, false
	}
	return o.DesktopPoolOrFarmSource, true
}

// HasDesktopPoolOrFarmSource returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasDesktopPoolOrFarmSource() bool {
	if o != nil && o.DesktopPoolOrFarmSource != nil {
		return true
	}

	return false
}

// SetDesktopPoolOrFarmSource gets a reference to the given string and assigns it to the DesktopPoolOrFarmSource field.
func (o *GlobalSessionInfo) SetDesktopPoolOrFarmSource(v string) {
	o.DesktopPoolOrFarmSource = &v
}

// GetDesktopPoolOrFarmType returns the DesktopPoolOrFarmType field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetDesktopPoolOrFarmType() string {
	if o == nil || o.DesktopPoolOrFarmType == nil {
		var ret string
		return ret
	}
	return *o.DesktopPoolOrFarmType
}

// GetDesktopPoolOrFarmTypeOk returns a tuple with the DesktopPoolOrFarmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetDesktopPoolOrFarmTypeOk() (*string, bool) {
	if o == nil || o.DesktopPoolOrFarmType == nil {
		return nil, false
	}
	return o.DesktopPoolOrFarmType, true
}

// HasDesktopPoolOrFarmType returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasDesktopPoolOrFarmType() bool {
	if o != nil && o.DesktopPoolOrFarmType != nil {
		return true
	}

	return false
}

// SetDesktopPoolOrFarmType gets a reference to the given string and assigns it to the DesktopPoolOrFarmType field.
func (o *GlobalSessionInfo) SetDesktopPoolOrFarmType(v string) {
	o.DesktopPoolOrFarmType = &v
}

// GetDisconnectedTime returns the DisconnectedTime field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetDisconnectedTime() int64 {
	if o == nil || o.DisconnectedTime == nil {
		var ret int64
		return ret
	}
	return *o.DisconnectedTime
}

// GetDisconnectedTimeOk returns a tuple with the DisconnectedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetDisconnectedTimeOk() (*int64, bool) {
	if o == nil || o.DisconnectedTime == nil {
		return nil, false
	}
	return o.DisconnectedTime, true
}

// HasDisconnectedTime returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasDisconnectedTime() bool {
	if o != nil && o.DisconnectedTime != nil {
		return true
	}

	return false
}

// SetDisconnectedTime gets a reference to the given int64 and assigns it to the DisconnectedTime field.
func (o *GlobalSessionInfo) SetDisconnectedTime(v int64) {
	o.DisconnectedTime = &v
}

// GetFarmId returns the FarmId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetFarmId() string {
	if o == nil || o.FarmId == nil {
		var ret string
		return ret
	}
	return *o.FarmId
}

// GetFarmIdOk returns a tuple with the FarmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetFarmIdOk() (*string, bool) {
	if o == nil || o.FarmId == nil {
		return nil, false
	}
	return o.FarmId, true
}

// HasFarmId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasFarmId() bool {
	if o != nil && o.FarmId != nil {
		return true
	}

	return false
}

// SetFarmId gets a reference to the given string and assigns it to the FarmId field.
func (o *GlobalSessionInfo) SetFarmId(v string) {
	o.FarmId = &v
}

// GetFederatedAccessGroupIds returns the FederatedAccessGroupIds field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetFederatedAccessGroupIds() []string {
	if o == nil || o.FederatedAccessGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.FederatedAccessGroupIds
}

// GetFederatedAccessGroupIdsOk returns a tuple with the FederatedAccessGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetFederatedAccessGroupIdsOk() (*[]string, bool) {
	if o == nil || o.FederatedAccessGroupIds == nil {
		return nil, false
	}
	return o.FederatedAccessGroupIds, true
}

// HasFederatedAccessGroupIds returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasFederatedAccessGroupIds() bool {
	if o != nil && o.FederatedAccessGroupIds != nil {
		return true
	}

	return false
}

// SetFederatedAccessGroupIds gets a reference to the given []string and assigns it to the FederatedAccessGroupIds field.
func (o *GlobalSessionInfo) SetFederatedAccessGroupIds(v []string) {
	o.FederatedAccessGroupIds = &v
}

// GetForeverSession returns the ForeverSession field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetForeverSession() bool {
	if o == nil || o.ForeverSession == nil {
		var ret bool
		return ret
	}
	return *o.ForeverSession
}

// GetForeverSessionOk returns a tuple with the ForeverSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetForeverSessionOk() (*bool, bool) {
	if o == nil || o.ForeverSession == nil {
		return nil, false
	}
	return o.ForeverSession, true
}

// HasForeverSession returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasForeverSession() bool {
	if o != nil && o.ForeverSession != nil {
		return true
	}

	return false
}

// SetForeverSession gets a reference to the given bool and assigns it to the ForeverSession field.
func (o *GlobalSessionInfo) SetForeverSession(v bool) {
	o.ForeverSession = &v
}

// GetGlobalApplicationEntitlementIds returns the GlobalApplicationEntitlementIds field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetGlobalApplicationEntitlementIds() []string {
	if o == nil || o.GlobalApplicationEntitlementIds == nil {
		var ret []string
		return ret
	}
	return *o.GlobalApplicationEntitlementIds
}

// GetGlobalApplicationEntitlementIdsOk returns a tuple with the GlobalApplicationEntitlementIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetGlobalApplicationEntitlementIdsOk() (*[]string, bool) {
	if o == nil || o.GlobalApplicationEntitlementIds == nil {
		return nil, false
	}
	return o.GlobalApplicationEntitlementIds, true
}

// HasGlobalApplicationEntitlementIds returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasGlobalApplicationEntitlementIds() bool {
	if o != nil && o.GlobalApplicationEntitlementIds != nil {
		return true
	}

	return false
}

// SetGlobalApplicationEntitlementIds gets a reference to the given []string and assigns it to the GlobalApplicationEntitlementIds field.
func (o *GlobalSessionInfo) SetGlobalApplicationEntitlementIds(v []string) {
	o.GlobalApplicationEntitlementIds = &v
}

// GetGlobalDesktopEntitlementId returns the GlobalDesktopEntitlementId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetGlobalDesktopEntitlementId() string {
	if o == nil || o.GlobalDesktopEntitlementId == nil {
		var ret string
		return ret
	}
	return *o.GlobalDesktopEntitlementId
}

// GetGlobalDesktopEntitlementIdOk returns a tuple with the GlobalDesktopEntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetGlobalDesktopEntitlementIdOk() (*string, bool) {
	if o == nil || o.GlobalDesktopEntitlementId == nil {
		return nil, false
	}
	return o.GlobalDesktopEntitlementId, true
}

// HasGlobalDesktopEntitlementId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasGlobalDesktopEntitlementId() bool {
	if o != nil && o.GlobalDesktopEntitlementId != nil {
		return true
	}

	return false
}

// SetGlobalDesktopEntitlementId gets a reference to the given string and assigns it to the GlobalDesktopEntitlementId field.
func (o *GlobalSessionInfo) SetGlobalDesktopEntitlementId(v string) {
	o.GlobalDesktopEntitlementId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GlobalSessionInfo) SetId(v string) {
	o.Id = &v
}

// GetIdleDuration returns the IdleDuration field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetIdleDuration() int64 {
	if o == nil || o.IdleDuration == nil {
		var ret int64
		return ret
	}
	return *o.IdleDuration
}

// GetIdleDurationOk returns a tuple with the IdleDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetIdleDurationOk() (*int64, bool) {
	if o == nil || o.IdleDuration == nil {
		return nil, false
	}
	return o.IdleDuration, true
}

// HasIdleDuration returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasIdleDuration() bool {
	if o != nil && o.IdleDuration != nil {
		return true
	}

	return false
}

// SetIdleDuration gets a reference to the given int64 and assigns it to the IdleDuration field.
func (o *GlobalSessionInfo) SetIdleDuration(v int64) {
	o.IdleDuration = &v
}

// GetLastSessionDurationMs returns the LastSessionDurationMs field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetLastSessionDurationMs() int64 {
	if o == nil || o.LastSessionDurationMs == nil {
		var ret int64
		return ret
	}
	return *o.LastSessionDurationMs
}

// GetLastSessionDurationMsOk returns a tuple with the LastSessionDurationMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetLastSessionDurationMsOk() (*int64, bool) {
	if o == nil || o.LastSessionDurationMs == nil {
		return nil, false
	}
	return o.LastSessionDurationMs, true
}

// HasLastSessionDurationMs returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasLastSessionDurationMs() bool {
	if o != nil && o.LastSessionDurationMs != nil {
		return true
	}

	return false
}

// SetLastSessionDurationMs gets a reference to the given int64 and assigns it to the LastSessionDurationMs field.
func (o *GlobalSessionInfo) SetLastSessionDurationMs(v int64) {
	o.LastSessionDurationMs = &v
}

// GetLocalAccessGroupId returns the LocalAccessGroupId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetLocalAccessGroupId() string {
	if o == nil || o.LocalAccessGroupId == nil {
		var ret string
		return ret
	}
	return *o.LocalAccessGroupId
}

// GetLocalAccessGroupIdOk returns a tuple with the LocalAccessGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetLocalAccessGroupIdOk() (*string, bool) {
	if o == nil || o.LocalAccessGroupId == nil {
		return nil, false
	}
	return o.LocalAccessGroupId, true
}

// HasLocalAccessGroupId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasLocalAccessGroupId() bool {
	if o != nil && o.LocalAccessGroupId != nil {
		return true
	}

	return false
}

// SetLocalAccessGroupId gets a reference to the given string and assigns it to the LocalAccessGroupId field.
func (o *GlobalSessionInfo) SetLocalAccessGroupId(v string) {
	o.LocalAccessGroupId = &v
}

// GetMachineId returns the MachineId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetMachineId() string {
	if o == nil || o.MachineId == nil {
		var ret string
		return ret
	}
	return *o.MachineId
}

// GetMachineIdOk returns a tuple with the MachineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetMachineIdOk() (*string, bool) {
	if o == nil || o.MachineId == nil {
		return nil, false
	}
	return o.MachineId, true
}

// HasMachineId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasMachineId() bool {
	if o != nil && o.MachineId != nil {
		return true
	}

	return false
}

// SetMachineId gets a reference to the given string and assigns it to the MachineId field.
func (o *GlobalSessionInfo) SetMachineId(v string) {
	o.MachineId = &v
}

// GetMachineOrRdsServerDnsName returns the MachineOrRdsServerDnsName field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetMachineOrRdsServerDnsName() string {
	if o == nil || o.MachineOrRdsServerDnsName == nil {
		var ret string
		return ret
	}
	return *o.MachineOrRdsServerDnsName
}

// GetMachineOrRdsServerDnsNameOk returns a tuple with the MachineOrRdsServerDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetMachineOrRdsServerDnsNameOk() (*string, bool) {
	if o == nil || o.MachineOrRdsServerDnsName == nil {
		return nil, false
	}
	return o.MachineOrRdsServerDnsName, true
}

// HasMachineOrRdsServerDnsName returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasMachineOrRdsServerDnsName() bool {
	if o != nil && o.MachineOrRdsServerDnsName != nil {
		return true
	}

	return false
}

// SetMachineOrRdsServerDnsName gets a reference to the given string and assigns it to the MachineOrRdsServerDnsName field.
func (o *GlobalSessionInfo) SetMachineOrRdsServerDnsName(v string) {
	o.MachineOrRdsServerDnsName = &v
}

// GetPodId returns the PodId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetPodId() string {
	if o == nil || o.PodId == nil {
		var ret string
		return ret
	}
	return *o.PodId
}

// GetPodIdOk returns a tuple with the PodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetPodIdOk() (*string, bool) {
	if o == nil || o.PodId == nil {
		return nil, false
	}
	return o.PodId, true
}

// HasPodId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasPodId() bool {
	if o != nil && o.PodId != nil {
		return true
	}

	return false
}

// SetPodId gets a reference to the given string and assigns it to the PodId field.
func (o *GlobalSessionInfo) SetPodId(v string) {
	o.PodId = &v
}

// GetRdsServerId returns the RdsServerId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetRdsServerId() string {
	if o == nil || o.RdsServerId == nil {
		var ret string
		return ret
	}
	return *o.RdsServerId
}

// GetRdsServerIdOk returns a tuple with the RdsServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetRdsServerIdOk() (*string, bool) {
	if o == nil || o.RdsServerId == nil {
		return nil, false
	}
	return o.RdsServerId, true
}

// HasRdsServerId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasRdsServerId() bool {
	if o != nil && o.RdsServerId != nil {
		return true
	}

	return false
}

// SetRdsServerId gets a reference to the given string and assigns it to the RdsServerId field.
func (o *GlobalSessionInfo) SetRdsServerId(v string) {
	o.RdsServerId = &v
}

// GetResourcedRemotely returns the ResourcedRemotely field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetResourcedRemotely() bool {
	if o == nil || o.ResourcedRemotely == nil {
		var ret bool
		return ret
	}
	return *o.ResourcedRemotely
}

// GetResourcedRemotelyOk returns a tuple with the ResourcedRemotely field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetResourcedRemotelyOk() (*bool, bool) {
	if o == nil || o.ResourcedRemotely == nil {
		return nil, false
	}
	return o.ResourcedRemotely, true
}

// HasResourcedRemotely returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasResourcedRemotely() bool {
	if o != nil && o.ResourcedRemotely != nil {
		return true
	}

	return false
}

// SetResourcedRemotely gets a reference to the given bool and assigns it to the ResourcedRemotely field.
func (o *GlobalSessionInfo) SetResourcedRemotely(v bool) {
	o.ResourcedRemotely = &v
}

// GetSecurityGatewayData returns the SecurityGatewayData field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetSecurityGatewayData() GlobalSessionSecurityGatewayData {
	if o == nil || o.SecurityGatewayData == nil {
		var ret GlobalSessionSecurityGatewayData
		return ret
	}
	return *o.SecurityGatewayData
}

// GetSecurityGatewayDataOk returns a tuple with the SecurityGatewayData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetSecurityGatewayDataOk() (*GlobalSessionSecurityGatewayData, bool) {
	if o == nil || o.SecurityGatewayData == nil {
		return nil, false
	}
	return o.SecurityGatewayData, true
}

// HasSecurityGatewayData returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasSecurityGatewayData() bool {
	if o != nil && o.SecurityGatewayData != nil {
		return true
	}

	return false
}

// SetSecurityGatewayData gets a reference to the given GlobalSessionSecurityGatewayData and assigns it to the SecurityGatewayData field.
func (o *GlobalSessionInfo) SetSecurityGatewayData(v GlobalSessionSecurityGatewayData) {
	o.SecurityGatewayData = &v
}

// GetSessionProtocol returns the SessionProtocol field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetSessionProtocol() string {
	if o == nil || o.SessionProtocol == nil {
		var ret string
		return ret
	}
	return *o.SessionProtocol
}

// GetSessionProtocolOk returns a tuple with the SessionProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetSessionProtocolOk() (*string, bool) {
	if o == nil || o.SessionProtocol == nil {
		return nil, false
	}
	return o.SessionProtocol, true
}

// HasSessionProtocol returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasSessionProtocol() bool {
	if o != nil && o.SessionProtocol != nil {
		return true
	}

	return false
}

// SetSessionProtocol gets a reference to the given string and assigns it to the SessionProtocol field.
func (o *GlobalSessionInfo) SetSessionProtocol(v string) {
	o.SessionProtocol = &v
}

// GetSessionState returns the SessionState field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetSessionState() string {
	if o == nil || o.SessionState == nil {
		var ret string
		return ret
	}
	return *o.SessionState
}

// GetSessionStateOk returns a tuple with the SessionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetSessionStateOk() (*string, bool) {
	if o == nil || o.SessionState == nil {
		return nil, false
	}
	return o.SessionState, true
}

// HasSessionState returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasSessionState() bool {
	if o != nil && o.SessionState != nil {
		return true
	}

	return false
}

// SetSessionState gets a reference to the given string and assigns it to the SessionState field.
func (o *GlobalSessionInfo) SetSessionState(v string) {
	o.SessionState = &v
}

// GetSessionType returns the SessionType field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetSessionType() string {
	if o == nil || o.SessionType == nil {
		var ret string
		return ret
	}
	return *o.SessionType
}

// GetSessionTypeOk returns a tuple with the SessionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetSessionTypeOk() (*string, bool) {
	if o == nil || o.SessionType == nil {
		return nil, false
	}
	return o.SessionType, true
}

// HasSessionType returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasSessionType() bool {
	if o != nil && o.SessionType != nil {
		return true
	}

	return false
}

// SetSessionType gets a reference to the given string and assigns it to the SessionType field.
func (o *GlobalSessionInfo) SetSessionType(v string) {
	o.SessionType = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetSiteId() string {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetSiteIdOk() (*string, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *GlobalSessionInfo) SetSiteId(v string) {
	o.SiteId = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetStartTime() int64 {
	if o == nil || o.StartTime == nil {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetStartTimeOk() (*int64, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *GlobalSessionInfo) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetUnauthenticated returns the Unauthenticated field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetUnauthenticated() bool {
	if o == nil || o.Unauthenticated == nil {
		var ret bool
		return ret
	}
	return *o.Unauthenticated
}

// GetUnauthenticatedOk returns a tuple with the Unauthenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetUnauthenticatedOk() (*bool, bool) {
	if o == nil || o.Unauthenticated == nil {
		return nil, false
	}
	return o.Unauthenticated, true
}

// HasUnauthenticated returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasUnauthenticated() bool {
	if o != nil && o.Unauthenticated != nil {
		return true
	}

	return false
}

// SetUnauthenticated gets a reference to the given bool and assigns it to the Unauthenticated field.
func (o *GlobalSessionInfo) SetUnauthenticated(v bool) {
	o.Unauthenticated = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GlobalSessionInfo) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSessionInfo) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GlobalSessionInfo) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GlobalSessionInfo) SetUserId(v string) {
	o.UserId = &v
}

func (o GlobalSessionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgentVersion != nil {
		toSerialize["agent_version"] = o.AgentVersion
	}
	if o.ApplicationNames != nil {
		toSerialize["application_names"] = o.ApplicationNames
	}
	if o.BrokerUserId != nil {
		toSerialize["broker_user_id"] = o.BrokerUserId
	}
	if o.BrokeredRemotely != nil {
		toSerialize["brokered_remotely"] = o.BrokeredRemotely
	}
	if o.BrokeringPodId != nil {
		toSerialize["brokering_pod_id"] = o.BrokeringPodId
	}
	if o.ClientData != nil {
		toSerialize["client_data"] = o.ClientData
	}
	if o.DesktopPoolId != nil {
		toSerialize["desktop_pool_id"] = o.DesktopPoolId
	}
	if o.DesktopPoolOrFarmName != nil {
		toSerialize["desktop_pool_or_farm_name"] = o.DesktopPoolOrFarmName
	}
	if o.DesktopPoolOrFarmSource != nil {
		toSerialize["desktop_pool_or_farm_source"] = o.DesktopPoolOrFarmSource
	}
	if o.DesktopPoolOrFarmType != nil {
		toSerialize["desktop_pool_or_farm_type"] = o.DesktopPoolOrFarmType
	}
	if o.DisconnectedTime != nil {
		toSerialize["disconnected_time"] = o.DisconnectedTime
	}
	if o.FarmId != nil {
		toSerialize["farm_id"] = o.FarmId
	}
	if o.FederatedAccessGroupIds != nil {
		toSerialize["federated_access_group_ids"] = o.FederatedAccessGroupIds
	}
	if o.ForeverSession != nil {
		toSerialize["forever_session"] = o.ForeverSession
	}
	if o.GlobalApplicationEntitlementIds != nil {
		toSerialize["global_application_entitlement_ids"] = o.GlobalApplicationEntitlementIds
	}
	if o.GlobalDesktopEntitlementId != nil {
		toSerialize["global_desktop_entitlement_id"] = o.GlobalDesktopEntitlementId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IdleDuration != nil {
		toSerialize["idle_duration"] = o.IdleDuration
	}
	if o.LastSessionDurationMs != nil {
		toSerialize["last_session_duration_ms"] = o.LastSessionDurationMs
	}
	if o.LocalAccessGroupId != nil {
		toSerialize["local_access_group_id"] = o.LocalAccessGroupId
	}
	if o.MachineId != nil {
		toSerialize["machine_id"] = o.MachineId
	}
	if o.MachineOrRdsServerDnsName != nil {
		toSerialize["machine_or_rds_server_dns_name"] = o.MachineOrRdsServerDnsName
	}
	if o.PodId != nil {
		toSerialize["pod_id"] = o.PodId
	}
	if o.RdsServerId != nil {
		toSerialize["rds_server_id"] = o.RdsServerId
	}
	if o.ResourcedRemotely != nil {
		toSerialize["resourced_remotely"] = o.ResourcedRemotely
	}
	if o.SecurityGatewayData != nil {
		toSerialize["security_gateway_data"] = o.SecurityGatewayData
	}
	if o.SessionProtocol != nil {
		toSerialize["session_protocol"] = o.SessionProtocol
	}
	if o.SessionState != nil {
		toSerialize["session_state"] = o.SessionState
	}
	if o.SessionType != nil {
		toSerialize["session_type"] = o.SessionType
	}
	if o.SiteId != nil {
		toSerialize["site_id"] = o.SiteId
	}
	if o.StartTime != nil {
		toSerialize["start_time"] = o.StartTime
	}
	if o.Unauthenticated != nil {
		toSerialize["unauthenticated"] = o.Unauthenticated
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableGlobalSessionInfo struct {
	value *GlobalSessionInfo
	isSet bool
}

func (v NullableGlobalSessionInfo) Get() *GlobalSessionInfo {
	return v.value
}

func (v *NullableGlobalSessionInfo) Set(val *GlobalSessionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalSessionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalSessionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalSessionInfo(val *GlobalSessionInfo) *NullableGlobalSessionInfo {
	return &NullableGlobalSessionInfo{value: val, isSet: true}
}

func (v NullableGlobalSessionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalSessionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
