/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2111
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// HomeSiteCreateSpec Information required to create a Home Site in the pod federation.<br>If both Global Desktop Entitlement ID and Global Application Entitlement ID are unset, then this site is the global home site.<br>
type HomeSiteCreateSpec struct {
	// SID of the user or group for whom the home site is to be configured.
	AdUserOrGroupId string `json:"ad_user_or_group_id"`
	// ID of the Global Application Entitlement for which this site is the overriding home site.
	GlobalApplicationEntitlementId *string `json:"global_application_entitlement_id,omitempty"`
	// ID of the Global Desktop Entitlement for which this site is the overriding home site.
	GlobalDesktopEntitlementId *string `json:"global_desktop_entitlement_id,omitempty"`
	// ID of the site for this home site configuration.
	SiteId string `json:"site_id"`
}

// NewHomeSiteCreateSpec instantiates a new HomeSiteCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHomeSiteCreateSpec(adUserOrGroupId string, siteId string) *HomeSiteCreateSpec {
	this := HomeSiteCreateSpec{}
	this.AdUserOrGroupId = adUserOrGroupId
	this.SiteId = siteId
	return &this
}

// NewHomeSiteCreateSpecWithDefaults instantiates a new HomeSiteCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHomeSiteCreateSpecWithDefaults() *HomeSiteCreateSpec {
	this := HomeSiteCreateSpec{}
	return &this
}

// GetAdUserOrGroupId returns the AdUserOrGroupId field value
func (o *HomeSiteCreateSpec) GetAdUserOrGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdUserOrGroupId
}

// GetAdUserOrGroupIdOk returns a tuple with the AdUserOrGroupId field value
// and a boolean to check if the value has been set.
func (o *HomeSiteCreateSpec) GetAdUserOrGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdUserOrGroupId, true
}

// SetAdUserOrGroupId sets field value
func (o *HomeSiteCreateSpec) SetAdUserOrGroupId(v string) {
	o.AdUserOrGroupId = v
}

// GetGlobalApplicationEntitlementId returns the GlobalApplicationEntitlementId field value if set, zero value otherwise.
func (o *HomeSiteCreateSpec) GetGlobalApplicationEntitlementId() string {
	if o == nil || o.GlobalApplicationEntitlementId == nil {
		var ret string
		return ret
	}
	return *o.GlobalApplicationEntitlementId
}

// GetGlobalApplicationEntitlementIdOk returns a tuple with the GlobalApplicationEntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteCreateSpec) GetGlobalApplicationEntitlementIdOk() (*string, bool) {
	if o == nil || o.GlobalApplicationEntitlementId == nil {
		return nil, false
	}
	return o.GlobalApplicationEntitlementId, true
}

// HasGlobalApplicationEntitlementId returns a boolean if a field has been set.
func (o *HomeSiteCreateSpec) HasGlobalApplicationEntitlementId() bool {
	if o != nil && o.GlobalApplicationEntitlementId != nil {
		return true
	}

	return false
}

// SetGlobalApplicationEntitlementId gets a reference to the given string and assigns it to the GlobalApplicationEntitlementId field.
func (o *HomeSiteCreateSpec) SetGlobalApplicationEntitlementId(v string) {
	o.GlobalApplicationEntitlementId = &v
}

// GetGlobalDesktopEntitlementId returns the GlobalDesktopEntitlementId field value if set, zero value otherwise.
func (o *HomeSiteCreateSpec) GetGlobalDesktopEntitlementId() string {
	if o == nil || o.GlobalDesktopEntitlementId == nil {
		var ret string
		return ret
	}
	return *o.GlobalDesktopEntitlementId
}

// GetGlobalDesktopEntitlementIdOk returns a tuple with the GlobalDesktopEntitlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HomeSiteCreateSpec) GetGlobalDesktopEntitlementIdOk() (*string, bool) {
	if o == nil || o.GlobalDesktopEntitlementId == nil {
		return nil, false
	}
	return o.GlobalDesktopEntitlementId, true
}

// HasGlobalDesktopEntitlementId returns a boolean if a field has been set.
func (o *HomeSiteCreateSpec) HasGlobalDesktopEntitlementId() bool {
	if o != nil && o.GlobalDesktopEntitlementId != nil {
		return true
	}

	return false
}

// SetGlobalDesktopEntitlementId gets a reference to the given string and assigns it to the GlobalDesktopEntitlementId field.
func (o *HomeSiteCreateSpec) SetGlobalDesktopEntitlementId(v string) {
	o.GlobalDesktopEntitlementId = &v
}

// GetSiteId returns the SiteId field value
func (o *HomeSiteCreateSpec) GetSiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *HomeSiteCreateSpec) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *HomeSiteCreateSpec) SetSiteId(v string) {
	o.SiteId = v
}

func (o HomeSiteCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ad_user_or_group_id"] = o.AdUserOrGroupId
	}
	if o.GlobalApplicationEntitlementId != nil {
		toSerialize["global_application_entitlement_id"] = o.GlobalApplicationEntitlementId
	}
	if o.GlobalDesktopEntitlementId != nil {
		toSerialize["global_desktop_entitlement_id"] = o.GlobalDesktopEntitlementId
	}
	if true {
		toSerialize["site_id"] = o.SiteId
	}
	return json.Marshal(toSerialize)
}

type NullableHomeSiteCreateSpec struct {
	value *HomeSiteCreateSpec
	isSet bool
}

func (v NullableHomeSiteCreateSpec) Get() *HomeSiteCreateSpec {
	return v.value
}

func (v *NullableHomeSiteCreateSpec) Set(val *HomeSiteCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableHomeSiteCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableHomeSiteCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHomeSiteCreateSpec(val *HomeSiteCreateSpec) *NullableHomeSiteCreateSpec {
	return &NullableHomeSiteCreateSpec{value: val, isSet: true}
}

func (v NullableHomeSiteCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHomeSiteCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
