/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// SAMLAuthenticatorMonitorConnectionServerV2 Information about the SAML authenticator connection from a connection server.
type SAMLAuthenticatorMonitorConnectionServerV2 struct {
	// Unique ID of the Connection Server.
	Id string `json:"id"`
	// The timestamp in milliseconds when the last update was obtained. Measured as epoch time.
	LastUpdatedTimestamp *int64 `json:"last_updated_timestamp,omitempty"`
	// Connection server host name or IP address.
	Name string `json:"name"`
	// Status of the SAML authenticator with respect to this Connection Server. * OK: The connection to SAML authenticator is working properly. * ERROR: Error occurred when connecting to SAML authenticator. * WARN: The connection to SAML authenticator has minor issues. * UNKNOWN: State of SAML authenticator is unknown.
	Status string `json:"status"`
	// Indicates if the thumbprint of the SAML authenticator was accepted.
	ThumbprintAccepted bool `json:"thumbprint_accepted"`
}

// NewSAMLAuthenticatorMonitorConnectionServerV2 instantiates a new SAMLAuthenticatorMonitorConnectionServerV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSAMLAuthenticatorMonitorConnectionServerV2(id string, name string, status string, thumbprintAccepted bool) *SAMLAuthenticatorMonitorConnectionServerV2 {
	this := SAMLAuthenticatorMonitorConnectionServerV2{}
	this.Id = id
	this.Name = name
	this.Status = status
	this.ThumbprintAccepted = thumbprintAccepted
	return &this
}

// NewSAMLAuthenticatorMonitorConnectionServerV2WithDefaults instantiates a new SAMLAuthenticatorMonitorConnectionServerV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSAMLAuthenticatorMonitorConnectionServerV2WithDefaults() *SAMLAuthenticatorMonitorConnectionServerV2 {
	this := SAMLAuthenticatorMonitorConnectionServerV2{}
	return &this
}

// GetId returns the Id field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) SetId(v string) {
	o.Id = v
}

// GetLastUpdatedTimestamp returns the LastUpdatedTimestamp field value if set, zero value otherwise.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetLastUpdatedTimestamp() int64 {
	if o == nil || o.LastUpdatedTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTimestamp
}

// GetLastUpdatedTimestampOk returns a tuple with the LastUpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetLastUpdatedTimestampOk() (*int64, bool) {
	if o == nil || o.LastUpdatedTimestamp == nil {
		return nil, false
	}
	return o.LastUpdatedTimestamp, true
}

// HasLastUpdatedTimestamp returns a boolean if a field has been set.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) HasLastUpdatedTimestamp() bool {
	if o != nil && o.LastUpdatedTimestamp != nil {
		return true
	}

	return false
}

// SetLastUpdatedTimestamp gets a reference to the given int64 and assigns it to the LastUpdatedTimestamp field.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) SetLastUpdatedTimestamp(v int64) {
	o.LastUpdatedTimestamp = &v
}

// GetName returns the Name field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) SetStatus(v string) {
	o.Status = v
}

// GetThumbprintAccepted returns the ThumbprintAccepted field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetThumbprintAccepted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ThumbprintAccepted
}

// GetThumbprintAcceptedOk returns a tuple with the ThumbprintAccepted field value
// and a boolean to check if the value has been set.
func (o *SAMLAuthenticatorMonitorConnectionServerV2) GetThumbprintAcceptedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThumbprintAccepted, true
}

// SetThumbprintAccepted sets field value
func (o *SAMLAuthenticatorMonitorConnectionServerV2) SetThumbprintAccepted(v bool) {
	o.ThumbprintAccepted = v
}

func (o SAMLAuthenticatorMonitorConnectionServerV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.LastUpdatedTimestamp != nil {
		toSerialize["last_updated_timestamp"] = o.LastUpdatedTimestamp
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["thumbprint_accepted"] = o.ThumbprintAccepted
	}
	return json.Marshal(toSerialize)
}

type NullableSAMLAuthenticatorMonitorConnectionServerV2 struct {
	value *SAMLAuthenticatorMonitorConnectionServerV2
	isSet bool
}

func (v NullableSAMLAuthenticatorMonitorConnectionServerV2) Get() *SAMLAuthenticatorMonitorConnectionServerV2 {
	return v.value
}

func (v *NullableSAMLAuthenticatorMonitorConnectionServerV2) Set(val *SAMLAuthenticatorMonitorConnectionServerV2) {
	v.value = val
	v.isSet = true
}

func (v NullableSAMLAuthenticatorMonitorConnectionServerV2) IsSet() bool {
	return v.isSet
}

func (v *NullableSAMLAuthenticatorMonitorConnectionServerV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSAMLAuthenticatorMonitorConnectionServerV2(val *SAMLAuthenticatorMonitorConnectionServerV2) *NullableSAMLAuthenticatorMonitorConnectionServerV2 {
	return &NullableSAMLAuthenticatorMonitorConnectionServerV2{value: val, isSet: true}
}

func (v NullableSAMLAuthenticatorMonitorConnectionServerV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSAMLAuthenticatorMonitorConnectionServerV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
