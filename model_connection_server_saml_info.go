/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the ConnectionServerSAMLInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServerSAMLInfo{}

// ConnectionServerSAMLInfo Information related to connection server SAML authentication settings.
type ConnectionServerSAMLInfo struct {
	// List of SamlAuthenticators to use.
	SamlAuthenticatorIds []string `json:"saml_authenticator_ids,omitempty"`
	// SAML support option. * DISABLED: Indicates that the SAML support is disabled. * MULTI_ENABLED: Indicates that the SAML multi auth support is enabled. * MULTI_REQUIRED: Indicates that the SAML multi auth support is mandatory.
	SamlSupport *string `json:"saml_support,omitempty"`
	// Block old clients that don't support Workspace ONE mode.
	WorkspaceOneBlockOldClients *bool `json:"workspace_one_block_old_clients,omitempty"`
	// The hostname of the Workspace ONE Server.
	WorkspaceOneHostName *string `json:"workspace_one_host_name,omitempty"`
	// Indicates whether Workspace ONE mode is enabled.
	WorkspaceOneModeEnabled *bool `json:"workspace_one_mode_enabled,omitempty"`
}

// NewConnectionServerSAMLInfo instantiates a new ConnectionServerSAMLInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServerSAMLInfo() *ConnectionServerSAMLInfo {
	this := ConnectionServerSAMLInfo{}
	return &this
}

// NewConnectionServerSAMLInfoWithDefaults instantiates a new ConnectionServerSAMLInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServerSAMLInfoWithDefaults() *ConnectionServerSAMLInfo {
	this := ConnectionServerSAMLInfo{}
	return &this
}

// GetSamlAuthenticatorIds returns the SamlAuthenticatorIds field value if set, zero value otherwise.
func (o *ConnectionServerSAMLInfo) GetSamlAuthenticatorIds() []string {
	if o == nil || IsNil(o.SamlAuthenticatorIds) {
		var ret []string
		return ret
	}
	return o.SamlAuthenticatorIds
}

// GetSamlAuthenticatorIdsOk returns a tuple with the SamlAuthenticatorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerSAMLInfo) GetSamlAuthenticatorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SamlAuthenticatorIds) {
		return nil, false
	}
	return o.SamlAuthenticatorIds, true
}

// HasSamlAuthenticatorIds returns a boolean if a field has been set.
func (o *ConnectionServerSAMLInfo) HasSamlAuthenticatorIds() bool {
	if o != nil && !IsNil(o.SamlAuthenticatorIds) {
		return true
	}

	return false
}

// SetSamlAuthenticatorIds gets a reference to the given []string and assigns it to the SamlAuthenticatorIds field.
func (o *ConnectionServerSAMLInfo) SetSamlAuthenticatorIds(v []string) {
	o.SamlAuthenticatorIds = v
}

// GetSamlSupport returns the SamlSupport field value if set, zero value otherwise.
func (o *ConnectionServerSAMLInfo) GetSamlSupport() string {
	if o == nil || IsNil(o.SamlSupport) {
		var ret string
		return ret
	}
	return *o.SamlSupport
}

// GetSamlSupportOk returns a tuple with the SamlSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerSAMLInfo) GetSamlSupportOk() (*string, bool) {
	if o == nil || IsNil(o.SamlSupport) {
		return nil, false
	}
	return o.SamlSupport, true
}

// HasSamlSupport returns a boolean if a field has been set.
func (o *ConnectionServerSAMLInfo) HasSamlSupport() bool {
	if o != nil && !IsNil(o.SamlSupport) {
		return true
	}

	return false
}

// SetSamlSupport gets a reference to the given string and assigns it to the SamlSupport field.
func (o *ConnectionServerSAMLInfo) SetSamlSupport(v string) {
	o.SamlSupport = &v
}

// GetWorkspaceOneBlockOldClients returns the WorkspaceOneBlockOldClients field value if set, zero value otherwise.
func (o *ConnectionServerSAMLInfo) GetWorkspaceOneBlockOldClients() bool {
	if o == nil || IsNil(o.WorkspaceOneBlockOldClients) {
		var ret bool
		return ret
	}
	return *o.WorkspaceOneBlockOldClients
}

// GetWorkspaceOneBlockOldClientsOk returns a tuple with the WorkspaceOneBlockOldClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerSAMLInfo) GetWorkspaceOneBlockOldClientsOk() (*bool, bool) {
	if o == nil || IsNil(o.WorkspaceOneBlockOldClients) {
		return nil, false
	}
	return o.WorkspaceOneBlockOldClients, true
}

// HasWorkspaceOneBlockOldClients returns a boolean if a field has been set.
func (o *ConnectionServerSAMLInfo) HasWorkspaceOneBlockOldClients() bool {
	if o != nil && !IsNil(o.WorkspaceOneBlockOldClients) {
		return true
	}

	return false
}

// SetWorkspaceOneBlockOldClients gets a reference to the given bool and assigns it to the WorkspaceOneBlockOldClients field.
func (o *ConnectionServerSAMLInfo) SetWorkspaceOneBlockOldClients(v bool) {
	o.WorkspaceOneBlockOldClients = &v
}

// GetWorkspaceOneHostName returns the WorkspaceOneHostName field value if set, zero value otherwise.
func (o *ConnectionServerSAMLInfo) GetWorkspaceOneHostName() string {
	if o == nil || IsNil(o.WorkspaceOneHostName) {
		var ret string
		return ret
	}
	return *o.WorkspaceOneHostName
}

// GetWorkspaceOneHostNameOk returns a tuple with the WorkspaceOneHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerSAMLInfo) GetWorkspaceOneHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceOneHostName) {
		return nil, false
	}
	return o.WorkspaceOneHostName, true
}

// HasWorkspaceOneHostName returns a boolean if a field has been set.
func (o *ConnectionServerSAMLInfo) HasWorkspaceOneHostName() bool {
	if o != nil && !IsNil(o.WorkspaceOneHostName) {
		return true
	}

	return false
}

// SetWorkspaceOneHostName gets a reference to the given string and assigns it to the WorkspaceOneHostName field.
func (o *ConnectionServerSAMLInfo) SetWorkspaceOneHostName(v string) {
	o.WorkspaceOneHostName = &v
}

// GetWorkspaceOneModeEnabled returns the WorkspaceOneModeEnabled field value if set, zero value otherwise.
func (o *ConnectionServerSAMLInfo) GetWorkspaceOneModeEnabled() bool {
	if o == nil || IsNil(o.WorkspaceOneModeEnabled) {
		var ret bool
		return ret
	}
	return *o.WorkspaceOneModeEnabled
}

// GetWorkspaceOneModeEnabledOk returns a tuple with the WorkspaceOneModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServerSAMLInfo) GetWorkspaceOneModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.WorkspaceOneModeEnabled) {
		return nil, false
	}
	return o.WorkspaceOneModeEnabled, true
}

// HasWorkspaceOneModeEnabled returns a boolean if a field has been set.
func (o *ConnectionServerSAMLInfo) HasWorkspaceOneModeEnabled() bool {
	if o != nil && !IsNil(o.WorkspaceOneModeEnabled) {
		return true
	}

	return false
}

// SetWorkspaceOneModeEnabled gets a reference to the given bool and assigns it to the WorkspaceOneModeEnabled field.
func (o *ConnectionServerSAMLInfo) SetWorkspaceOneModeEnabled(v bool) {
	o.WorkspaceOneModeEnabled = &v
}

func (o ConnectionServerSAMLInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServerSAMLInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SamlAuthenticatorIds) {
		toSerialize["saml_authenticator_ids"] = o.SamlAuthenticatorIds
	}
	if !IsNil(o.SamlSupport) {
		toSerialize["saml_support"] = o.SamlSupport
	}
	if !IsNil(o.WorkspaceOneBlockOldClients) {
		toSerialize["workspace_one_block_old_clients"] = o.WorkspaceOneBlockOldClients
	}
	if !IsNil(o.WorkspaceOneHostName) {
		toSerialize["workspace_one_host_name"] = o.WorkspaceOneHostName
	}
	if !IsNil(o.WorkspaceOneModeEnabled) {
		toSerialize["workspace_one_mode_enabled"] = o.WorkspaceOneModeEnabled
	}
	return toSerialize, nil
}

type NullableConnectionServerSAMLInfo struct {
	value *ConnectionServerSAMLInfo
	isSet bool
}

func (v NullableConnectionServerSAMLInfo) Get() *ConnectionServerSAMLInfo {
	return v.value
}

func (v *NullableConnectionServerSAMLInfo) Set(val *ConnectionServerSAMLInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServerSAMLInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServerSAMLInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServerSAMLInfo(val *ConnectionServerSAMLInfo) *NullableConnectionServerSAMLInfo {
	return &NullableConnectionServerSAMLInfo{value: val, isSet: true}
}

func (v NullableConnectionServerSAMLInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServerSAMLInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


