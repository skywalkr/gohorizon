/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2212
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// checks if the EntitlementInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementInfo{}

// EntitlementInfo Entitlement Information related to the resource.<br>List API returning this summary information can use search filter queryto filter on specific fields supported by filters.<br>Supported Filters : 'Or','Equals'.<br>See the field description to know the filter types it supports.
type EntitlementInfo struct {
	// List of ad-user-or-group SIDs which are entitled to the given resource.
	AdUserOrGroupIds []string `json:"ad_user_or_group_ids,omitempty"`
	// Unique ID representing the resource.<br>Supported Filters : 'Equals'.
	Id *string `json:"id,omitempty"`
}

// NewEntitlementInfo instantiates a new EntitlementInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementInfo() *EntitlementInfo {
	this := EntitlementInfo{}
	return &this
}

// NewEntitlementInfoWithDefaults instantiates a new EntitlementInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementInfoWithDefaults() *EntitlementInfo {
	this := EntitlementInfo{}
	return &this
}

// GetAdUserOrGroupIds returns the AdUserOrGroupIds field value if set, zero value otherwise.
func (o *EntitlementInfo) GetAdUserOrGroupIds() []string {
	if o == nil || IsNil(o.AdUserOrGroupIds) {
		var ret []string
		return ret
	}
	return o.AdUserOrGroupIds
}

// GetAdUserOrGroupIdsOk returns a tuple with the AdUserOrGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementInfo) GetAdUserOrGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdUserOrGroupIds) {
		return nil, false
	}
	return o.AdUserOrGroupIds, true
}

// HasAdUserOrGroupIds returns a boolean if a field has been set.
func (o *EntitlementInfo) HasAdUserOrGroupIds() bool {
	if o != nil && !IsNil(o.AdUserOrGroupIds) {
		return true
	}

	return false
}

// SetAdUserOrGroupIds gets a reference to the given []string and assigns it to the AdUserOrGroupIds field.
func (o *EntitlementInfo) SetAdUserOrGroupIds(v []string) {
	o.AdUserOrGroupIds = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EntitlementInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EntitlementInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EntitlementInfo) SetId(v string) {
	o.Id = &v
}

func (o EntitlementInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdUserOrGroupIds) {
		toSerialize["ad_user_or_group_ids"] = o.AdUserOrGroupIds
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableEntitlementInfo struct {
	value *EntitlementInfo
	isSet bool
}

func (v NullableEntitlementInfo) Get() *EntitlementInfo {
	return v.value
}

func (v *NullableEntitlementInfo) Set(val *EntitlementInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementInfo(val *EntitlementInfo) *NullableEntitlementInfo {
	return &NullableEntitlementInfo{value: val, isSet: true}
}

func (v NullableEntitlementInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


