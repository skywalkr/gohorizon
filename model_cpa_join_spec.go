/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// CPAJoinSpec struct for CPAJoinSpec
type CPAJoinSpec struct {
	// The password for the user.
	Password []string `json:"password"`
	// The IP address or hostname for the remote pod.
	RemotePodAddress string `json:"remote_pod_address"`
	// The user name, along with domain name, with sufficient privilege to perform a global LDAP join against the remote pod. The down-level logon name format (domain\\username) is allowed.
	Username string `json:"username"`
}

// NewCPAJoinSpec instantiates a new CPAJoinSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCPAJoinSpec(password []string, remotePodAddress string, username string) *CPAJoinSpec {
	this := CPAJoinSpec{}
	this.Password = password
	this.RemotePodAddress = remotePodAddress
	this.Username = username
	return &this
}

// NewCPAJoinSpecWithDefaults instantiates a new CPAJoinSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCPAJoinSpecWithDefaults() *CPAJoinSpec {
	this := CPAJoinSpec{}
	return &this
}

// GetPassword returns the Password field value
func (o *CPAJoinSpec) GetPassword() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CPAJoinSpec) GetPasswordOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CPAJoinSpec) SetPassword(v []string) {
	o.Password = v
}

// GetRemotePodAddress returns the RemotePodAddress field value
func (o *CPAJoinSpec) GetRemotePodAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemotePodAddress
}

// GetRemotePodAddressOk returns a tuple with the RemotePodAddress field value
// and a boolean to check if the value has been set.
func (o *CPAJoinSpec) GetRemotePodAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemotePodAddress, true
}

// SetRemotePodAddress sets field value
func (o *CPAJoinSpec) SetRemotePodAddress(v string) {
	o.RemotePodAddress = v
}

// GetUsername returns the Username field value
func (o *CPAJoinSpec) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CPAJoinSpec) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CPAJoinSpec) SetUsername(v string) {
	o.Username = v
}

func (o CPAJoinSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["remote_pod_address"] = o.RemotePodAddress
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableCPAJoinSpec struct {
	value *CPAJoinSpec
	isSet bool
}

func (v NullableCPAJoinSpec) Get() *CPAJoinSpec {
	return v.value
}

func (v *NullableCPAJoinSpec) Set(val *CPAJoinSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCPAJoinSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCPAJoinSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCPAJoinSpec(val *CPAJoinSpec) *NullableCPAJoinSpec {
	return &NullableCPAJoinSpec{value: val, isSet: true}
}

func (v NullableCPAJoinSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCPAJoinSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
