/*
Horizon Server API

Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.

API version: 2106
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gohorizon

import (
	"encoding/json"
)

// AuthTokens Authentication Tokens
type AuthTokens struct {
	// Access Token to be used in API calls.
	AccessToken string `json:"access_token"`
	// Refresh Token to be used to get a new Access token.
	RefreshToken string `json:"refresh_token"`
}

// NewAuthTokens instantiates a new AuthTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthTokens(accessToken string, refreshToken string) *AuthTokens {
	this := AuthTokens{}
	this.AccessToken = accessToken
	this.RefreshToken = refreshToken
	return &this
}

// NewAuthTokensWithDefaults instantiates a new AuthTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthTokensWithDefaults() *AuthTokens {
	this := AuthTokens{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *AuthTokens) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *AuthTokens) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *AuthTokens) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *AuthTokens) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *AuthTokens) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *AuthTokens) SetRefreshToken(v string) {
	o.RefreshToken = v
}

func (o AuthTokens) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	return json.Marshal(toSerialize)
}

type NullableAuthTokens struct {
	value *AuthTokens
	isSet bool
}

func (v NullableAuthTokens) Get() *AuthTokens {
	return v.value
}

func (v *NullableAuthTokens) Set(val *AuthTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthTokens(val *AuthTokens) *NullableAuthTokens {
	return &NullableAuthTokens{value: val, isSet: true}
}

func (v NullableAuthTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
